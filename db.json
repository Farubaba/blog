{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/cactus-dark-green/source/css/rtl.styl","path":"css/rtl.styl","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/15、remove-maven-webapp-default-sufix-MavenWebapp.png","path":"images/15、remove-maven-webapp-default-sufix-MavenWebapp.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/TDD-testing-workflow.png","path":"images/TDD-testing-workflow.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/8、android不同版本sdcard软链接.png","path":"images/8、android不同版本sdcard软链接.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/testing-pyramid-2x.png","path":"images/testing-pyramid-2x.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/14、maven-child-module-not-exist.png","path":"images/14、maven-child-module-not-exist.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/6、android-system目录.png","path":"images/6、android-system目录.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/7、android-mnt目录.png","path":"images/7、android-mnt目录.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Bold.woff","path":"lib/vazir-font/Vazir-Bold.woff","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Bold.woff2","path":"lib/vazir-font/Vazir-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Light.woff","path":"lib/vazir-font/Vazir-Light.woff","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Light.woff2","path":"lib/vazir-font/Vazir-Light.woff2","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir.woff","path":"lib/vazir-font/Vazir.woff","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir.woff2","path":"lib/vazir-font/Vazir.woff2","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/10、SSL_TSL通信模型概要.png","path":"images/10、SSL_TSL通信模型概要.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/1、android存储目录结构.jpeg","path":"images/1、android存储目录结构.jpeg","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/2、android4.2之前存储目录结构.png","path":"images/2、android4.2之前存储目录结构.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/4、android多用户存储.png","path":"images/4、android多用户存储.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Bold.eot","path":"lib/vazir-font/Vazir-Bold.eot","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Bold.ttf","path":"lib/vazir-font/Vazir-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Light.ttf","path":"lib/vazir-font/Vazir-Light.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir.eot","path":"lib/vazir-font/Vazir.eot","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Light.eot","path":"lib/vazir-font/Vazir-Light.eot","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir.ttf","path":"lib/vazir-font/Vazir.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/0、Android4.1.1系统目录结构.png","path":"images/0、Android4.1.1系统目录结构.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/3、android4.2支持多用户的存储路径图.png","path":"images/3、android4.2支持多用户的存储路径图.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/5、android-data目录.png","path":"images/5、android-data目录.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-brands-400.woff","path":"lib/font-awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-regular-400.eot","path":"lib/font-awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-regular-400.ttf","path":"lib/font-awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-regular-400.woff","path":"lib/font-awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/css/fontawesome-all.min.css","path":"lib/font-awesome/css/fontawesome-all.min.css","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/justified-gallery/css/justifiedGallery.min.css","path":"lib/justified-gallery/css/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/js/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-solid-900.woff","path":"lib/font-awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/0、Android6.0系统文件目录结构.png","path":"images/0、Android6.0系统文件目录结构.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-brands-400.eot","path":"lib/font-awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-brands-400.ttf","path":"lib/font-awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-regular-400.svg","path":"lib/font-awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-solid-900.eot","path":"lib/font-awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-solid-900.ttf","path":"lib/font-awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/11、SSL_TSL通信模型时序图.png","path":"images/11、SSL_TSL通信模型时序图.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGL-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGM-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGS-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/12、javax.net.ssl.HttpsUrlConnection方法分析.png","path":"images/12、javax.net.ssl.HttpsUrlConnection方法分析.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGL-Italic.ttf","path":"lib/meslo-LG/MesloLGL-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGM-Italic.ttf","path":"lib/meslo-LG/MesloLGM-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGS-Italic.ttf","path":"lib/meslo-LG/MesloLGS-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-solid-900.svg","path":"lib/font-awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/9、android-storage映射路径图.png","path":"images/9、android-storage映射路径图.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGL-Bold.ttf","path":"lib/meslo-LG/MesloLGL-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGL-Regular.ttf","path":"lib/meslo-LG/MesloLGL-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGM-Bold.ttf","path":"lib/meslo-LG/MesloLGM-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGS-Regular.ttf","path":"lib/meslo-LG/MesloLGS-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGM-Regular.ttf","path":"lib/meslo-LG/MesloLGM-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGS-Bold.ttf","path":"lib/meslo-LG/MesloLGS-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-brands-400.svg","path":"lib/font-awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/cactus-dark-green/source/images/13、javax.net.ssl.SSLSocket分析.png","path":"images/13、javax.net.ssl.SSLSocket分析.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"d6f0e06c18ee144c66f3ba424c18cd1ce8b99e40","modified":1538209993376},{"_id":"themes/cactus-dark-green/.DS_Store","hash":"319896b64dd9fd38d1c8dd85f4619fc2906638f7","modified":1538209988374},{"_id":"themes/cactus-dark-green/.gitignore","hash":"c5345a2c5fa6c136dbe2020a405e541b4755a259","modified":1531852359000},{"_id":"themes/cactus-dark-green/.jshintrc","hash":"2548bd6ce44422edc7e6f9f68061ab47f26c4f57","modified":1531852359000},{"_id":"themes/cactus-dark-green/.stylintrc","hash":"eb5f48e83657928cb0cbee031373b2cd36ca0083","modified":1531852359000},{"_id":"themes/cactus-dark-green/LICENSE","hash":"346ece39a983b0e7858c11f785cd846cef9eb875","modified":1531852359000},{"_id":"themes/cactus-dark-green/README.md","hash":"d8689ab1b782a59f726dfa5dc72ff06777c541f6","modified":1531728321000},{"_id":"themes/cactus-dark-green/_config.yml","hash":"8a7d252b4e8e28fb230c358d3ab923619711a356","modified":1534354376000},{"_id":"themes/cactus-dark-green/gulpfile.js","hash":"d8a9339bd3668cada6bb219824975c9778c0b37b","modified":1531852359000},{"_id":"themes/cactus-dark-green/package.json","hash":"ae6adedb8f21a7c0743521b40bde49659e02685e","modified":1531852359000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1538211088724},{"_id":"source/_posts/Android-testing.md","hash":"089c64659eb8af2cb9ba0787ae206fe8362243c4","modified":1532706991000},{"_id":"source/_posts/AndroidStorage目录结构分析.md","hash":"6a0cc4238d74f37afb6e18bb87a09abb3cdcfb21","modified":1535100509000},{"_id":"source/_posts/Android基础开发框架2018.md","hash":"d15a2f1930b3164cfebab33a0b7ac21fdbe2a32b","modified":1532495885000},{"_id":"source/_posts/Android熟练学习路线.md","hash":"5a68a6089023fd3c9f00ebfb8cdf9ed85226da2e","modified":1534266184000},{"_id":"source/_posts/Android通用基础功能模块开发.md","hash":"227d960c58ab65fadcb42d96b986c9e6f9e1e56b","modified":1533807497000},{"_id":"source/_posts/Android版本特性及minSDKVersion设置.md","hash":"3113f0178fdc2c562c02b2815a85d44ed69ee78d","modified":1532357600000},{"_id":"source/_posts/Best Practices of HTTPS&TLS.md","hash":"2d1b0c65a23b09b70ccbd721f914fb558efa5184","modified":1536742728000},{"_id":"source/_posts/HTTPS及SSL-TLS概述.md","hash":"51e7b21c4fdc120280c3cbf624dc382501435b12","modified":1536772496000},{"_id":"source/_posts/Kotlin入门笔记.md","hash":"5bb958df48527db992e93ea8522d4cd5462b7a21","modified":1532414571000},{"_id":"source/_posts/How-To-Create-Github-Pages-with-Hexo.md","hash":"fbfef69010323b02038b4b0ebac17e312a04e546","modified":1532359358000},{"_id":"source/_posts/Mac磁盘清理.md","hash":"2250674dd133b8116f1e949ea967ad404b8195fc","modified":1538027814391},{"_id":"source/_posts/OAuth认证.md","hash":"666643b2bdae8a775640bba08b5e7d886fe7456d","modified":1536766269000},{"_id":"source/_posts/OkHttp入门.md","hash":"07024fc83d01a09283d5757bf035bffa63c3cf0c","modified":1534489280000},{"_id":"source/_posts/jetty配置https支持.md","hash":"f9bd05b2ea091eb7082935e5c0d390bc9999598d","modified":1536654524000},{"_id":"source/_posts/markdown-blog-template.md","hash":"b888312121d25be6118c2d2fabe667a654a576e8","modified":1532357976000},{"_id":"source/_posts/上传Android AAR文件到bintray JCenter.md","hash":"9ee803818486f91df3c46043dede1b30e2b0adb7","modified":1538211136036},{"_id":"source/_posts/myeclipse、maven、struts2创建server项目.md","hash":"f6cfbf6d6acc8620e746f782785af3cc3087b312","modified":1536475124000},{"_id":"source/_posts/官方文档集合.md","hash":"7a5f961668017d4118a5e9248da8233fd06deafd","modified":1534778955000},{"_id":"source/_posts/比特币与区块链.md","hash":"1e404cca722d8685163ecf20f2b4f24ac623aca6","modified":1536078814000},{"_id":"source/_posts/碎片化知识总结-to be continued.md","hash":"c6f7760ff08ea357531688fed5115c0bedede916","modified":1535708960000},{"_id":"source/_posts/编程学习资源整理.md","hash":"316bd56f2870c73c177cc53f138711580a057344","modified":1533807615000},{"_id":"themes/cactus-dark-green/.git/COMMIT_EDITMSG","hash":"eca3c5110cf5fef4f4bdc251e25235aeac099ecb","modified":1535101032000},{"_id":"themes/cactus-dark-green/.git/FETCH_HEAD","hash":"b93a810f260e7f6424d64771a7656b40b95cfceb","modified":1537465854000},{"_id":"themes/cactus-dark-green/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1531852359000},{"_id":"themes/cactus-dark-green/.git/config","hash":"73f2e42784e7c786642dd5a9dfd0bbd772ff0685","modified":1535101099000},{"_id":"themes/cactus-dark-green/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/index","hash":"b2dbff6ffd180faa6efe66e2a381ecf4f8e1d338","modified":1538021011131},{"_id":"themes/cactus-dark-green/.git/packed-refs","hash":"5171fb6524d474e185e9a055285d6f194d229250","modified":1531852359000},{"_id":"themes/cactus-dark-green/.git/sourcetreeconfig","hash":"71d4f74f59174777a35b7daa604420860c4fa7b3","modified":1537465854000},{"_id":"themes/cactus-dark-green/.idea/gradle.xml","hash":"44c25a76621ca63c7fcdddc305184bc2353aa920","modified":1532322200000},{"_id":"themes/cactus-dark-green/.idea/misc.xml","hash":"e00d519d1ab84c33942c36221360fe0041eef0d8","modified":1532327417000},{"_id":"themes/cactus-dark-green/.idea/modules.xml","hash":"bb04564e3b3152a8db791886e96dbeb190cfc4e5","modified":1532322200000},{"_id":"themes/cactus-dark-green/.idea/vcs.xml","hash":"c92f3eb0ad1c70371e177a4d7d741f90af3f902c","modified":1532322200000},{"_id":"themes/cactus-dark-green/languages/ca.yml","hash":"b79dd2c21dc6697c635e92db1f661a4b8d5d2305","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/default.yml","hash":"fa9c78108b39b369282b14d738e6d8302ee0fdba","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/en.yml","hash":"fa9c78108b39b369282b14d738e6d8302ee0fdba","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/es.yml","hash":"2b1fc8b0d636123e9ee39017fa20053bd1913a5a","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/fa.yml","hash":"63f32e50953af1c4bd0308a4fca5862b5287c2cb","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/fr.yml","hash":"4fea266d3c522903f3eee4fffee6e66c44775005","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/it.yml","hash":"62800bcae1f2d2454f87f4bcf4d7593848424f61","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/nl.yml","hash":"ac0573352ad2c737a7686bcca498b985e7bd6447","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/pt-br.yml","hash":"4859aba788a050c2d5d0b997693b0c8c24b349f7","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/ru.yml","hash":"81b57fcd1977ef534f4bf303dbc1b4710cc7f057","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/tr.yml","hash":"2702914007e6bade9d6861078c0e179ac05bf48c","modified":1531852359000},{"_id":"themes/cactus-dark-green/languages/zh-CN.yml","hash":"142004800bd580f8ee2f0eba7345c1725a5e2e5e","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/.DS_Store","hash":"08a1b17f850059d18759b3e71604904807708396","modified":1533811014000},{"_id":"themes/cactus-dark-green/layout/archive.ejs","hash":"b5e70bd2780d044b94e22ce8af0afb114c2a6eae","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/index.ejs","hash":"c5531c2121726f3e199640e2ad9113f794e65cb1","modified":1534351226000},{"_id":"themes/cactus-dark-green/layout/layout.ejs","hash":"c041a48afff29e62b61d4539f8c492aee5cc3905","modified":1531852359000},{"_id":"themes/cactus-dark-green/scripts/merge-configs.js","hash":"2048c3415d96b17b9d84aa44bc0c25f1210525f8","modified":1531852359000},{"_id":"themes/cactus-dark-green/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1531852359000},{"_id":"themes/cactus-dark-green/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/page.ejs","hash":"d14964cac07f5db45d83af682a7924413f7dd3b6","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/post.ejs","hash":"642885f2b514d76eddb88527947795c6840fd227","modified":1532359116000},{"_id":"themes/cactus-dark-green/source/.DS_Store","hash":"610c158381109fa6e7d32df3db0e72019c438da4","modified":1538209975263},{"_id":"source/_posts/Maven权威指南笔记.md","hash":"928c0104aa3de721f08dabe102661abc67e058b3","modified":1533808632000},{"_id":"themes/cactus-dark-green/.idea/workspace.xml","hash":"c3faef2ce16c40d456a1d92f898312edfc398d07","modified":1532410371000},{"_id":"themes/cactus-dark-green/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1531852349000},{"_id":"themes/cactus-dark-green/.git/logs/HEAD","hash":"85185c6426cf3e91deb7f689851ca5fe10de6417","modified":1535101032000},{"_id":"themes/cactus-dark-green/.idea/modules/cactus-dark-green.iml","hash":"45e36bfa1dfe93cb0dbb02c9159fb0d4a79a064e","modified":1532322200000},{"_id":"themes/cactus-dark-green/layout/_partial/.DS_Store","hash":"fe3a1b2077d038bf1c41e6251a1ecc40f9440fd1","modified":1533811340000},{"_id":"themes/cactus-dark-green/layout/_partial/comments.ejs","hash":"4cf8d0059e5f8bc8ae1dd1a426293583fd398052","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/footer.ejs","hash":"c3a80e347cb11022baf5e65fb4d0209b8d205693","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/head.ejs","hash":"370bde5b6aa535da48f7a8d0753e9df0cc06b7c3","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/header.ejs","hash":"9b2b7d6e9ab514107adf408c7ec8530fd612b3d5","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/scripts.ejs","hash":"809b87d96a165a9897ef5a39935f957c6591ef61","modified":1531819368000},{"_id":"themes/cactus-dark-green/layout/_partial/search.ejs","hash":"8b4bf9cf5db0ce762a31fc3baae0f2fc004bece4","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/styles.ejs","hash":"c89667e45787a3f909c13cf45242bd4c19335a63","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/.DS_Store","hash":"bd163daf685510739610154f1b8d58ce0fae355e","modified":1538209946729},{"_id":"themes/cactus-dark-green/source/css/_extend.styl","hash":"52fec91d9feb0f2d84b426ac075c65b9002918ad","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_fonts.styl","hash":"354809b5a64e8a47a66c66fd1a28ac597c1460a6","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_mixins.styl","hash":"a3010f09f5529c500557ef0a04789f33c2b7a748","modified":1531847292000},{"_id":"themes/cactus-dark-green/source/css/_util.styl","hash":"2bfeb2e2605dd5235693b00c71a212646d2e0410","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_variables.styl","hash":"02079fb71b7d1c01d15fa512a1948ad4cbb416b5","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/rtl.styl","hash":"c2b486f7e8ff5448de8195b3d1276b9b3c5f4d3a","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/style.styl","hash":"092ab4818635d77628f2965e8ecc7fff75a5782a","modified":1534351133000},{"_id":"themes/cactus-dark-green/source/images/.DS_Store","hash":"1272f7c90bf616b9b3e5babf6c6ba9c6304a71d8","modified":1536478102000},{"_id":"themes/cactus-dark-green/source/images/15、remove-maven-webapp-default-sufix-MavenWebapp.png","hash":"38050c071becd8053cc475f50bd066af81e791c6","modified":1536474849000},{"_id":"themes/cactus-dark-green/source/images/favicon-192x192.png","hash":"468559a7dc80f66455cf615162e44a0503231520","modified":1531850996000},{"_id":"themes/cactus-dark-green/source/images/TDD-testing-workflow.png","hash":"ed09079f2bcd969aa3b2c98ea3f7d1113916745c","modified":1532687633000},{"_id":"themes/cactus-dark-green/source/js/main.js","hash":"7722f0b9c0b35442267973864071fba9b4ac17eb","modified":1531897861000},{"_id":"themes/cactus-dark-green/source/images/apple-touch-icon.png","hash":"44cfafb6c716f42fc7a115db09ea00d6c30eee48","modified":1531850845000},{"_id":"themes/cactus-dark-green/source/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1531728321000},{"_id":"themes/cactus-dark-green/source/js/search.js","hash":"c917e50db5173db1674ddabec789245a9f9f55f6","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/images/8、android不同版本sdcard软链接.png","hash":"2adff5038fa79b63f983a290114c72b887bbaf69","modified":1535096836000},{"_id":"themes/cactus-dark-green/source/images/testing-pyramid-2x.png","hash":"c146041f7197ce574eae8718332ed4ea4c556148","modified":1532688200000},{"_id":"themes/cactus-dark-green/.git/objects/03/452cfc2f126a396b04c9eed9fece16c6cb8363","hash":"5b84d34364a85b0bea5f853fc984e96565c004b7","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/01/cc036133068e7b0aa6dc967b8066445ea673a9","hash":"9a92990505b8068b4712bdfa744d38e1684392dd","modified":1531853023000},{"_id":"themes/cactus-dark-green/.git/objects/04/1d64e71e604e23a560c7c8a08c88033f005837","hash":"d3a36af436f301e78d714ecbd47eb8c6576924c4","modified":1532397839000},{"_id":"themes/cactus-dark-green/.git/objects/04/63cd495773ac5fe4a4286afefa72dbd0cd44ae","hash":"e338e672ce961a6b1f8a45dd9f6ebaa6ffee913f","modified":1531853023000},{"_id":"themes/cactus-dark-green/.git/objects/06/f170d1bdc68333214765c89ce02082c8b43fb3","hash":"0ce26c5adfba372afd2691d94f0d23b3561eda04","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/0a/2250d6552fd3f76bc1893221aa056e9f946d5f","hash":"2d25745ed5614d4c289248e3686fff3884d8b77c","modified":1531853023000},{"_id":"themes/cactus-dark-green/.git/objects/0b/9b1ae60a628f4ed7a6c223997ed526fb9d1213","hash":"3cce88d34b7d47bea0076c867223a881babf2b4b","modified":1531853023000},{"_id":"themes/cactus-dark-green/.git/objects/07/856b904b697f1cc7b3f71f10572b763dad14a0","hash":"01c5b44a4e47de45fbc28c4e1e784b88817aa734","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/0f/b334363da4d3217ac312ea989bc9a39151dd71","hash":"88ea9ff8f42bff73a92b84495a7cbad40aa4fa82","modified":1532397839000},{"_id":"themes/cactus-dark-green/.git/objects/12/62c07c6a914ffd8c834beafef0ffdd8812a860","hash":"f8ea9217853e9d30a6cd7e1e799b39aa10876bcb","modified":1531898035000},{"_id":"themes/cactus-dark-green/.git/objects/13/5067eebc0e6673e83b889a31404b3c5fb303a9","hash":"505b009b7951b11dfb2fef521292ac289c2f75fd","modified":1531898035000},{"_id":"themes/cactus-dark-green/.git/objects/13/7e1eb54bf7ae7bba9f6390531afadcb9830a54","hash":"22439e02090405b3417221a7182b84b6be57ec0c","modified":1531898035000},{"_id":"themes/cactus-dark-green/.git/objects/18/77c0f4f9c451cc694d9c58ef6fb8df18655c50","hash":"27f748380d0c389b9a945957c95110a2d7e8c618","modified":1532341082000},{"_id":"themes/cactus-dark-green/.git/objects/15/1bdaaa7e198e6cf163fc18140bba03bca91862","hash":"d210736e8b349176d54c9668ab9ec9354268cca5","modified":1532397839000},{"_id":"themes/cactus-dark-green/.git/objects/1f/9c3f81b7b646ba60948f8a6d4ec88abc68e94d","hash":"dfc34902552a19b5de38907e687c041564ba65a2","modified":1532397809000},{"_id":"themes/cactus-dark-green/.git/objects/1a/587861352b37d78c9913492c088c08c5f29ae8","hash":"aff27b6e5fcb4dab3b4eefa26b10c89734aff3f2","modified":1532362058000},{"_id":"themes/cactus-dark-green/.git/objects/2d/d52458a6b20aaa139e82d51f1d62668b40d2b3","hash":"438e37c420be71957b07190eb8e97a388f9330e1","modified":1531853495000},{"_id":"themes/cactus-dark-green/.git/objects/23/1287852b2a6bf1feb6d5d1b98d8b3ce0a69537","hash":"c8466ce5485fb34c913b3efba5e78029aa29bf20","modified":1533613257000},{"_id":"themes/cactus-dark-green/.git/objects/23/aec2daa5745244d02dab59878d95fa25cca0ff","hash":"ec5284d1983a17d961376f0b980a6b5500bbd73a","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/2e/bcb3450e7c141458cf596ab05eb1255bb84547","hash":"6ee5bb6268a0eb0ce60a5489dfec7447d9777fab","modified":1532341082000},{"_id":"themes/cactus-dark-green/.git/objects/31/de8742a9cffe5eb46ab2694f7302a979684198","hash":"999f90a018e46f8e0a4d2adc51358563c2760570","modified":1533615224000},{"_id":"themes/cactus-dark-green/.git/objects/33/5752f4641547aa1c4983d4fadd6268a21deb31","hash":"a2473f125ac06a4eb23b42b2fcda6caaa06f2ed3","modified":1531853023000},{"_id":"themes/cactus-dark-green/.git/objects/35/e0ca5c265838ddd34a2c6052331f1ae8bcaf8b","hash":"3c84427bd8e25ac7dd235f2cb365cacdedbb4ad0","modified":1532341164000},{"_id":"themes/cactus-dark-green/.git/objects/38/55988364ea0693bd7208a2526c6e407a93a99e","hash":"9b129808ffc34b6ee3f9ede951b3ff3a97a8a73e","modified":1532341082000},{"_id":"themes/cactus-dark-green/.git/objects/3a/9cc7531129217e2f1fc43ef9a3f99573c23800","hash":"476b103d508b4407cff32e097b836732a34a06fd","modified":1533812987000},{"_id":"themes/cactus-dark-green/.git/objects/43/83d94cc5e9eac58024d9af9474431852bdc83c","hash":"79a25b0d0ad54dff5c75516de53e5e398f29a8a5","modified":1531853023000},{"_id":"themes/cactus-dark-green/.git/objects/44/4f37110d9046b6633f835cae68af93d8356ba2","hash":"baeadd3639e3523e79605f1f4a9137f45fd790ff","modified":1533615170000},{"_id":"themes/cactus-dark-green/.git/objects/47/fdf244ffa74df4bed28e0b0fe28582fe775df7","hash":"d25270567d1caed43246ca9393df01fd4d01c963","modified":1532341082000},{"_id":"themes/cactus-dark-green/.git/objects/49/d63bbf428aa78f72320a31869da9965913c04e","hash":"35c2d75834a1768f04d052f0cceb30a7c8ab8254","modified":1531853023000},{"_id":"themes/cactus-dark-green/.git/objects/4a/182407e13a52a09bc653e8f2836ba239097c6e","hash":"05a4416b2b805e9a23330cd4684afa1542f0856a","modified":1531853023000},{"_id":"themes/cactus-dark-green/.git/objects/4a/fcc3419f0d2c8d6e9623778c664c81c9d52eda","hash":"3777ee09ec1b8fdf1a8603a02bf64d150a43bbf8","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/54/bc014b400933e8d9a41fa77e5b81265545e393","hash":"611d826428c6fb4614a43e450766534c2e0dacd5","modified":1532341082000},{"_id":"themes/cactus-dark-green/.git/objects/57/494d3ec8f320485e911063c5b2fabec0c6c341","hash":"c0e9b9845f85c24a797a613e64a1c3afd885e6bb","modified":1532397839000},{"_id":"themes/cactus-dark-green/.git/objects/57/00767a14f33329952d28e6059dcc01df9cf192","hash":"2b329afc8f449b383b8dfc9f42ad869bf1bc52c3","modified":1531898035000},{"_id":"themes/cactus-dark-green/.git/objects/4d/4bd8c81871a586c6479975440768b2f9f148ed","hash":"93874dec2c1f049f30435835c2e823c85c1e6c5b","modified":1533613240000},{"_id":"themes/cactus-dark-green/.git/objects/60/6bd2828d1d4fdfc5370a79239d7f7010f8ec5d","hash":"1866adcecac9436b9fb085e50ea593a12a81eae1","modified":1532341164000},{"_id":"themes/cactus-dark-green/.git/objects/60/f190eeca7b4787f7d53186f713be7842af9c44","hash":"fa1b5ff6a3a17c0d3a0bd70ea18cf48b7a874f0c","modified":1535101032000},{"_id":"themes/cactus-dark-green/.git/objects/5a/814f1f9b8287a1ebfa5085aaa2302f8059eb09","hash":"f93d46804085cca99cde378e1772d9883a6c8a8e","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/61/1aca9cd82b3ff0c6c55740e31b4585e2d64003","hash":"5dcdc3c2ab7c31fd75ebe2aa5bf05ae0e7e11f6f","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/64/eeef2f7fdc150bbb1cfbed8657fda4d00f119d","hash":"be45114d08bc3d844e5494f64df23a6ccb473894","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/6a/a0a1a60f2d1a0825864b6eb2269fd0dfe8ba1b","hash":"3fce914f9fb9f8a3eb6fb1b366d767ddb02517d5","modified":1533813399000},{"_id":"themes/cactus-dark-green/.git/objects/69/bb311956a5170368223b7e219d4df3a131476d","hash":"4659fbc5994ee7391f38382e5b4e714ade87dc91","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/69/1f14f9e895748ae218e1ea59cc76704c2ac390","hash":"1a76b02a928ea0184ac17bfc39676cd225edf65e","modified":1535101014000},{"_id":"themes/cactus-dark-green/.git/objects/6d/76633fed1105d3dba3dcc519bf5ff25d32dd72","hash":"ad8b834974369b794658b26bfd83ef82b7ab6d18","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/6e/540fc23e5ba4fcfb8de7852ca79a665112cfde","hash":"0d87283a0697ba44a1e95b5cf7f173d4343c655d","modified":1531897950000},{"_id":"themes/cactus-dark-green/.git/objects/77/2ed2e137c1c96bb9e3d24abf44d852d1a57162","hash":"ac3c9b8017e9bec4d2ae08b131f04465a27970cc","modified":1533813399000},{"_id":"themes/cactus-dark-green/.git/objects/6f/01dbd36088f705af48d866b2e6dd8ccaf9c7a0","hash":"c74c1db4de49153d8e6f33715578b71cdb16413d","modified":1533613257000},{"_id":"themes/cactus-dark-green/.git/objects/77/be66b0267a2727d4e2816e1ad3dc5973cdfed0","hash":"c9b6c5db237a2c1e66798f1aa2a89539299f00ae","modified":1533615224000},{"_id":"themes/cactus-dark-green/.git/objects/7d/242ab00bda11e136cd8928869fea6254c2cc35","hash":"e71db3db425b9d8e874806c395fa02f500157674","modified":1533615224000},{"_id":"themes/cactus-dark-green/.git/objects/7e/fb8dc64c4652527c58dcb6932353b5c3140553","hash":"44e085f340dddf6787811d4826ef50ac6a893645","modified":1532341082000},{"_id":"themes/cactus-dark-green/.git/objects/86/6d2467126e0614743a3bf9e80ca680ce921282","hash":"f2083b3df0877131f9e049a04cdc553f0e6bde78","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/88/5126c38130a55ef528c68a825bdaf7d4d06c12","hash":"eb362286c5e1b896ec80a8122e008cf330dac490","modified":1533813389000},{"_id":"themes/cactus-dark-green/.git/objects/8a/4534f5d7bb503b70502ad11fbce07d7ba36bb0","hash":"822199c02a69022a54327b727ce1eab03d2fe653","modified":1533613238000},{"_id":"themes/cactus-dark-green/.git/objects/91/6c227e741095939a9aacbe53dc7183b946c2e2","hash":"4ddd0dffe3d64bfb6e2600f6cbe98d12a579dac4","modified":1535101032000},{"_id":"themes/cactus-dark-green/.git/objects/93/86835fa71c99b2802d9f7c567d8cfe3224f728","hash":"f34a28d81eaa8be5a93768f2ae70a5662eabe778","modified":1533615170000},{"_id":"themes/cactus-dark-green/.git/objects/95/c2cfc373d932e9c2225dec12e57b92f7a4f7b6","hash":"0eaa33394a242ea36f24a2827c0282e73c3061ce","modified":1533613257000},{"_id":"themes/cactus-dark-green/.git/objects/96/a562709a4d02d5c8fcc8bd06858eac370d8df2","hash":"8b87704a824953f1788cd6760e3108520f06fb88","modified":1531853495000},{"_id":"themes/cactus-dark-green/.git/objects/9f/b9b00d669530b8b9e41641799bbc08d13195bb","hash":"964dedb82955c9d5b01812afd9a6ac27f51455f2","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/9f/bab9633a922a8c47449e455f211287808da1f4","hash":"179ca106bf1368ccf2a51f65cb498c27f6ed1631","modified":1532397839000},{"_id":"themes/cactus-dark-green/.git/objects/9f/e815dd7032e039ac5b80ff07cdf7288c53b4ee","hash":"41d9f662d9abceecb336cc07c530050ca9c638ed","modified":1535101032000},{"_id":"themes/cactus-dark-green/.git/objects/a0/53a6d56c07757c27040f1dd95496225e245374","hash":"858fe0c50694712e0705682f098805364b3e5d3b","modified":1531897950000},{"_id":"themes/cactus-dark-green/.git/objects/a3/61c053b484ad37c6646f4ef446c39fb82fa010","hash":"b79d625d2fb8af1d91f0d92c2c5acefe88211ba1","modified":1533615224000},{"_id":"themes/cactus-dark-green/.git/objects/a5/07f35beed7bdaff039f2fb486cb468c28459bd","hash":"d62ceb8d5fe8dac7398f1009e8028ed8979fbe03","modified":1533812987000},{"_id":"themes/cactus-dark-green/.git/objects/ad/1a2991f2163d27220c9542586cf0f0fe622f28","hash":"0759f097a3c1d0272c0892d2062867cc42a67ef8","modified":1535101032000},{"_id":"themes/cactus-dark-green/.git/objects/ae/958cec9054225ce7a664bc1c3c1230a592b03e","hash":"9d5c8bcc8cd6a833b78e1e65bdf5b8cafa69ee12","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/b3/5259cfd1f7ba20d2c0b3e6a86202edca9be53e","hash":"6623a0c22cb1115eee1a0e946b1a8a7c30e4d54d","modified":1533615224000},{"_id":"themes/cactus-dark-green/.git/objects/b0/cb4601de5833dc963cc3dcb65b8e29f0fb1932","hash":"ad12849b5f7e48c966df58c508c4f1d1c33c4fa0","modified":1533615224000},{"_id":"themes/cactus-dark-green/.git/objects/b4/5a6ef1758030256aca0f23d227fafaf1ba0ed9","hash":"0315ef899792cb27f2f0766a232b03e5f34fbf08","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/c2/e7ab304b913adf39686af7b3b25f75ba2eccde","hash":"f0482bc8c732bebb909df98baffd65deb3e03cba","modified":1532341164000},{"_id":"themes/cactus-dark-green/.git/objects/c1/a29d2d17a83a3be0f14d9440ab513ece26243c","hash":"9f06df2d809f3271da2261af81387c459de488f8","modified":1532397839000},{"_id":"themes/cactus-dark-green/.git/objects/c6/546b325c45592b4a3132e64744c249727ce4e9","hash":"e6c905b9b002f7a427c88e0354fd69223023fcaa","modified":1532341082000},{"_id":"themes/cactus-dark-green/.git/objects/d3/4502626ad5a9147a8b8eb63c207d9f7bfb0d8a","hash":"817d8cacc1f947015f71938b84abc14037ba4d87","modified":1532397809000},{"_id":"themes/cactus-dark-green/.git/objects/c7/48cb59dacb6da44132b132cae2bc9105c76c39","hash":"5d5eeac406321f8b7886ddd99394c472d6fcf986","modified":1533812950000},{"_id":"themes/cactus-dark-green/.git/objects/d3/82f65f20d32d6d9f48b4521c1e0160b71d4aa0","hash":"514cef3ea4d99e582c09a974505ebd84c56ffd0d","modified":1531853495000},{"_id":"themes/cactus-dark-green/.git/objects/d9/e11d3b8838660689c6181fff70e5a5fb005053","hash":"f3e0317e12702b68861386082cb0547a8e835207","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/da/24725b098424e586da124a8f3d9d85322d9f26","hash":"201e77879ecdd844620b30f61af4c68cd598a1ac","modified":1531853023000},{"_id":"themes/cactus-dark-green/.git/objects/e7/00c50eeb7721883ec0dcbb3d263727e33cd6d7","hash":"0d64b8dc39d73f1540f650082fffddddcab70ff1","modified":1533613257000},{"_id":"themes/cactus-dark-green/.git/objects/e4/e65ca292a20f44f374edc962fb30c4c362b52f","hash":"85f686709a20046e0e67f49779c105d4e386de6a","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/e9/0a384ed0a638ec4c99f7361cad463479300818","hash":"31699f26934f51b51218a6909040f16de3994ced","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/ea/ae4aa761aa5751d5399c9140cf7a24a97db07e","hash":"acf65e4b840337c93c4dc6a324698a891da6cbf6","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/eb/5fe1a123e73ee006cfad288e39130d93c8e5fd","hash":"83709850122c0c4d334d57a4b0d30810cd9159a0","modified":1531853023000},{"_id":"themes/cactus-dark-green/.git/objects/ed/67b400cbd9457d700216eb580664c9646696ae","hash":"ec86bd7f50f55aef0926a961c8422cefdad46448","modified":1531898035000},{"_id":"themes/cactus-dark-green/.git/objects/f2/cf4bfa7102591b92d2812caa6a26b0eb561bed","hash":"9ffcd0f041a2bcd5f0fd4f18c9f8153aff9942d4","modified":1533613257000},{"_id":"themes/cactus-dark-green/.git/objects/f3/b10b6ce28fc27db0003e77d6256356e314f144","hash":"a86df96f0c03ea74d54f921df2ad2c04a599adba","modified":1533615170000},{"_id":"themes/cactus-dark-green/.git/objects/f4/584f5cbac72ab9e9cb1740115380c433886410","hash":"35f1e682e9c2f7feb6dec5919ee41133e8129d93","modified":1531853495000},{"_id":"themes/cactus-dark-green/.git/objects/f4/90a0c8abf2b877d8b8ba1537cec53e3465df1b","hash":"fad020998ba972d624f800b53185692531ba1649","modified":1531898035000},{"_id":"themes/cactus-dark-green/.git/objects/pack/pack-d3fd73fa09e254c8ca70adb8d2039aee62c0f4c2.idx","hash":"2d7c71920a7df5e4c948fa9e5ad35eccde3d5953","modified":1531852359000},{"_id":"themes/cactus-dark-green/.git/refs/heads/master","hash":"e1fb612cbb08bb7190255a7c2c8692bc5015926d","modified":1535101032000},{"_id":"themes/cactus-dark-green/layout/_partial/post/actions_desktop.ejs","hash":"38aadd1ed890303dde582b722486138afee09b0a","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/post/actions_mobile.ejs","hash":"79b234ff3c264e66b2e71c819228e62bf92b48e4","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/post/date.ejs","hash":"12a4a7ba6334e3e5c03d9a9601d7779a27c2e082","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/post/custom_summery.ejs","hash":"b4b80faa2d110d4da23468183ba27706ac489d5e","modified":1531849632000},{"_id":"themes/cactus-dark-green/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/post/share.ejs","hash":"847a400e79b775246ca9067e40c3f104d571413d","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/post/tag.ejs","hash":"e08fae30da060f49c087f6c121868b08eb55c795","modified":1531852359000},{"_id":"themes/cactus-dark-green/layout/_partial/post/title.ejs","hash":"cf133c4c647e0d920dc809b38eff41426a0e503c","modified":1531852528000},{"_id":"themes/cactus-dark-green/source/css/_colors/white.styl","hash":"aee98da9ceda9bf97f9c5f5a7151f52027b31ba6","modified":1532340917000},{"_id":"themes/cactus-dark-green/source/css/_colors/classic.styl","hash":"7b7e8b02def7a6c31ec7158a07b439e90733c094","modified":1532340901000},{"_id":"themes/cactus-dark-green/source/css/_colors/dark.styl","hash":"a12cce8c62f466a602ac23d9340d75ea65de8d38","modified":1532340996000},{"_id":"themes/cactus-dark-green/source/css/_colors/light.styl","hash":"8884def1c38aab7f4500052414a5de79fb744535","modified":1532340912000},{"_id":"themes/cactus-dark-green/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/pojoaque.styl","hash":"4e7b6b046b8575ac749f6aec4e953a62ada27a36","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_partial/archive.styl","hash":"c2500b333d71c5245680cad2b6094fdc6b9b3cb8","modified":1531852618000},{"_id":"themes/cactus-dark-green/source/css/_partial/article.styl","hash":"060e3ae78602ecedcb3136b2dceadeba669ddb6f","modified":1532341022000},{"_id":"themes/cactus-dark-green/source/css/_partial/comments.styl","hash":"1e90f1fb9d4c155df518cacb5a537e9de9c042c1","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_partial/custom_summery.styl","hash":"da849e07eaa6ea4f19f1ca15c15c61bc266d0060","modified":1533614736000},{"_id":"themes/cactus-dark-green/source/css/_partial/footer.styl","hash":"4724415b286fd7ef366bc141e13fb56e6a86043e","modified":1531817399000},{"_id":"themes/cactus-dark-green/source/css/_partial/header.styl","hash":"2c3653f4b88f76590769505a2e60ac898dfeb4d2","modified":1531850349000},{"_id":"themes/cactus-dark-green/source/css/_partial/index.styl","hash":"6a7e9401bb3d306f405c1cbbd46b61b93b615d9c","modified":1533614559000},{"_id":"themes/cactus-dark-green/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_partial/pagination.styl","hash":"950bf517bbe7adb9a9aa4eb5ddec74ffc7598787","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_partial/search.styl","hash":"159be002780c62a77f46947cf854a7342fba24f4","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_partial/.DS_Store","hash":"fe3a1b2077d038bf1c41e6251a1ecc40f9440fd1","modified":1533810436000},{"_id":"themes/cactus-dark-green/source/images/14、maven-child-module-not-exist.png","hash":"c1edac9e853894c6c799b37e536db076734283e0","modified":1536470509000},{"_id":"themes/cactus-dark-green/source/images/6、android-system目录.png","hash":"d83a5d074d3689bd3e51c8045fe0baac566e5e65","modified":1535096797000},{"_id":"themes/cactus-dark-green/source/images/7、android-mnt目录.png","hash":"6654875621073411bdf410cea18e1ebc74d02042","modified":1535096816000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Bold.woff","hash":"6c6dfec4dbaff4850225f931d3bba53675651fa7","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Bold.woff2","hash":"1f3e8d1b0cd6e77c861e3d9326aaaab42ab32850","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Light.woff","hash":"4a51786e743c6fb3a14f9c04e712a40ae8a15a5a","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Light.woff2","hash":"fa68ba20ee5a58b431ed0aeee37a54b78e99890e","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir.woff","hash":"072460f4c8ef03ab81be9128e0e3509f1f925767","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir.woff2","hash":"428df6ad6d662532e8e8239353d4623b88373668","modified":1531852359000},{"_id":"themes/cactus-dark-green/.git/objects/11/e2b7b77d6eef5a4ddba5b993c939c044fc32f4","hash":"a35953908cf74afb73e0ebdaab3c5772289e960a","modified":1535101014000},{"_id":"themes/cactus-dark-green/.git/objects/2d/c884f4c8592a146fc9b118e5b5ad89e95f546e","hash":"28f48eba06ffd719aba2bcd3b6a8b4dc8b89d04b","modified":1535101014000},{"_id":"themes/cactus-dark-green/.git/objects/79/3f49ec702a50bc845b32335ed8c49477186d23","hash":"d48124103981f61f0b6312b1ec7b7a44856b84b0","modified":1533613240000},{"_id":"themes/cactus-dark-green/source/images/10、SSL_TSL通信模型概要.png","hash":"cd9511140bfd2ae024871f7c20c0a38a8b8adc74","modified":1535966150000},{"_id":"themes/cactus-dark-green/source/images/1、android存储目录结构.jpeg","hash":"370fc03d270462d8f2a73a05f96e7ccc55c2bcb8","modified":1535096574000},{"_id":"themes/cactus-dark-green/source/images/2、android4.2之前存储目录结构.png","hash":"f9cce571a97fc45daf9cb89825e50cc13ae4692d","modified":1535096636000},{"_id":"themes/cactus-dark-green/source/images/4、android多用户存储.png","hash":"0b63370bfd7521d702e8fb97300e4ea50ac22642","modified":1535096729000},{"_id":"themes/cactus-dark-green/source/lib/jquery/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Bold.eot","hash":"5706a20a89888535e0d3615d7ee6dc51d3bdd23b","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Bold.ttf","hash":"c2a312c63dbbaec50d15bace1f13c672603cf098","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Light.ttf","hash":"b0a3639e51810b7a5fb6ba6d6c72dc96c3e2e827","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir.eot","hash":"265d748c0e62330ad0286acae64a42d6db983531","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir-Light.eot","hash":"e9ff71c83c56e7a9c098fe17b5520b55fb3b7f93","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/vazir-font/Vazir.ttf","hash":"ca62b35a88ef3d09d058eea5cfdafba86ec361c7","modified":1531852359000},{"_id":"themes/cactus-dark-green/.git/logs/refs/heads/master","hash":"85185c6426cf3e91deb7f689851ca5fe10de6417","modified":1535101032000},{"_id":"themes/cactus-dark-green/.git/objects/3d/99b180615f4cd91146694ff3a146ad7bc15b70","hash":"a1e9046e6cb8c5b326b5b906fa11f8090f19d3ca","modified":1535101014000},{"_id":"themes/cactus-dark-green/.git/objects/65/57340b41b89c9e494a1b9a8deb3e2df67ec270","hash":"e9ec5c0fca6c1031e77d5bf2a3c7ef9232ebca23","modified":1535101014000},{"_id":"themes/cactus-dark-green/.git/objects/bd/4084fe05d29e72f3fce6498e15618425fa7b7b","hash":"dc2eb7600b2502cef0aa2363a3d443dada35e7b6","modified":1535101014000},{"_id":"themes/cactus-dark-green/.git/objects/bf/a211dd83c7cc432734f3948677fa8dc3a2da82","hash":"93d2f15229ad021c9bdf9db4e713a8985cfe969c","modified":1535101014000},{"_id":"themes/cactus-dark-green/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1531852359000},{"_id":"themes/cactus-dark-green/.git/refs/remotes/origin/master","hash":"e1fb612cbb08bb7190255a7c2c8692bc5015926d","modified":1535101099000},{"_id":"themes/cactus-dark-green/source/css/_partial/post/actions_mobile.styl","hash":"0d2966c1d870392476864af8ee3ba312ba30cb82","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/css/_partial/post/actions_desktop.styl","hash":"68a1f6b560a59cd375703d4ecfddac41c723a39f","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/images/0、Android4.1.1系统目录结构.png","hash":"686ffc31ff4991eefc963c6b76d83597d2dfa034","modified":1535100445000},{"_id":"themes/cactus-dark-green/source/images/3、android4.2支持多用户的存储路径图.png","hash":"6a1cb73a812783956adeca56da50f08b040fa27a","modified":1535096699000},{"_id":"themes/cactus-dark-green/source/images/5、android-data目录.png","hash":"f895de0fffedf69516cdf90d24f39978d5171eaf","modified":1535096773000},{"_id":"themes/cactus-dark-green/source/images/logo.png","hash":"957d46f2405b156f7cc5ee8edc9ccc72db500950","modified":1531851211000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"b2258ca3824c7e0a03efe19edc10d54571fcf0b4","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"065d1184f7256fc4897a1c3023a361b2491282e1","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"74b3228a2cc98d96ddcd095915dd770c27cd2858","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"45bb0eb8b57b864dbf7da820fd8dc17b296753ee","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"09fe1eedfc1378d20828d07cbaf0a15284757211","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"28844ababc02fe5cea50bec9321da0a492ce1369","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"7a4c38d80cab424875ffcfc090ad3941e0f7a4cf","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/css/fontawesome-all.min.css","hash":"dac0b9af15b6aa47b072469eb440cbe8fee16034","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/justified-gallery/css/justifiedGallery.min.css","hash":"e7ba2de65435a0067d64f49b92a6d395cab508cc","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"1151c5ef92d121329e8ef75ea997a5b79babc00b","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"05d552c1d360502f134a3aa37580373b14d65797","modified":1531852359000},{"_id":"themes/cactus-dark-green/.git/objects/0e/d6169e4e4a6f7d629746a97a9957a41b70b60f","hash":"bc89afaa1fcbd058e27e82562606dac6aee4e886","modified":1535101014000},{"_id":"themes/cactus-dark-green/.git/objects/7d/ded2f0b67dbaa088b81636f5efa2c2670251e7","hash":"8d92cb409748c51d4d56868f47adc28dc52b9d6e","modified":1535101014000},{"_id":"themes/cactus-dark-green/source/images/0、Android6.0系统文件目录结构.png","hash":"9c9235f377bfe4251b531a8532cd90ee1b9e5593","modified":1535099987000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"f92896ce0243daa72a6bd71a026ed7c9906f921e","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"f9f34b664f8bf760f3f848d6a31d14ab0e029993","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"e33b44e6286ab4134c3002391e81a1c9c84a6a0a","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"d775b9bf2ea3da471494a684baa56e312e906884","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"54d03b85192ebeaa6d34e680326bd4c0e1322296","modified":1531852359000},{"_id":"themes/cactus-dark-green/.git/logs/refs/remotes/origin/HEAD","hash":"3532b64696ba111b8b8902e35ba6840b261b4a4a","modified":1531852359000},{"_id":"themes/cactus-dark-green/.git/logs/refs/remotes/origin/master","hash":"b14aa7bc4e1851909cbb6f0b2406a37dffba213c","modified":1535101099000},{"_id":"themes/cactus-dark-green/.git/objects/06/046b9266be2ff42405a8e307c56b3564a579a9","hash":"d0f03c227fe1188409f96b42983b7a7c777042bb","modified":1535101014000},{"_id":"themes/cactus-dark-green/.git/objects/88/7edc11cb5b394df8ba1d5426208ce4af9a2555","hash":"b29e076132d1d8d311c399d777bbb9041054abf4","modified":1531852967000},{"_id":"themes/cactus-dark-green/.git/objects/db/a068019909a90c4e9c0b54953d8a5e3ff63b74","hash":"bc7d43112cac6c5aca5a4dc26572906437c5f50d","modified":1535101014000},{"_id":"themes/cactus-dark-green/source/images/11、SSL_TSL通信模型时序图.png","hash":"af96ab37c79a79dc24dfee7e76b181c805b9bfc7","modified":1536657959000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/images/12、javax.net.ssl.HttpsUrlConnection方法分析.png","hash":"da38f1966cbd8877c1e26fe86bf822735e13181e","modified":1535980557000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1531852359000},{"_id":"themes/cactus-dark-green/.git/objects/bb/64d9301df1cf527f4127560a4d944f4f67a7ea","hash":"10f3a0d7012be2fd0321809e0e408a2bb8176e56","modified":1535101014000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"8f8c9e3cc2fea292023f6ac5fe73ca1182ac9ef4","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/images/9、android-storage映射路径图.png","hash":"d3acf534c2bd0e656e6afb120f76a768173eb558","modified":1535097146000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"96b228c76e6cc3b70f6e47b7a5662b358bd10c46","modified":1531852359000},{"_id":"themes/cactus-dark-green/source/images/13、javax.net.ssl.SSLSocket分析.png","hash":"3119a16a9cb3372c9a21c1fa3348f6df2863ff86","modified":1535984646000},{"_id":"themes/cactus-dark-green/.git/objects/pack/pack-d3fd73fa09e254c8ca70adb8d2039aee62c0f4c2.pack","hash":"4eff42864a5b1b07a3cf59e5dd06f0e3ce3ad6ab","modified":1532397839000},{"_id":"public/2018/09/23/Mac磁盘清理/index.html","hash":"c800e961369ee58c1cf354ec8a24b730a723e1d3","modified":1538211159237},{"_id":"public/2018/09/05/比特币与区块链/index.html","hash":"32e1182815543e73ec944985ecc25c9fe2081ddb","modified":1538211159237},{"_id":"public/2018/09/03/OAuth认证/index.html","hash":"3e577e80eba413fdec3ce5760c87196ffdb45907","modified":1538211159237},{"_id":"public/2018/08/19/官方文档集合/index.html","hash":"519b77101aedb2164a8c0a787a3c29ca0e2a6900","modified":1538211159237},{"_id":"public/2018/07/24/Kotlin入门笔记/index.html","hash":"b236b696f89c9ece034839a758ffee5d4e85efe4","modified":1538211159238},{"_id":"public/2017/06/30/编程学习资源整理/index.html","hash":"1e377b3868beee1aa63a03176858ded67601ed0a","modified":1538211159238},{"_id":"public/archives/index.html","hash":"613a7cc7938ff9ba03b3e1a2972240417c027c4d","modified":1538211159238},{"_id":"public/archives/2017/index.html","hash":"dfc0896e6329df4c101d336aa2b6fa2f8bf7fc47","modified":1538211159238},{"_id":"public/archives/2017/06/index.html","hash":"fde96d4ae2a9c682e68496174d58da4dd94ddb4b","modified":1538211159238},{"_id":"public/archives/2018/index.html","hash":"6c7dc22227b51a8daed586e7017505cdb4ba0bfe","modified":1538211159238},{"_id":"public/archives/2018/07/index.html","hash":"fb583be8ba2d48b0ceb2dcd50b705691a986be51","modified":1538211159238},{"_id":"public/archives/2018/08/index.html","hash":"511015f7c315fff3e39011c341aece186a49933e","modified":1538211159238},{"_id":"public/archives/2018/09/index.html","hash":"25f65ff098ada2729e1b8bbf4df39a53fd8397c6","modified":1538211159238},{"_id":"public/tags/interanl-storage/index.html","hash":"948b08118b632815c9fce25e23d9dd8c468efab8","modified":1538211159238},{"_id":"public/tags/external-storage/index.html","hash":"de708b88d48fc1af8df88b83c5feddd7363f8664","modified":1538211159238},{"_id":"public/tags/data/index.html","hash":"92a2bc80e9d46bfea97af4b0e82da9db37b99d3f","modified":1538211159238},{"_id":"public/tags/system/index.html","hash":"d09379e85f5a277fc7a554a0f1965d2e03921640","modified":1538211159238},{"_id":"public/tags/多用户/index.html","hash":"88a1e1597654108da896c7881c6da7f7972dc066","modified":1538211159238},{"_id":"public/tags/android/index.html","hash":"ee5bbe479d8e6c9a83b7a5691c60bdc680c2a768","modified":1538211159238},{"_id":"public/tags/架构/index.html","hash":"c353c1ec71b8729278f99fa48bca4984d3cd0243","modified":1538211159238},{"_id":"public/tags/faruAndroid/index.html","hash":"91385474be498c3c328f3932b4b47f17187656fa","modified":1538211159238},{"_id":"public/tags/Kotlin/index.html","hash":"6f027492edbeb032b9529921994bab5894b78143","modified":1538211159238},{"_id":"public/tags/RxJava/index.html","hash":"8aa6a8f8c800c7cbcbeb5dff6c7b20fd778f1748","modified":1538211159239},{"_id":"public/tags/Retrofit/index.html","hash":"9062c35150d3d1711e4ba28503c5d1f61d50660e","modified":1538211159239},{"_id":"public/tags/组件化/index.html","hash":"22aeb39badde51e21c2fa1e6d373697aaf6c2fc6","modified":1538211159239},{"_id":"public/tags/插件化/index.html","hash":"e19a2fb5ed192dd214b48cb2241c34782cb7c1c1","modified":1538211159239},{"_id":"public/tags/热更新/index.html","hash":"d08ba2967d1a51f184dea49127b60bf3cc888dbf","modified":1538211159239},{"_id":"public/tags/持续集成/index.html","hash":"8aac68d34de6538ce3ae0a7e677983c6c1dac843","modified":1538211159239},{"_id":"public/tags/设计模式/index.html","hash":"3840d8ae23963adc48b5cc8238df05184039b706","modified":1538211159239},{"_id":"public/tags/设计原则/index.html","hash":"91cdb247c1358136d88992198ab9a22a8627571e","modified":1538211159240},{"_id":"public/tags/android-view/index.html","hash":"9f83de3cbe37ca1f97778b6cb61222b02658f0be","modified":1538211159240},{"_id":"public/tags/SSL-TLS/index.html","hash":"a167b61fcca1109a8c92e0053d09f0e22eaf697f","modified":1538211159240},{"_id":"public/tags/Cipher-Suites/index.html","hash":"ddc8c93a15ef20d5b96bdfd9d95e782d5f4dfccc","modified":1538211159240},{"_id":"public/tags/对称加密/index.html","hash":"8291dc595ee56b04edec78db08d7e003c684e709","modified":1538211159240},{"_id":"public/tags/非对称加密/index.html","hash":"5eb7debdb609be9151b4321168f9b504c6c9ed85","modified":1538211159240},{"_id":"public/tags/随机数/index.html","hash":"cfadc8a8ae3b3121942b8031e2f9739abe6a7842","modified":1538211159240},{"_id":"public/tags/证书/index.html","hash":"895399da21b3d690a99abc14082de9d826bd0363","modified":1538211159240},{"_id":"public/tags/Certificate/index.html","hash":"7b8a6035b0c984f7087867a155562ba355cc6dfa","modified":1538211159240},{"_id":"public/tags/pre-Master-Secret/index.html","hash":"d4d6b7a743d6ba22213e4a36fe3a0deef205d18a","modified":1538211159240},{"_id":"public/tags/Master-Secret/index.html","hash":"5b185625a83bd5fca263e277cf8d2653a5183490","modified":1538211159240},{"_id":"public/tags/会话秘钥/index.html","hash":"2f3a40f95b3f04ec23fe91a6e03e61837397684b","modified":1538211159240},{"_id":"public/tags/CA/index.html","hash":"6840c877f45473d1401f1713ad2d364fa8414e5a","modified":1538211159240},{"_id":"public/tags/Public-key/index.html","hash":"e0cc678d3e9e5fe7c94f901aef66f871bbeb8bc3","modified":1538211159240},{"_id":"public/tags/Private-key/index.html","hash":"7b984a6d98bcbd04c8d800bf9e97bbf9af814427","modified":1538211159240},{"_id":"public/tags/mac/index.html","hash":"1e48aef1b307d80a78e740dda8d625ffb9a0a51a","modified":1538211159241},{"_id":"public/tags/清理/index.html","hash":"1d4c88141988d78fdf1262420f34baf2ac031b19","modified":1538211159241},{"_id":"public/tags/存储空间/index.html","hash":"14e32ddaa0e5015efac3f881d88de2b24358fe13","modified":1538211159241},{"_id":"public/tags/Jetty/index.html","hash":"255740d73234c262973ef56a110b2c7146bce1c0","modified":1538211159241},{"_id":"public/tags/HTTPS/index.html","hash":"ef4581caabf708bed0857fc73559d43263f21145","modified":1538211159241},{"_id":"public/tags/SSL/index.html","hash":"a5460ec409c5343bcd3de2a96392d02a60e913f8","modified":1538211159241},{"_id":"public/tags/TLS/index.html","hash":"adbc62035484a022ed6b37f6e44a98c81ba3f21b","modified":1538211159241},{"_id":"public/tags/Http2/index.html","hash":"b21a2d7d49fa4610beb6b0c2d4be1b2c64a581c7","modified":1538211159241},{"_id":"public/tags/OkHttp/index.html","hash":"c1e761469e36346b2fde7c67aa551518c5e968ca","modified":1538211159241},{"_id":"public/tags/http2/index.html","hash":"703026b60c8d433d9725c91e457285e7ec333dd4","modified":1538211159241},{"_id":"public/tags/https/index.html","hash":"c42f7e04a0d1eeb19b785074e03aa12c6f763af4","modified":1538211159241},{"_id":"public/tags/cache/index.html","hash":"2a4408ed64d17b34f7ec7f4e80c43b08895df449","modified":1538211159241},{"_id":"public/tags/IPv4/index.html","hash":"97b277b517010fac4375ea5de7cd34a8d8147b5f","modified":1538211159241},{"_id":"public/tags/IPv6/index.html","hash":"33c5308867d9f529e584ec3a253cc9fcb9463c99","modified":1538211159241},{"_id":"public/tags/Gson/index.html","hash":"df09e751debba2ab9291bc98aa313da46894d77d","modified":1538211159241},{"_id":"public/tags/比特币/index.html","hash":"e009b2c9c707cac9fa1879184062221b5b496989","modified":1538211159241},{"_id":"public/tags/区块链/index.html","hash":"27a3543ac906d1a01bc6d3648a1ca7815b80bbcf","modified":1538211159241},{"_id":"public/tags/Android/index.html","hash":"797d5844bf0ca9d2d5748feb71a4e7366778331c","modified":1538211159241},{"_id":"public/tags/Linux/index.html","hash":"c1a81c15828c1125a45a9526c818bf3c13065054","modified":1538211159241},{"_id":"public/tags/Java/index.html","hash":"699f3ac9ac9efc2a45bda158dbc2a468dccaaa84","modified":1538211159242},{"_id":"public/tags/blog/index.html","hash":"2a6c0bec3c34a32999a4ed5f9a1d9922abf9c12d","modified":1538211159242},{"_id":"public/tags/github/index.html","hash":"3bfcfd2b30058486fa82ddd98eea8ad1962a0e71","modified":1538211159242},{"_id":"public/tags/edu/index.html","hash":"b05ff366f5b42e3266f8c1d0b19e8f98dbed2427","modified":1538211159242},{"_id":"public/tags/book/index.html","hash":"0f0d0546cd3b3925cbfdfad1794686f62be0c31d","modified":1538211159242},{"_id":"public/tags/myeclipse/index.html","hash":"d5d809a2f5e806f6d16d203f91aad64eb92ddc73","modified":1538211159242},{"_id":"public/tags/Maven/index.html","hash":"c2852dc6a100a3dbe014a86c2d01369834395638","modified":1538211159242},{"_id":"public/tags/struts2/index.html","hash":"a7efaeb97b935352e197e2929c7a6bf3ae89d97c","modified":1538211159242},{"_id":"public/tags/mobile-server/index.html","hash":"607230280e1f075f8547e914ec9ca28c9f5d5a47","modified":1538211159242},{"_id":"public/tags/server/index.html","hash":"7f5fa1e9a552f9cb1e511bc6be5e7c1c7f4f552c","modified":1538211159242},{"_id":"public/tags/struts/index.html","hash":"cc56bc20f183282961cde5571790e53f4cab846d","modified":1538211159242},{"_id":"public/2018/09/29/上传Android AAR文件到bintray JCenter/index.html","hash":"f025c5f6d368b6486e9c9ee16f63e2978604a976","modified":1538211159242},{"_id":"public/2018/09/11/Best Practices of HTTPS&TLS/index.html","hash":"f0242002eff91aa83364b0208e5144424ba2a90d","modified":1538211159242},{"_id":"public/2018/09/03/HTTPS及SSL-TLS概述/index.html","hash":"63862c6a7e3631baca5594fa2ea9a76a80af6478","modified":1538211159242},{"_id":"public/2018/08/24/AndroidStorage目录结构分析/index.html","hash":"97b65909a45a3f0e5b786b6e7b5c6f2dc3fb10dc","modified":1538211159242},{"_id":"public/2018/08/14/jetty配置https支持/index.html","hash":"c136510dfd4a30cbebc709c86b7c259e41f2c824","modified":1538211159242},{"_id":"public/2018/08/05/OkHttp入门/index.html","hash":"c5c1b2ea494cfedea19b84d4c0710587424c1e12","modified":1538211159242},{"_id":"public/2018/08/04/myeclipse、maven、struts2创建server项目/index.html","hash":"d1736667040916a178a8360e19846480d00f732f","modified":1538211159242},{"_id":"public/2018/08/03/Maven权威指南笔记/index.html","hash":"b432d209b6ec95c481e0a579d0fcc1cbe5e1d4c8","modified":1538211159242},{"_id":"public/2018/08/01/Android熟练学习路线/index.html","hash":"279ccdc9456f60d4f860f309deca820aca4bffb0","modified":1538211159242},{"_id":"public/2018/07/27/Android-testing/index.html","hash":"96c52355a7f69a852f04e6c5effdeb5b7078f598","modified":1538211159242},{"_id":"public/2018/07/24/Android通用基础功能模块开发/index.html","hash":"f1dc98a6cbdbc4ab03ff7eaa877720039538f871","modified":1538211159243},{"_id":"public/2018/07/24/Android基础开发框架2018/index.html","hash":"388fd997e411454ee55c242402cb321da051439a","modified":1538211159243},{"_id":"public/2018/07/18/碎片化知识总结-to be continued/index.html","hash":"be4154a30942478e3b55884969ca8f0bd8998199","modified":1538211159243},{"_id":"public/2018/07/15/Android版本特性及minSDKVersion设置/index.html","hash":"964823880d3eb75f6947a65557670aad784ce661","modified":1538211159243},{"_id":"public/2018/07/12/markdown-blog-template/index.html","hash":"9f47a8a63ef825658de3e71db3ab0814312a200a","modified":1538211159243},{"_id":"public/2018/07/11/How-To-Create-Github-Pages-with-Hexo/index.html","hash":"231bef62ba5d1815c279d766c4d6124c85c9b8bb","modified":1538211159243},{"_id":"public/index.html","hash":"fc4c7f79827153a405b3b81748e2f9ee955f83f4","modified":1538211159243},{"_id":"public/page/2/index.html","hash":"7dca6617142ae2f3f5220f117d1bb2cee35b242a","modified":1538211159243},{"_id":"public/images/15、remove-maven-webapp-default-sufix-MavenWebapp.png","hash":"38050c071becd8053cc475f50bd066af81e791c6","modified":1538211159251},{"_id":"public/images/favicon-192x192.png","hash":"468559a7dc80f66455cf615162e44a0503231520","modified":1538211159251},{"_id":"public/images/TDD-testing-workflow.png","hash":"ed09079f2bcd969aa3b2c98ea3f7d1113916745c","modified":1538211159252},{"_id":"public/images/apple-touch-icon.png","hash":"44cfafb6c716f42fc7a115db09ea00d6c30eee48","modified":1538211159252},{"_id":"public/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1538211159252},{"_id":"public/lib/vazir-font/Vazir-Bold.woff","hash":"6c6dfec4dbaff4850225f931d3bba53675651fa7","modified":1538211159252},{"_id":"public/lib/vazir-font/Vazir-Bold.woff2","hash":"1f3e8d1b0cd6e77c861e3d9326aaaab42ab32850","modified":1538211159252},{"_id":"public/lib/vazir-font/Vazir-Light.woff","hash":"4a51786e743c6fb3a14f9c04e712a40ae8a15a5a","modified":1538211159252},{"_id":"public/lib/vazir-font/Vazir-Light.woff2","hash":"fa68ba20ee5a58b431ed0aeee37a54b78e99890e","modified":1538211159252},{"_id":"public/lib/vazir-font/Vazir.woff","hash":"072460f4c8ef03ab81be9128e0e3509f1f925767","modified":1538211159252},{"_id":"public/lib/vazir-font/Vazir.woff2","hash":"428df6ad6d662532e8e8239353d4623b88373668","modified":1538211159252},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"b2258ca3824c7e0a03efe19edc10d54571fcf0b4","modified":1538211159252},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"065d1184f7256fc4897a1c3023a361b2491282e1","modified":1538211159252},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"74b3228a2cc98d96ddcd095915dd770c27cd2858","modified":1538211159252},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"45bb0eb8b57b864dbf7da820fd8dc17b296753ee","modified":1538211159252},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"09fe1eedfc1378d20828d07cbaf0a15284757211","modified":1538211159252},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"28844ababc02fe5cea50bec9321da0a492ce1369","modified":1538211159252},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"7a4c38d80cab424875ffcfc090ad3941e0f7a4cf","modified":1538211159253},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"05d552c1d360502f134a3aa37580373b14d65797","modified":1538211159253},{"_id":"public/images/8、android不同版本sdcard软链接.png","hash":"2adff5038fa79b63f983a290114c72b887bbaf69","modified":1538211159537},{"_id":"public/images/testing-pyramid-2x.png","hash":"c146041f7197ce574eae8718332ed4ea4c556148","modified":1538211159538},{"_id":"public/lib/vazir-font/Vazir-Bold.eot","hash":"5706a20a89888535e0d3615d7ee6dc51d3bdd23b","modified":1538211159538},{"_id":"public/lib/vazir-font/Vazir-Bold.ttf","hash":"c2a312c63dbbaec50d15bace1f13c672603cf098","modified":1538211159538},{"_id":"public/lib/vazir-font/Vazir-Light.ttf","hash":"b0a3639e51810b7a5fb6ba6d6c72dc96c3e2e827","modified":1538211159538},{"_id":"public/lib/vazir-font/Vazir.eot","hash":"265d748c0e62330ad0286acae64a42d6db983531","modified":1538211159538},{"_id":"public/lib/vazir-font/Vazir-Light.eot","hash":"e9ff71c83c56e7a9c098fe17b5520b55fb3b7f93","modified":1538211159538},{"_id":"public/lib/vazir-font/Vazir.ttf","hash":"ca62b35a88ef3d09d058eea5cfdafba86ec361c7","modified":1538211159538},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"f92896ce0243daa72a6bd71a026ed7c9906f921e","modified":1538211159538},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"e33b44e6286ab4134c3002391e81a1c9c84a6a0a","modified":1538211159538},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"f9f34b664f8bf760f3f848d6a31d14ab0e029993","modified":1538211159538},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"d775b9bf2ea3da471494a684baa56e312e906884","modified":1538211159538},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"54d03b85192ebeaa6d34e680326bd4c0e1322296","modified":1538211159538},{"_id":"public/css/rtl.css","hash":"e740075e5ae62b9fe7bd906a38caf7a0a694be1f","modified":1538211159546},{"_id":"public/js/main.js","hash":"7722f0b9c0b35442267973864071fba9b4ac17eb","modified":1538211159546},{"_id":"public/js/search.js","hash":"c917e50db5173db1674ddabec789245a9f9f55f6","modified":1538211159546},{"_id":"public/lib/justified-gallery/css/justifiedGallery.min.css","hash":"e7ba2de65435a0067d64f49b92a6d395cab508cc","modified":1538211159546},{"_id":"public/css/style.css","hash":"50f6752c07dd5ee3fe77ffb24678e21f2168deac","modified":1538211159546},{"_id":"public/images/14、maven-child-module-not-exist.png","hash":"c1edac9e853894c6c799b37e536db076734283e0","modified":1538211159546},{"_id":"public/images/6、android-system目录.png","hash":"d83a5d074d3689bd3e51c8045fe0baac566e5e65","modified":1538211159546},{"_id":"public/images/7、android-mnt目录.png","hash":"6654875621073411bdf410cea18e1ebc74d02042","modified":1538211159547},{"_id":"public/images/1、android存储目录结构.jpeg","hash":"370fc03d270462d8f2a73a05f96e7ccc55c2bcb8","modified":1538211159554},{"_id":"public/images/10、SSL_TSL通信模型概要.png","hash":"cd9511140bfd2ae024871f7c20c0a38a8b8adc74","modified":1538211159555},{"_id":"public/images/2、android4.2之前存储目录结构.png","hash":"f9cce571a97fc45daf9cb89825e50cc13ae4692d","modified":1538211159555},{"_id":"public/images/4、android多用户存储.png","hash":"0b63370bfd7521d702e8fb97300e4ea50ac22642","modified":1538211159555},{"_id":"public/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"1151c5ef92d121329e8ef75ea997a5b79babc00b","modified":1538211159561},{"_id":"public/images/0、Android4.1.1系统目录结构.png","hash":"686ffc31ff4991eefc963c6b76d83597d2dfa034","modified":1538211159561},{"_id":"public/images/3、android4.2支持多用户的存储路径图.png","hash":"6a1cb73a812783956adeca56da50f08b040fa27a","modified":1538211159561},{"_id":"public/images/5、android-data目录.png","hash":"f895de0fffedf69516cdf90d24f39978d5171eaf","modified":1538211159562},{"_id":"public/images/logo.png","hash":"957d46f2405b156f7cc5ee8edc9ccc72db500950","modified":1538211159562},{"_id":"public/images/0、Android6.0系统文件目录结构.png","hash":"9c9235f377bfe4251b531a8532cd90ee1b9e5593","modified":1538211159570},{"_id":"public/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1538211159570},{"_id":"public/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1538211159571},{"_id":"public/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1538211159571},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"8f8c9e3cc2fea292023f6ac5fe73ca1182ac9ef4","modified":1538211159571},{"_id":"public/lib/font-awesome/css/fontawesome-all.min.css","hash":"dac0b9af15b6aa47b072469eb440cbe8fee16034","modified":1538211159579},{"_id":"public/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1538211159579},{"_id":"public/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1538211159579},{"_id":"public/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1538211159580},{"_id":"public/images/11、SSL_TSL通信模型时序图.png","hash":"af96ab37c79a79dc24dfee7e76b181c805b9bfc7","modified":1538211159594},{"_id":"public/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1538211159594},{"_id":"public/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1538211159595},{"_id":"public/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1538211159595},{"_id":"public/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1538211159596},{"_id":"public/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1538211159596},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"96b228c76e6cc3b70f6e47b7a5662b358bd10c46","modified":1538211159597},{"_id":"public/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1538211159597},{"_id":"public/images/12、javax.net.ssl.HttpsUrlConnection方法分析.png","hash":"da38f1966cbd8877c1e26fe86bf822735e13181e","modified":1538211159605},{"_id":"public/images/9、android-storage映射路径图.png","hash":"d3acf534c2bd0e656e6afb120f76a768173eb558","modified":1538211159609},{"_id":"public/lib/jquery/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1538211159620},{"_id":"public/images/13、javax.net.ssl.SSLSocket分析.png","hash":"3119a16a9cb3372c9a21c1fa3348f6df2863ff86","modified":1538211159631}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Android测试：单元测试、集成测试、UI测试","date":"2018-07-27T15:55:20.000Z","summery":"关于Android测试，很早就有了尝试，但由于业务耦合，测试起来相当困难，几乎是弊大于利。自从android-testing之后，测试变得不那么神秘，今天就来一起了解在Android中如何正确的做各种测试。","_content":"\n### 相关资源\n\n[网友博客android-testing]\n\n[Mockito官网]\n\n[BDDMockito guide]\n\n[Use Mockito in Android with dexmaker]\n\n[TDD]\n\n[BDD]\n\n[Test-Driven Development on Android with the Android Testing Support Library (Google I/O '17)]\n\n[jetpack]\n\n\n\n### 测试驱动开发TDD（test-driven development）\n\n<div align=\"center\">\n\t<img src=\"/images/TDD-testing-workflow.png\" width=\"90%\" />\n</div>\n\n1. Unit Test \t\t\t\t(Small Tests)\n3. UI Test   \t\t\t\t(Large Tests)\n\n### 测试金字塔\n\n\n<div align=\"center\">\n\t<img src=\"/images/testing-pyramid-2x.png\" width=\"90%\" />\n</div>\n\n1. Unit Test \t\t\t\t(Small Tests)   \n\n```\n推荐多写单元测试，因为他运行在本地电脑，并且mocked或者stubed很多至关重要的核心组件，例如Android中Context对象；\n该类测试旨在测试语法，异常，逻辑是否如我们所设计的一样被执行。并不能说明程序就没有错误。提前发现错误\n```\n\t  \n2. integration Test\t\t(Medium Tests)\n\n```\nthis kind of Tests told you that your function is actually works。\n这种测试被运行在真机或者模拟器中，用于测试你的程序真的可以正常工作。\n```\n3. UI Test   \t\t\t\t(Large Tests)\n\n\n推荐各种类型的测试用例占比为： <b>70 percent small, 20 percent medium, and 10 percent large.</b>\n\n### 多种测试框架及辅助测试工具\n\n|名称|描述|作用|\n|----|----|-----|\n| Junit Test |普通单元测试||\n| InstrumentationTestRunner |Android中只支持Junit3，已过时||\n| AndroidJunitRunner |Android单元测试，替代InstrumentationTestRunner |支持Junit3和Junit4在Android中使用|\n| AndroidJunit4 ||Android中使用@RunWith(AndroidJUnit4.class)|\n| MockitoJUnitRunner|||\n| Mockito |Stubed & Mocked 对象||\n| Robolectric |类似Mockito||\n| UI Automator |Android UI 黑盒自动化测试（又称功能测试），依赖于AndroidJunitRunner ||\n| Espresso |Android UI 白盒自动化测试，依赖于AndroidJunitRunner ||\n| ActivityInstrumentationTestCase2 |已过时||\n| ActivityTestRule |替代ActivityInstrumentationTestCase2 ||\n| ServiceTestRule |不支持IntentService||\n\n1. org.junit.runners.JUnit4\n\n```gradle\n\tapply plugin: 'com.android.application'\n\t\n\tandroid {\n\t    compileSdkVersion 26\n\t    buildToolsVersion rootProject.buildToolsVersion\n\t    defaultConfig {\n\t        applicationId \"com.example.android.testing.unittesting.BasicSample\"\n\t        minSdkVersion 9\n\t        versionCode 1\n\t        versionName \"1.0\"\n\t        targetSdkVersion 26\n\t    }\n\t    productFlavors {\n\t    }\n\t}\n\t\n\tdependencies {\n\t    // Unit testing dependencies.\n\t    testCompile 'junit:junit:' + rootProject.junitVersion;\n\t    testCompile \"org.mockito:mockito-inline:+\"\n\t    //testCompile 'org.mockito:mockito-core:' + rootProject.mockitoVersion;\n\t}\n\n```\n\t\n2. android.support.test.runner.AndroidJUnitRunner\n\n```gradle\n\tapply plugin: 'com.android.application'\n\t\t\n\tandroid {\n\t    compileSdkVersion 26\n\t    buildToolsVersion rootProject.buildToolsVersion\n\t\t\n\t    defaultConfig {\n\t        applicationId \"com.example.android.testing.unittesting.basicunitandroidtest\"\n\t        minSdkVersion 9\n\t        targetSdkVersion 26\n\t        versionCode 1\n\t        versionName \"1.0\"\n\t        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n\t    }\n\t}\n\t\t\n\tdependencies {\n\t    // Testing-only dependencies\n\t    // Force usage of support annotations in the test app, since it is internally used by the runner module.\n\t    androidTestCompile 'com.android.support:support-annotations:' + rootProject.supportLibVersion;\n\t    androidTestCompile 'com.android.support.test:runner:' + rootProject.runnerVersion;\n\t    androidTestCompile 'org.hamcrest:hamcrest-library:' + rootProject.hamcrestVersion;\n\t}\n\n```\n\n3. 水电费\n\n```gradle\n\n```\n\n4. sfd\n\t\n\n### 参考文档\n\n[Mockito guide]\n\n[Mocktio 语法简介]\n\n### Mock Android Issue Track\n\n[mockito android issues]\n\n[mockito android issues]:https://github.com/mockito/mockito/issues/new\n\n### Android项目中引入Mockito支持\n\n1. 使用官方提供的androidTestCompile支持\n\n\t```gradle\n\t repositories {\n\t   jcenter()\n\t }\n\t dependencies {\n\t   //对普通java mock测试支持\n\t   testCompile \"org.mockito:mockito-core:+\"\n\t   //mockito官方于mockito 2.6.1开始对android依赖库提供mock支持\n\t   androidTestCompile \"org.mockito:mockito-android:+\"\n\t }\n\t \n\t```\n   \n2. 使用LinkedIn公司dexmaker团队基于mockito提供的androidTestCompile支持\n\n\t```gradle\n\t repositories {\n\t   jcenter()\n\t }\n\t dependencies {\n\t   //对普通java mock测试支持\n\t   testCompile \"org.mockito:mockito-core:+\"\n\t   //使用LinkedIn公司dexmaker团队基于mockito提供的androidTestCompile支持\n\t   androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.19.0'\n\t }\n\t \n\t```\n\t\n3. Mocking final types, enums and final methods (Since 2.1.0)\n\n\t```gradle\n\trepositories {\n\t   jcenter()\n\t }\n\t dependencies {\n\t   //想要mock final types，enums，final methods\n\t   //使用mockito-inline替换mockito-core\n\t   testCompile \"org.mockito:mockito-inline:+\"\n\t   //androidTestCompile \"org.mockito:mockito-android:+\"\n\t   //androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.19.0'\n\t }\n\t```\n\n4. sdfsf\n\n### 初始化mockito及MockitoAnnotations\n\n1. MockitoAnnotations\n1. MockitoJUnitRunner\n2. MockitoRule\n\n[Mockito官网]:http://site.mockito.org/#training\n[Mockito guide]:http://static.javadoc.io/org.mockito/mockito-core/2.20.0/org/mockito/Mockito.html\n[Mocktio 语法简介]:https://blog.csdn.net/qq_17766199/article/details/78450007\n[BDDMockito guide]:http://static.javadoc.io/org.mockito/mockito-core/2.20.0/org/mockito/BDDMockito.html\n[Use Mockito in Android with dexmaker]:https://github.com/linkedin/dexmaker\n[TDD]:https://baike.baidu.com/item/TDD/9064369\n[Test-Driven Development on Android with the Android Testing Support Library (Google I/O '17)]:https://www.youtube.com/watch?v=pK7W5npkhho&start=111\n[jetpack]:https://developer.android.com/jetpack/\n[网友博客android-testing]:https://blog.csdn.net/u012496940/article/details/49081151\n[BDD]:","source":"_posts/Android-testing.md","raw":"---\ntitle: Android测试：单元测试、集成测试、UI测试\ndate: 2018-07-27 23:55:20\ntags:\nsummery: 关于Android测试，很早就有了尝试，但由于业务耦合，测试起来相当困难，几乎是弊大于利。自从android-testing之后，测试变得不那么神秘，今天就来一起了解在Android中如何正确的做各种测试。\n\n---\n\n### 相关资源\n\n[网友博客android-testing]\n\n[Mockito官网]\n\n[BDDMockito guide]\n\n[Use Mockito in Android with dexmaker]\n\n[TDD]\n\n[BDD]\n\n[Test-Driven Development on Android with the Android Testing Support Library (Google I/O '17)]\n\n[jetpack]\n\n\n\n### 测试驱动开发TDD（test-driven development）\n\n<div align=\"center\">\n\t<img src=\"/images/TDD-testing-workflow.png\" width=\"90%\" />\n</div>\n\n1. Unit Test \t\t\t\t(Small Tests)\n3. UI Test   \t\t\t\t(Large Tests)\n\n### 测试金字塔\n\n\n<div align=\"center\">\n\t<img src=\"/images/testing-pyramid-2x.png\" width=\"90%\" />\n</div>\n\n1. Unit Test \t\t\t\t(Small Tests)   \n\n```\n推荐多写单元测试，因为他运行在本地电脑，并且mocked或者stubed很多至关重要的核心组件，例如Android中Context对象；\n该类测试旨在测试语法，异常，逻辑是否如我们所设计的一样被执行。并不能说明程序就没有错误。提前发现错误\n```\n\t  \n2. integration Test\t\t(Medium Tests)\n\n```\nthis kind of Tests told you that your function is actually works。\n这种测试被运行在真机或者模拟器中，用于测试你的程序真的可以正常工作。\n```\n3. UI Test   \t\t\t\t(Large Tests)\n\n\n推荐各种类型的测试用例占比为： <b>70 percent small, 20 percent medium, and 10 percent large.</b>\n\n### 多种测试框架及辅助测试工具\n\n|名称|描述|作用|\n|----|----|-----|\n| Junit Test |普通单元测试||\n| InstrumentationTestRunner |Android中只支持Junit3，已过时||\n| AndroidJunitRunner |Android单元测试，替代InstrumentationTestRunner |支持Junit3和Junit4在Android中使用|\n| AndroidJunit4 ||Android中使用@RunWith(AndroidJUnit4.class)|\n| MockitoJUnitRunner|||\n| Mockito |Stubed & Mocked 对象||\n| Robolectric |类似Mockito||\n| UI Automator |Android UI 黑盒自动化测试（又称功能测试），依赖于AndroidJunitRunner ||\n| Espresso |Android UI 白盒自动化测试，依赖于AndroidJunitRunner ||\n| ActivityInstrumentationTestCase2 |已过时||\n| ActivityTestRule |替代ActivityInstrumentationTestCase2 ||\n| ServiceTestRule |不支持IntentService||\n\n1. org.junit.runners.JUnit4\n\n```gradle\n\tapply plugin: 'com.android.application'\n\t\n\tandroid {\n\t    compileSdkVersion 26\n\t    buildToolsVersion rootProject.buildToolsVersion\n\t    defaultConfig {\n\t        applicationId \"com.example.android.testing.unittesting.BasicSample\"\n\t        minSdkVersion 9\n\t        versionCode 1\n\t        versionName \"1.0\"\n\t        targetSdkVersion 26\n\t    }\n\t    productFlavors {\n\t    }\n\t}\n\t\n\tdependencies {\n\t    // Unit testing dependencies.\n\t    testCompile 'junit:junit:' + rootProject.junitVersion;\n\t    testCompile \"org.mockito:mockito-inline:+\"\n\t    //testCompile 'org.mockito:mockito-core:' + rootProject.mockitoVersion;\n\t}\n\n```\n\t\n2. android.support.test.runner.AndroidJUnitRunner\n\n```gradle\n\tapply plugin: 'com.android.application'\n\t\t\n\tandroid {\n\t    compileSdkVersion 26\n\t    buildToolsVersion rootProject.buildToolsVersion\n\t\t\n\t    defaultConfig {\n\t        applicationId \"com.example.android.testing.unittesting.basicunitandroidtest\"\n\t        minSdkVersion 9\n\t        targetSdkVersion 26\n\t        versionCode 1\n\t        versionName \"1.0\"\n\t        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n\t    }\n\t}\n\t\t\n\tdependencies {\n\t    // Testing-only dependencies\n\t    // Force usage of support annotations in the test app, since it is internally used by the runner module.\n\t    androidTestCompile 'com.android.support:support-annotations:' + rootProject.supportLibVersion;\n\t    androidTestCompile 'com.android.support.test:runner:' + rootProject.runnerVersion;\n\t    androidTestCompile 'org.hamcrest:hamcrest-library:' + rootProject.hamcrestVersion;\n\t}\n\n```\n\n3. 水电费\n\n```gradle\n\n```\n\n4. sfd\n\t\n\n### 参考文档\n\n[Mockito guide]\n\n[Mocktio 语法简介]\n\n### Mock Android Issue Track\n\n[mockito android issues]\n\n[mockito android issues]:https://github.com/mockito/mockito/issues/new\n\n### Android项目中引入Mockito支持\n\n1. 使用官方提供的androidTestCompile支持\n\n\t```gradle\n\t repositories {\n\t   jcenter()\n\t }\n\t dependencies {\n\t   //对普通java mock测试支持\n\t   testCompile \"org.mockito:mockito-core:+\"\n\t   //mockito官方于mockito 2.6.1开始对android依赖库提供mock支持\n\t   androidTestCompile \"org.mockito:mockito-android:+\"\n\t }\n\t \n\t```\n   \n2. 使用LinkedIn公司dexmaker团队基于mockito提供的androidTestCompile支持\n\n\t```gradle\n\t repositories {\n\t   jcenter()\n\t }\n\t dependencies {\n\t   //对普通java mock测试支持\n\t   testCompile \"org.mockito:mockito-core:+\"\n\t   //使用LinkedIn公司dexmaker团队基于mockito提供的androidTestCompile支持\n\t   androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.19.0'\n\t }\n\t \n\t```\n\t\n3. Mocking final types, enums and final methods (Since 2.1.0)\n\n\t```gradle\n\trepositories {\n\t   jcenter()\n\t }\n\t dependencies {\n\t   //想要mock final types，enums，final methods\n\t   //使用mockito-inline替换mockito-core\n\t   testCompile \"org.mockito:mockito-inline:+\"\n\t   //androidTestCompile \"org.mockito:mockito-android:+\"\n\t   //androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.19.0'\n\t }\n\t```\n\n4. sdfsf\n\n### 初始化mockito及MockitoAnnotations\n\n1. MockitoAnnotations\n1. MockitoJUnitRunner\n2. MockitoRule\n\n[Mockito官网]:http://site.mockito.org/#training\n[Mockito guide]:http://static.javadoc.io/org.mockito/mockito-core/2.20.0/org/mockito/Mockito.html\n[Mocktio 语法简介]:https://blog.csdn.net/qq_17766199/article/details/78450007\n[BDDMockito guide]:http://static.javadoc.io/org.mockito/mockito-core/2.20.0/org/mockito/BDDMockito.html\n[Use Mockito in Android with dexmaker]:https://github.com/linkedin/dexmaker\n[TDD]:https://baike.baidu.com/item/TDD/9064369\n[Test-Driven Development on Android with the Android Testing Support Library (Google I/O '17)]:https://www.youtube.com/watch?v=pK7W5npkhho&start=111\n[jetpack]:https://developer.android.com/jetpack/\n[网友博客android-testing]:https://blog.csdn.net/u012496940/article/details/49081151\n[BDD]:","slug":"Android-testing","published":1,"updated":"2018-07-27T15:56:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hfz0000js6suxq8j7i5","content":"<h3 id=\"相关资源\"><a href=\"#相关资源\" class=\"headerlink\" title=\"相关资源\"></a>相关资源</h3><p><a href=\"https://blog.csdn.net/u012496940/article/details/49081151\" target=\"_blank\" rel=\"noopener\">网友博客android-testing</a></p>\n<p><a href=\"http://site.mockito.org/#training\" target=\"_blank\" rel=\"noopener\">Mockito官网</a></p>\n<p><a href=\"http://static.javadoc.io/org.mockito/mockito-core/2.20.0/org/mockito/BDDMockito.html\" target=\"_blank\" rel=\"noopener\">BDDMockito guide</a></p>\n<p><a href=\"https://github.com/linkedin/dexmaker\" target=\"_blank\" rel=\"noopener\">Use Mockito in Android with dexmaker</a></p>\n<p><a href=\"https://baike.baidu.com/item/TDD/9064369\" target=\"_blank\" rel=\"noopener\">TDD</a></p>\n<p>[BDD]</p>\n<p><a href=\"https://www.youtube.com/watch?v=pK7W5npkhho&amp;start=111\" target=\"_blank\" rel=\"noopener\">Test-Driven Development on Android with the Android Testing Support Library (Google I/O ‘17)</a></p>\n<p><a href=\"https://developer.android.com/jetpack/\" target=\"_blank\" rel=\"noopener\">jetpack</a></p>\n<h3 id=\"测试驱动开发TDD（test-driven-development）\"><a href=\"#测试驱动开发TDD（test-driven-development）\" class=\"headerlink\" title=\"测试驱动开发TDD（test-driven development）\"></a>测试驱动开发TDD（test-driven development）</h3><div align=\"center\"><br>    <img src=\"/images/TDD-testing-workflow.png\" width=\"90%\"><br></div>\n\n<ol>\n<li>Unit Test                 (Small Tests)</li>\n<li>UI Test                   (Large Tests)</li>\n</ol>\n<h3 id=\"测试金字塔\"><a href=\"#测试金字塔\" class=\"headerlink\" title=\"测试金字塔\"></a>测试金字塔</h3><div align=\"center\"><br>    <img src=\"/images/testing-pyramid-2x.png\" width=\"90%\"><br></div>\n\n<ol>\n<li>Unit Test                 (Small Tests)   </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">推荐多写单元测试，因为他运行在本地电脑，并且mocked或者stubed很多至关重要的核心组件，例如Android中Context对象；</span><br><span class=\"line\">该类测试旨在测试语法，异常，逻辑是否如我们所设计的一样被执行。并不能说明程序就没有错误。提前发现错误</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>integration Test        (Medium Tests)</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this kind of Tests told you that your function is actually works。</span><br><span class=\"line\">这种测试被运行在真机或者模拟器中，用于测试你的程序真的可以正常工作。</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>UI Test                   (Large Tests)</li>\n</ol>\n<p>推荐各种类型的测试用例占比为： <b>70 percent small, 20 percent medium, and 10 percent large.</b></p>\n<h3 id=\"多种测试框架及辅助测试工具\"><a href=\"#多种测试框架及辅助测试工具\" class=\"headerlink\" title=\"多种测试框架及辅助测试工具\"></a>多种测试框架及辅助测试工具</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Junit Test</td>\n<td>普通单元测试</td>\n<td></td>\n</tr>\n<tr>\n<td>InstrumentationTestRunner</td>\n<td>Android中只支持Junit3，已过时</td>\n<td></td>\n</tr>\n<tr>\n<td>AndroidJunitRunner</td>\n<td>Android单元测试，替代InstrumentationTestRunner</td>\n<td>支持Junit3和Junit4在Android中使用</td>\n</tr>\n<tr>\n<td>AndroidJunit4</td>\n<td></td>\n<td>Android中使用@RunWith(AndroidJUnit4.class)</td>\n</tr>\n<tr>\n<td>MockitoJUnitRunner</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Mockito</td>\n<td>Stubed &amp; Mocked 对象</td>\n<td></td>\n</tr>\n<tr>\n<td>Robolectric</td>\n<td>类似Mockito</td>\n<td></td>\n</tr>\n<tr>\n<td>UI Automator</td>\n<td>Android UI 黑盒自动化测试（又称功能测试），依赖于AndroidJunitRunner</td>\n<td></td>\n</tr>\n<tr>\n<td>Espresso</td>\n<td>Android UI 白盒自动化测试，依赖于AndroidJunitRunner</td>\n<td></td>\n</tr>\n<tr>\n<td>ActivityInstrumentationTestCase2</td>\n<td>已过时</td>\n<td></td>\n</tr>\n<tr>\n<td>ActivityTestRule</td>\n<td>替代ActivityInstrumentationTestCase2</td>\n<td></td>\n</tr>\n<tr>\n<td>ServiceTestRule</td>\n<td>不支持IntentService</td>\n</tr>\n</tbody>\n</table>\n<ol>\n<li>org.junit.runners.JUnit4</li>\n</ol>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.android.application'</span></span><br><span class=\"line\"></span><br><span class=\"line\">android &#123;</span><br><span class=\"line\">    compileSdkVersion <span class=\"number\">26</span></span><br><span class=\"line\">    buildToolsVersion rootProject.buildToolsVersion</span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        applicationId <span class=\"string\">\"com.example.android.testing.unittesting.BasicSample\"</span></span><br><span class=\"line\">        minSdkVersion <span class=\"number\">9</span></span><br><span class=\"line\">        versionCode <span class=\"number\">1</span></span><br><span class=\"line\">        versionName <span class=\"string\">\"1.0\"</span></span><br><span class=\"line\">        targetSdkVersion <span class=\"number\">26</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    productFlavors &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Unit testing dependencies.</span></span><br><span class=\"line\">    testCompile <span class=\"string\">'junit:junit:'</span> + rootProject.junitVersion;</span><br><span class=\"line\">    testCompile <span class=\"string\">\"org.mockito:mockito-inline:+\"</span></span><br><span class=\"line\">    <span class=\"comment\">//testCompile 'org.mockito:mockito-core:' + rootProject.mockitoVersion;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>android.support.test.runner.AndroidJUnitRunner</li>\n</ol>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.android.application'</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">android &#123;</span><br><span class=\"line\">    compileSdkVersion <span class=\"number\">26</span></span><br><span class=\"line\">    buildToolsVersion rootProject.buildToolsVersion</span><br><span class=\"line\">\t</span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        applicationId <span class=\"string\">\"com.example.android.testing.unittesting.basicunitandroidtest\"</span></span><br><span class=\"line\">        minSdkVersion <span class=\"number\">9</span></span><br><span class=\"line\">        targetSdkVersion <span class=\"number\">26</span></span><br><span class=\"line\">        versionCode <span class=\"number\">1</span></span><br><span class=\"line\">        versionName <span class=\"string\">\"1.0\"</span></span><br><span class=\"line\">        testInstrumentationRunner <span class=\"string\">\"android.support.test.runner.AndroidJUnitRunner\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Testing-only dependencies</span></span><br><span class=\"line\">    <span class=\"comment\">// Force usage of support annotations in the test app, since it is internally used by the runner module.</span></span><br><span class=\"line\">    androidTestCompile <span class=\"string\">'com.android.support:support-annotations:'</span> + rootProject.supportLibVersion;</span><br><span class=\"line\">    androidTestCompile <span class=\"string\">'com.android.support.test:runner:'</span> + rootProject.runnerVersion;</span><br><span class=\"line\">    androidTestCompile <span class=\"string\">'org.hamcrest:hamcrest-library:'</span> + rootProject.hamcrestVersion;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>水电费</li>\n</ol>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>sfd</li>\n</ol>\n<h3 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h3><p><a href=\"http://static.javadoc.io/org.mockito/mockito-core/2.20.0/org/mockito/Mockito.html\" target=\"_blank\" rel=\"noopener\">Mockito guide</a></p>\n<p><a href=\"https://blog.csdn.net/qq_17766199/article/details/78450007\" target=\"_blank\" rel=\"noopener\">Mocktio 语法简介</a></p>\n<h3 id=\"Mock-Android-Issue-Track\"><a href=\"#Mock-Android-Issue-Track\" class=\"headerlink\" title=\"Mock Android Issue Track\"></a>Mock Android Issue Track</h3><p><a href=\"https://github.com/mockito/mockito/issues/new\" target=\"_blank\" rel=\"noopener\">mockito android issues</a></p>\n<h3 id=\"Android项目中引入Mockito支持\"><a href=\"#Android项目中引入Mockito支持\" class=\"headerlink\" title=\"Android项目中引入Mockito支持\"></a>Android项目中引入Mockito支持</h3><ol>\n<li><p>使用官方提供的androidTestCompile支持</p>\n <figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">  jcenter()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//对普通java mock测试支持</span></span><br><span class=\"line\">  testCompile <span class=\"string\">\"org.mockito:mockito-core:+\"</span></span><br><span class=\"line\">  <span class=\"comment\">//mockito官方于mockito 2.6.1开始对android依赖库提供mock支持</span></span><br><span class=\"line\">  androidTestCompile <span class=\"string\">\"org.mockito:mockito-android:+\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>使用LinkedIn公司dexmaker团队基于mockito提供的androidTestCompile支持</p>\n <figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">  jcenter()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//对普通java mock测试支持</span></span><br><span class=\"line\">  testCompile <span class=\"string\">\"org.mockito:mockito-core:+\"</span></span><br><span class=\"line\">  <span class=\"comment\">//使用LinkedIn公司dexmaker团队基于mockito提供的androidTestCompile支持</span></span><br><span class=\"line\">  androidTestCompile <span class=\"string\">'com.linkedin.dexmaker:dexmaker-mockito:2.19.0'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>Mocking final types, enums and final methods (Since 2.1.0)</p>\n <figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">   jcenter()</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">//想要mock final types，enums，final methods</span></span><br><span class=\"line\">   <span class=\"comment\">//使用mockito-inline替换mockito-core</span></span><br><span class=\"line\">   testCompile <span class=\"string\">\"org.mockito:mockito-inline:+\"</span></span><br><span class=\"line\">   <span class=\"comment\">//androidTestCompile \"org.mockito:mockito-android:+\"</span></span><br><span class=\"line\">   <span class=\"comment\">//androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.19.0'</span></span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>sdfsf</p>\n</li>\n</ol>\n<h3 id=\"初始化mockito及MockitoAnnotations\"><a href=\"#初始化mockito及MockitoAnnotations\" class=\"headerlink\" title=\"初始化mockito及MockitoAnnotations\"></a>初始化mockito及MockitoAnnotations</h3><ol>\n<li>MockitoAnnotations</li>\n<li>MockitoJUnitRunner</li>\n<li>MockitoRule</li>\n</ol>\n<p>[BDD]:</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"相关资源\"><a href=\"#相关资源\" class=\"headerlink\" title=\"相关资源\"></a>相关资源</h3><p><a href=\"https://blog.csdn.net/u012496940/article/details/49081151\" target=\"_blank\" rel=\"noopener\">网友博客android-testing</a></p>\n<p><a href=\"http://site.mockito.org/#training\" target=\"_blank\" rel=\"noopener\">Mockito官网</a></p>\n<p><a href=\"http://static.javadoc.io/org.mockito/mockito-core/2.20.0/org/mockito/BDDMockito.html\" target=\"_blank\" rel=\"noopener\">BDDMockito guide</a></p>\n<p><a href=\"https://github.com/linkedin/dexmaker\" target=\"_blank\" rel=\"noopener\">Use Mockito in Android with dexmaker</a></p>\n<p><a href=\"https://baike.baidu.com/item/TDD/9064369\" target=\"_blank\" rel=\"noopener\">TDD</a></p>\n<p>[BDD]</p>\n<p><a href=\"https://www.youtube.com/watch?v=pK7W5npkhho&amp;start=111\" target=\"_blank\" rel=\"noopener\">Test-Driven Development on Android with the Android Testing Support Library (Google I/O ‘17)</a></p>\n<p><a href=\"https://developer.android.com/jetpack/\" target=\"_blank\" rel=\"noopener\">jetpack</a></p>\n<h3 id=\"测试驱动开发TDD（test-driven-development）\"><a href=\"#测试驱动开发TDD（test-driven-development）\" class=\"headerlink\" title=\"测试驱动开发TDD（test-driven development）\"></a>测试驱动开发TDD（test-driven development）</h3><div align=\"center\"><br>    <img src=\"/images/TDD-testing-workflow.png\" width=\"90%\"><br></div>\n\n<ol>\n<li>Unit Test                 (Small Tests)</li>\n<li>UI Test                   (Large Tests)</li>\n</ol>\n<h3 id=\"测试金字塔\"><a href=\"#测试金字塔\" class=\"headerlink\" title=\"测试金字塔\"></a>测试金字塔</h3><div align=\"center\"><br>    <img src=\"/images/testing-pyramid-2x.png\" width=\"90%\"><br></div>\n\n<ol>\n<li>Unit Test                 (Small Tests)   </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">推荐多写单元测试，因为他运行在本地电脑，并且mocked或者stubed很多至关重要的核心组件，例如Android中Context对象；</span><br><span class=\"line\">该类测试旨在测试语法，异常，逻辑是否如我们所设计的一样被执行。并不能说明程序就没有错误。提前发现错误</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>integration Test        (Medium Tests)</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this kind of Tests told you that your function is actually works。</span><br><span class=\"line\">这种测试被运行在真机或者模拟器中，用于测试你的程序真的可以正常工作。</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>UI Test                   (Large Tests)</li>\n</ol>\n<p>推荐各种类型的测试用例占比为： <b>70 percent small, 20 percent medium, and 10 percent large.</b></p>\n<h3 id=\"多种测试框架及辅助测试工具\"><a href=\"#多种测试框架及辅助测试工具\" class=\"headerlink\" title=\"多种测试框架及辅助测试工具\"></a>多种测试框架及辅助测试工具</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Junit Test</td>\n<td>普通单元测试</td>\n<td></td>\n</tr>\n<tr>\n<td>InstrumentationTestRunner</td>\n<td>Android中只支持Junit3，已过时</td>\n<td></td>\n</tr>\n<tr>\n<td>AndroidJunitRunner</td>\n<td>Android单元测试，替代InstrumentationTestRunner</td>\n<td>支持Junit3和Junit4在Android中使用</td>\n</tr>\n<tr>\n<td>AndroidJunit4</td>\n<td></td>\n<td>Android中使用@RunWith(AndroidJUnit4.class)</td>\n</tr>\n<tr>\n<td>MockitoJUnitRunner</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Mockito</td>\n<td>Stubed &amp; Mocked 对象</td>\n<td></td>\n</tr>\n<tr>\n<td>Robolectric</td>\n<td>类似Mockito</td>\n<td></td>\n</tr>\n<tr>\n<td>UI Automator</td>\n<td>Android UI 黑盒自动化测试（又称功能测试），依赖于AndroidJunitRunner</td>\n<td></td>\n</tr>\n<tr>\n<td>Espresso</td>\n<td>Android UI 白盒自动化测试，依赖于AndroidJunitRunner</td>\n<td></td>\n</tr>\n<tr>\n<td>ActivityInstrumentationTestCase2</td>\n<td>已过时</td>\n<td></td>\n</tr>\n<tr>\n<td>ActivityTestRule</td>\n<td>替代ActivityInstrumentationTestCase2</td>\n<td></td>\n</tr>\n<tr>\n<td>ServiceTestRule</td>\n<td>不支持IntentService</td>\n</tr>\n</tbody>\n</table>\n<ol>\n<li>org.junit.runners.JUnit4</li>\n</ol>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.android.application'</span></span><br><span class=\"line\"></span><br><span class=\"line\">android &#123;</span><br><span class=\"line\">    compileSdkVersion <span class=\"number\">26</span></span><br><span class=\"line\">    buildToolsVersion rootProject.buildToolsVersion</span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        applicationId <span class=\"string\">\"com.example.android.testing.unittesting.BasicSample\"</span></span><br><span class=\"line\">        minSdkVersion <span class=\"number\">9</span></span><br><span class=\"line\">        versionCode <span class=\"number\">1</span></span><br><span class=\"line\">        versionName <span class=\"string\">\"1.0\"</span></span><br><span class=\"line\">        targetSdkVersion <span class=\"number\">26</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    productFlavors &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Unit testing dependencies.</span></span><br><span class=\"line\">    testCompile <span class=\"string\">'junit:junit:'</span> + rootProject.junitVersion;</span><br><span class=\"line\">    testCompile <span class=\"string\">\"org.mockito:mockito-inline:+\"</span></span><br><span class=\"line\">    <span class=\"comment\">//testCompile 'org.mockito:mockito-core:' + rootProject.mockitoVersion;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>android.support.test.runner.AndroidJUnitRunner</li>\n</ol>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.android.application'</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">android &#123;</span><br><span class=\"line\">    compileSdkVersion <span class=\"number\">26</span></span><br><span class=\"line\">    buildToolsVersion rootProject.buildToolsVersion</span><br><span class=\"line\">\t</span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        applicationId <span class=\"string\">\"com.example.android.testing.unittesting.basicunitandroidtest\"</span></span><br><span class=\"line\">        minSdkVersion <span class=\"number\">9</span></span><br><span class=\"line\">        targetSdkVersion <span class=\"number\">26</span></span><br><span class=\"line\">        versionCode <span class=\"number\">1</span></span><br><span class=\"line\">        versionName <span class=\"string\">\"1.0\"</span></span><br><span class=\"line\">        testInstrumentationRunner <span class=\"string\">\"android.support.test.runner.AndroidJUnitRunner\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Testing-only dependencies</span></span><br><span class=\"line\">    <span class=\"comment\">// Force usage of support annotations in the test app, since it is internally used by the runner module.</span></span><br><span class=\"line\">    androidTestCompile <span class=\"string\">'com.android.support:support-annotations:'</span> + rootProject.supportLibVersion;</span><br><span class=\"line\">    androidTestCompile <span class=\"string\">'com.android.support.test:runner:'</span> + rootProject.runnerVersion;</span><br><span class=\"line\">    androidTestCompile <span class=\"string\">'org.hamcrest:hamcrest-library:'</span> + rootProject.hamcrestVersion;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>水电费</li>\n</ol>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>sfd</li>\n</ol>\n<h3 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h3><p><a href=\"http://static.javadoc.io/org.mockito/mockito-core/2.20.0/org/mockito/Mockito.html\" target=\"_blank\" rel=\"noopener\">Mockito guide</a></p>\n<p><a href=\"https://blog.csdn.net/qq_17766199/article/details/78450007\" target=\"_blank\" rel=\"noopener\">Mocktio 语法简介</a></p>\n<h3 id=\"Mock-Android-Issue-Track\"><a href=\"#Mock-Android-Issue-Track\" class=\"headerlink\" title=\"Mock Android Issue Track\"></a>Mock Android Issue Track</h3><p><a href=\"https://github.com/mockito/mockito/issues/new\" target=\"_blank\" rel=\"noopener\">mockito android issues</a></p>\n<h3 id=\"Android项目中引入Mockito支持\"><a href=\"#Android项目中引入Mockito支持\" class=\"headerlink\" title=\"Android项目中引入Mockito支持\"></a>Android项目中引入Mockito支持</h3><ol>\n<li><p>使用官方提供的androidTestCompile支持</p>\n <figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">  jcenter()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//对普通java mock测试支持</span></span><br><span class=\"line\">  testCompile <span class=\"string\">\"org.mockito:mockito-core:+\"</span></span><br><span class=\"line\">  <span class=\"comment\">//mockito官方于mockito 2.6.1开始对android依赖库提供mock支持</span></span><br><span class=\"line\">  androidTestCompile <span class=\"string\">\"org.mockito:mockito-android:+\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>使用LinkedIn公司dexmaker团队基于mockito提供的androidTestCompile支持</p>\n <figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">  jcenter()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//对普通java mock测试支持</span></span><br><span class=\"line\">  testCompile <span class=\"string\">\"org.mockito:mockito-core:+\"</span></span><br><span class=\"line\">  <span class=\"comment\">//使用LinkedIn公司dexmaker团队基于mockito提供的androidTestCompile支持</span></span><br><span class=\"line\">  androidTestCompile <span class=\"string\">'com.linkedin.dexmaker:dexmaker-mockito:2.19.0'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>Mocking final types, enums and final methods (Since 2.1.0)</p>\n <figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">   jcenter()</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">//想要mock final types，enums，final methods</span></span><br><span class=\"line\">   <span class=\"comment\">//使用mockito-inline替换mockito-core</span></span><br><span class=\"line\">   testCompile <span class=\"string\">\"org.mockito:mockito-inline:+\"</span></span><br><span class=\"line\">   <span class=\"comment\">//androidTestCompile \"org.mockito:mockito-android:+\"</span></span><br><span class=\"line\">   <span class=\"comment\">//androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.19.0'</span></span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>sdfsf</p>\n</li>\n</ol>\n<h3 id=\"初始化mockito及MockitoAnnotations\"><a href=\"#初始化mockito及MockitoAnnotations\" class=\"headerlink\" title=\"初始化mockito及MockitoAnnotations\"></a>初始化mockito及MockitoAnnotations</h3><ol>\n<li>MockitoAnnotations</li>\n<li>MockitoJUnitRunner</li>\n<li>MockitoRule</li>\n</ol>\n<p>[BDD]:</p>\n"},{"title":"Android Storage目录结构及API分析","date":"2018-08-24T07:56:12.000Z","summery":"分析不同版本android系统中internal storage 和  external storage的区别和异同，同时分析对应的api，及使用场景。能够更好的了解android系统存储，在开发中合理使用各种存储。","_content":"\n### 概要\n\n本文主要对比Android 4.1、4.2 和 Android 6.0三个版本中系统storage路径差异和storage API使用差异。\n\n\t4.1 版本没有加入多用户系统。\n\t4.2 版本加入了多用户系统。\n\t6.0 版本也和4.2版本相同。\n\nAndroid 4.1.1 系统目录结构：\n\n<div align=\"center\">\n\t<img src=\"/images/0、Android4.1.1系统目录结构.png\" width=\"90%\" />\n</div>\n\nAndroid 6.0 目录结构：\n\n<div align=\"center\">\n\t<img src=\"/images/0、Android6.0系统文件目录结构.png\" width=\"90%\" />\n</div>\n\n### 一、Android系统关键目录结构\n\n\n<div align=\"center\">\n\t<img src=\"/images/1、android存储目录结构.jpeg\" width=\"90%\" />\n</div>\n\n### 二、Android4.2之前存储目录结构\n\n<div align=\"center\">\n\t<img src=\"/images/2、android4.2之前存储目录结构.png\" width=\"90%\" />\n</div>\n\n### 三、Android4.2之后支持多用户的存储路径图\n\n<div align=\"center\">\n\t<img src=\"/images/3、android4.2支持多用户的存储路径图.png\" width=\"90%\" />\n</div>\n\n\n### 四、Android多用户存储\n\n\n<div align=\"center\">\n\t<img src=\"/images/4、android多用户存储.png\" width=\"90%\" />\n</div>\n\n\n### 五、Android-data目录\n\n\n<div align=\"center\">\n\t<img src=\"/images/5、android-data目录.png\" width=\"90%\" />\n</div>\n\n### 六、Android-system目录\n\n<div align=\"center\">\n\t<img src=\"/images/6、android-system目录.png\" width=\"90%\" />\n</div>\n\n### 七、Android-mnt目录\n\n<div align=\"center\">\n\t<img src=\"/images/7、android-mnt目录.png\" width=\"90%\" />\n</div>\n\n### 八、Android不同版本sdcard软链接\n\n<div align=\"center\">\n\t<img src=\"/images/8、android不同版本sdcard软链接.png\" width=\"90%\" />\n</div>\n\n### 九、Android-storage映射路径及API使用\n\n 这张图片太大，截图里字显得有些小，可以右键-->在新标签中打开，字体会大一些。\n\t\n<div align=\"center\">\n\t<img src=\"/images/9、android-storage映射路径图.png\" width=\"90%\" />\n</div>\n\n\n\n\n\n\n","source":"_posts/AndroidStorage目录结构分析.md","raw":"---\ntitle: Android Storage目录结构及API分析\ndate: 2018-08-24 15:56:12\ntags: [interanl storage,external storage,data,system,多用户]\nsummery: 分析不同版本android系统中internal storage 和  external storage的区别和异同，同时分析对应的api，及使用场景。能够更好的了解android系统存储，在开发中合理使用各种存储。\n---\n\n### 概要\n\n本文主要对比Android 4.1、4.2 和 Android 6.0三个版本中系统storage路径差异和storage API使用差异。\n\n\t4.1 版本没有加入多用户系统。\n\t4.2 版本加入了多用户系统。\n\t6.0 版本也和4.2版本相同。\n\nAndroid 4.1.1 系统目录结构：\n\n<div align=\"center\">\n\t<img src=\"/images/0、Android4.1.1系统目录结构.png\" width=\"90%\" />\n</div>\n\nAndroid 6.0 目录结构：\n\n<div align=\"center\">\n\t<img src=\"/images/0、Android6.0系统文件目录结构.png\" width=\"90%\" />\n</div>\n\n### 一、Android系统关键目录结构\n\n\n<div align=\"center\">\n\t<img src=\"/images/1、android存储目录结构.jpeg\" width=\"90%\" />\n</div>\n\n### 二、Android4.2之前存储目录结构\n\n<div align=\"center\">\n\t<img src=\"/images/2、android4.2之前存储目录结构.png\" width=\"90%\" />\n</div>\n\n### 三、Android4.2之后支持多用户的存储路径图\n\n<div align=\"center\">\n\t<img src=\"/images/3、android4.2支持多用户的存储路径图.png\" width=\"90%\" />\n</div>\n\n\n### 四、Android多用户存储\n\n\n<div align=\"center\">\n\t<img src=\"/images/4、android多用户存储.png\" width=\"90%\" />\n</div>\n\n\n### 五、Android-data目录\n\n\n<div align=\"center\">\n\t<img src=\"/images/5、android-data目录.png\" width=\"90%\" />\n</div>\n\n### 六、Android-system目录\n\n<div align=\"center\">\n\t<img src=\"/images/6、android-system目录.png\" width=\"90%\" />\n</div>\n\n### 七、Android-mnt目录\n\n<div align=\"center\">\n\t<img src=\"/images/7、android-mnt目录.png\" width=\"90%\" />\n</div>\n\n### 八、Android不同版本sdcard软链接\n\n<div align=\"center\">\n\t<img src=\"/images/8、android不同版本sdcard软链接.png\" width=\"90%\" />\n</div>\n\n### 九、Android-storage映射路径及API使用\n\n 这张图片太大，截图里字显得有些小，可以右键-->在新标签中打开，字体会大一些。\n\t\n<div align=\"center\">\n\t<img src=\"/images/9、android-storage映射路径图.png\" width=\"90%\" />\n</div>\n\n\n\n\n\n\n","slug":"AndroidStorage目录结构分析","published":1,"updated":"2018-08-24T08:48:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hg60001js6sgp4fjbu5","content":"<h3 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h3><p>本文主要对比Android 4.1、4.2 和 Android 6.0三个版本中系统storage路径差异和storage API使用差异。</p>\n<pre><code>4.1 版本没有加入多用户系统。\n4.2 版本加入了多用户系统。\n6.0 版本也和4.2版本相同。\n</code></pre><p>Android 4.1.1 系统目录结构：</p>\n<div align=\"center\"><br>    <img src=\"/images/0、Android4.1.1系统目录结构.png\" width=\"90%\"><br></div>\n\n<p>Android 6.0 目录结构：</p>\n<div align=\"center\"><br>    <img src=\"/images/0、Android6.0系统文件目录结构.png\" width=\"90%\"><br></div>\n\n<h3 id=\"一、Android系统关键目录结构\"><a href=\"#一、Android系统关键目录结构\" class=\"headerlink\" title=\"一、Android系统关键目录结构\"></a>一、Android系统关键目录结构</h3><div align=\"center\"><br>    <img src=\"/images/1、android存储目录结构.jpeg\" width=\"90%\"><br></div>\n\n<h3 id=\"二、Android4-2之前存储目录结构\"><a href=\"#二、Android4-2之前存储目录结构\" class=\"headerlink\" title=\"二、Android4.2之前存储目录结构\"></a>二、Android4.2之前存储目录结构</h3><div align=\"center\"><br>    <img src=\"/images/2、android4.2之前存储目录结构.png\" width=\"90%\"><br></div>\n\n<h3 id=\"三、Android4-2之后支持多用户的存储路径图\"><a href=\"#三、Android4-2之后支持多用户的存储路径图\" class=\"headerlink\" title=\"三、Android4.2之后支持多用户的存储路径图\"></a>三、Android4.2之后支持多用户的存储路径图</h3><div align=\"center\"><br>    <img src=\"/images/3、android4.2支持多用户的存储路径图.png\" width=\"90%\"><br></div>\n\n\n<h3 id=\"四、Android多用户存储\"><a href=\"#四、Android多用户存储\" class=\"headerlink\" title=\"四、Android多用户存储\"></a>四、Android多用户存储</h3><div align=\"center\"><br>    <img src=\"/images/4、android多用户存储.png\" width=\"90%\"><br></div>\n\n\n<h3 id=\"五、Android-data目录\"><a href=\"#五、Android-data目录\" class=\"headerlink\" title=\"五、Android-data目录\"></a>五、Android-data目录</h3><div align=\"center\"><br>    <img src=\"/images/5、android-data目录.png\" width=\"90%\"><br></div>\n\n<h3 id=\"六、Android-system目录\"><a href=\"#六、Android-system目录\" class=\"headerlink\" title=\"六、Android-system目录\"></a>六、Android-system目录</h3><div align=\"center\"><br>    <img src=\"/images/6、android-system目录.png\" width=\"90%\"><br></div>\n\n<h3 id=\"七、Android-mnt目录\"><a href=\"#七、Android-mnt目录\" class=\"headerlink\" title=\"七、Android-mnt目录\"></a>七、Android-mnt目录</h3><div align=\"center\"><br>    <img src=\"/images/7、android-mnt目录.png\" width=\"90%\"><br></div>\n\n<h3 id=\"八、Android不同版本sdcard软链接\"><a href=\"#八、Android不同版本sdcard软链接\" class=\"headerlink\" title=\"八、Android不同版本sdcard软链接\"></a>八、Android不同版本sdcard软链接</h3><div align=\"center\"><br>    <img src=\"/images/8、android不同版本sdcard软链接.png\" width=\"90%\"><br></div>\n\n<h3 id=\"九、Android-storage映射路径及API使用\"><a href=\"#九、Android-storage映射路径及API使用\" class=\"headerlink\" title=\"九、Android-storage映射路径及API使用\"></a>九、Android-storage映射路径及API使用</h3><p> 这张图片太大，截图里字显得有些小，可以右键–&gt;在新标签中打开，字体会大一些。</p>\n<div align=\"center\"><br>    <img src=\"/images/9、android-storage映射路径图.png\" width=\"90%\"><br></div>\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h3><p>本文主要对比Android 4.1、4.2 和 Android 6.0三个版本中系统storage路径差异和storage API使用差异。</p>\n<pre><code>4.1 版本没有加入多用户系统。\n4.2 版本加入了多用户系统。\n6.0 版本也和4.2版本相同。\n</code></pre><p>Android 4.1.1 系统目录结构：</p>\n<div align=\"center\"><br>    <img src=\"/images/0、Android4.1.1系统目录结构.png\" width=\"90%\"><br></div>\n\n<p>Android 6.0 目录结构：</p>\n<div align=\"center\"><br>    <img src=\"/images/0、Android6.0系统文件目录结构.png\" width=\"90%\"><br></div>\n\n<h3 id=\"一、Android系统关键目录结构\"><a href=\"#一、Android系统关键目录结构\" class=\"headerlink\" title=\"一、Android系统关键目录结构\"></a>一、Android系统关键目录结构</h3><div align=\"center\"><br>    <img src=\"/images/1、android存储目录结构.jpeg\" width=\"90%\"><br></div>\n\n<h3 id=\"二、Android4-2之前存储目录结构\"><a href=\"#二、Android4-2之前存储目录结构\" class=\"headerlink\" title=\"二、Android4.2之前存储目录结构\"></a>二、Android4.2之前存储目录结构</h3><div align=\"center\"><br>    <img src=\"/images/2、android4.2之前存储目录结构.png\" width=\"90%\"><br></div>\n\n<h3 id=\"三、Android4-2之后支持多用户的存储路径图\"><a href=\"#三、Android4-2之后支持多用户的存储路径图\" class=\"headerlink\" title=\"三、Android4.2之后支持多用户的存储路径图\"></a>三、Android4.2之后支持多用户的存储路径图</h3><div align=\"center\"><br>    <img src=\"/images/3、android4.2支持多用户的存储路径图.png\" width=\"90%\"><br></div>\n\n\n<h3 id=\"四、Android多用户存储\"><a href=\"#四、Android多用户存储\" class=\"headerlink\" title=\"四、Android多用户存储\"></a>四、Android多用户存储</h3><div align=\"center\"><br>    <img src=\"/images/4、android多用户存储.png\" width=\"90%\"><br></div>\n\n\n<h3 id=\"五、Android-data目录\"><a href=\"#五、Android-data目录\" class=\"headerlink\" title=\"五、Android-data目录\"></a>五、Android-data目录</h3><div align=\"center\"><br>    <img src=\"/images/5、android-data目录.png\" width=\"90%\"><br></div>\n\n<h3 id=\"六、Android-system目录\"><a href=\"#六、Android-system目录\" class=\"headerlink\" title=\"六、Android-system目录\"></a>六、Android-system目录</h3><div align=\"center\"><br>    <img src=\"/images/6、android-system目录.png\" width=\"90%\"><br></div>\n\n<h3 id=\"七、Android-mnt目录\"><a href=\"#七、Android-mnt目录\" class=\"headerlink\" title=\"七、Android-mnt目录\"></a>七、Android-mnt目录</h3><div align=\"center\"><br>    <img src=\"/images/7、android-mnt目录.png\" width=\"90%\"><br></div>\n\n<h3 id=\"八、Android不同版本sdcard软链接\"><a href=\"#八、Android不同版本sdcard软链接\" class=\"headerlink\" title=\"八、Android不同版本sdcard软链接\"></a>八、Android不同版本sdcard软链接</h3><div align=\"center\"><br>    <img src=\"/images/8、android不同版本sdcard软链接.png\" width=\"90%\"><br></div>\n\n<h3 id=\"九、Android-storage映射路径及API使用\"><a href=\"#九、Android-storage映射路径及API使用\" class=\"headerlink\" title=\"九、Android-storage映射路径及API使用\"></a>九、Android-storage映射路径及API使用</h3><p> 这张图片太大，截图里字显得有些小，可以右键–&gt;在新标签中打开，字体会大一些。</p>\n<div align=\"center\"><br>    <img src=\"/images/9、android-storage映射路径图.png\" width=\"90%\"><br></div>\n\n\n\n\n\n\n"},{"title":"Android项目架构概述","date":"2018-07-24T02:55:39.000Z","summery":"Android项目架构概述","_content":"\n### 目标\n\t\t整合时下优秀的开源框架，实现一个高度解耦，可快速开发，易复用，易扩展的Android基础库。涉及到常规应用开发的各方面。\n\t\t\n### 关注点\n\n1. code规范\n1. 通用基础库(Base*、Util)\n2. 业务组件封装\n7. 架构（MVP、MVVM）\n8. 抽象中间层\n9. 解耦，易替换，易删除\n10. 快速易开发\n11. 易测试（自动化测试，单元测试等）\n11. 持续集成CI\n12. 渠道打包\n13. 灰度发布\n14. 强制更新\n15. 异步任务调度\n16. View & Animation\n4. 组件化\n5. 插件化\n6. 热更新\n\t\n### 第三方库\n\n|名称|功能描述（见WIKI）|同类项目|相关优化方向|相关产考|\n|---|---|---|---|---|\n|[Android Jetpack]|||||\n|[阿里 sophix]|||||\n|[阿里 Atlas]|||||\n|[阿里 Small]|||||\n|[阿里 AndFix]|||||\n|[Kotlin]|||||\n|[React Native]|||||\n|[Android Testing]|||||\n|[MVP]|||||\n|[MVVM]|||||\n|[RxJava]|异步编程|||[给 Android 开发者的 RxJava 详解]|\n|[RxAndroid]|异步编程||||\n|[RxPermissions]|RxJava支持6.0权限||||\n|[Retrofit2]|网络访问封装||||\n|[Dagger2]|对象注入||||\n| [Logger] |日志记录|[Timer]|无埋点日志、无埋点统计||\n|[RxAndroid Tutorial]|指南||||\n|[RxBinding]|||||\n|[retrofit-adapters for rxjava2]|基础封装||||\n|[OKHTTP3]|网络访问||||\n| [Fresco] |图片处理||||\n| [Butterknife] |View注入||||\n|[JsBridge]|hybird||||\n|[material-dialogs]|Dialog||||\n|[MPAndroidChart]|图表||||\n|[airbnb-lottie-android]|AirBnB 动画框架，渲染高级动效|||[Material-Animations]、[recyclerview-animators]|\n|[AVLoadingIndicatorView]|Loading动画||||\n|[uCrop]|图片剪切||||\n||推送服务||||\n||推送后台管理页面开发-开源项目-daquan||||\n||社会化||||\n||数据统计||||\n||单元测试||||\n||接入SDK||||\n||数据加解密||||\n||业务流程动态配置化管理||||\n||应用模块权限配置管理||||\n||应用模块动态配置||||\n||配置文件动态下发||||\n||页面跳转动态配置管理||||\n||渠道配置||||\n||代码混淆||||\n||应用加壳||||\n||自动化测试||||\n||灰度发布||||\n|[AppUpdate]|应用版本更新模块||||\n||插件化，版本更新||||\n||热修复，bug修复||||\n||相机||||\n||图片||||\n||视频||||\n||音频||||\n||即时通信IM||||\n||PDF文件在线查看，下载查看||||\n||状态栏||||\n||标题栏||||\n||Back键||||\n||手势识别||||\n||主菜单||||\n\n\n### 开发、测试、集成、发布、灰度工具\n\n|名称|功能描述（见WIKI）|相关产考|\n|---|---|---|\n|[接口文档管理工具 Postman、Swagger、RAP]|接口测试|无|\n\n### 新项目建议\n\n1. 新项目建议采用 minSdkVersion=\"14\"（覆盖目前99%设备） 或者更高版本，采用minSdkVersion=\"17\"（覆盖目前96%设备） 可直接越过webview js漏洞。\n\n\n\n### 相关参考\n[接口文档管理工具 Postman、Swagger、RAP]:http://qa.blog.163.com/blog/static/190147002201611155418810/\n\n[Logger]:https://github.com/orhanobut/logger\n[Timer]:https://github.com/JakeWharton/timber\n[RxAndroid Tutorial]:https://www.raywenderlich.com/170233/reactive-programming-rxandroid-kotlin-introduction\n[RxJava]:https://github.com/ReactiveX/RxJava\n[RxAndroid]:https://github.com/ReactiveX/RxAndroid\n[RxPermissions]:https://github.com/tbruyelle/RxPermissions\n[retrofit-adapters for rxjava2]:https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava2\n[给 Android 开发者的 RxJava 详解]:http://gank.io/post/560e15be2dca930e00da1083\n[RxBinding]:https://github.com/JakeWharton/RxBinding\n\n[Retrofit2]:https://github.com/square/retrofit\n\n\n[Butterknife]:https://github.com/JakeWharton/butterknife\n[OKHTTP3]:https://github.com/square/okhttp\n[Dagger2]:https://github.com/JakeWharton/dagger\n\n[Fresco]:https://github.com/facebook/fresco\n[AppUpdate]:https://github.com/WVector/AppUpdate\n[JsBridge]:https://github.com/lzyzsd/JsBridge\n[material-dialogs]:https://github.com/afollestad/material-dialogs\n[MPAndroidChart]:https://github.com/PhilJay/MPAndroidChart\n[airbnb-lottie-android]:https://github.com/airbnb/lottie-android\n[Material-Animations]:https://github.com/lgvalle/Material-Animations\n[recyclerview-animators]:https://github.com/wasabeef/recyclerview-animators\n[AVLoadingIndicatorView]:https://github.com/81813780/AVLoadingIndicatorView\n[uCrop]:https://github.com/Yalantis/uCrop\n\n### 和当前项目类似项目  \n\n[AndroidUtilCode]   :  [AndroidUtilCode功能列表]  借鉴其通用基础模块封装\n\n[android-common] : 借鉴其通用基础模块封装\n   \n[EasyAndroid] \n\n[XSnow]   \n\n[EasyAndroid]:https://github.com/wu928320442/EasyAndroid\n[AndroidUtilCode]:https://github.com/Blankj/AndroidUtilCode\n[AndroidUtilCode功能列表]:http://blog.csdn.net/qq_33445600/article/details/78487857\n[XSnow]:https://github.com/xiaoyaoyou1212/XSnow\n[android-common]:https://github.com/litesuits/android-common","source":"_posts/Android基础开发框架2018.md","raw":"---\ntitle: Android项目架构概述\ndate: 2018-07-24 10:55:39\ntags: [android,架构,faruAndroid]\nsummery: Android项目架构概述\n---\n\n### 目标\n\t\t整合时下优秀的开源框架，实现一个高度解耦，可快速开发，易复用，易扩展的Android基础库。涉及到常规应用开发的各方面。\n\t\t\n### 关注点\n\n1. code规范\n1. 通用基础库(Base*、Util)\n2. 业务组件封装\n7. 架构（MVP、MVVM）\n8. 抽象中间层\n9. 解耦，易替换，易删除\n10. 快速易开发\n11. 易测试（自动化测试，单元测试等）\n11. 持续集成CI\n12. 渠道打包\n13. 灰度发布\n14. 强制更新\n15. 异步任务调度\n16. View & Animation\n4. 组件化\n5. 插件化\n6. 热更新\n\t\n### 第三方库\n\n|名称|功能描述（见WIKI）|同类项目|相关优化方向|相关产考|\n|---|---|---|---|---|\n|[Android Jetpack]|||||\n|[阿里 sophix]|||||\n|[阿里 Atlas]|||||\n|[阿里 Small]|||||\n|[阿里 AndFix]|||||\n|[Kotlin]|||||\n|[React Native]|||||\n|[Android Testing]|||||\n|[MVP]|||||\n|[MVVM]|||||\n|[RxJava]|异步编程|||[给 Android 开发者的 RxJava 详解]|\n|[RxAndroid]|异步编程||||\n|[RxPermissions]|RxJava支持6.0权限||||\n|[Retrofit2]|网络访问封装||||\n|[Dagger2]|对象注入||||\n| [Logger] |日志记录|[Timer]|无埋点日志、无埋点统计||\n|[RxAndroid Tutorial]|指南||||\n|[RxBinding]|||||\n|[retrofit-adapters for rxjava2]|基础封装||||\n|[OKHTTP3]|网络访问||||\n| [Fresco] |图片处理||||\n| [Butterknife] |View注入||||\n|[JsBridge]|hybird||||\n|[material-dialogs]|Dialog||||\n|[MPAndroidChart]|图表||||\n|[airbnb-lottie-android]|AirBnB 动画框架，渲染高级动效|||[Material-Animations]、[recyclerview-animators]|\n|[AVLoadingIndicatorView]|Loading动画||||\n|[uCrop]|图片剪切||||\n||推送服务||||\n||推送后台管理页面开发-开源项目-daquan||||\n||社会化||||\n||数据统计||||\n||单元测试||||\n||接入SDK||||\n||数据加解密||||\n||业务流程动态配置化管理||||\n||应用模块权限配置管理||||\n||应用模块动态配置||||\n||配置文件动态下发||||\n||页面跳转动态配置管理||||\n||渠道配置||||\n||代码混淆||||\n||应用加壳||||\n||自动化测试||||\n||灰度发布||||\n|[AppUpdate]|应用版本更新模块||||\n||插件化，版本更新||||\n||热修复，bug修复||||\n||相机||||\n||图片||||\n||视频||||\n||音频||||\n||即时通信IM||||\n||PDF文件在线查看，下载查看||||\n||状态栏||||\n||标题栏||||\n||Back键||||\n||手势识别||||\n||主菜单||||\n\n\n### 开发、测试、集成、发布、灰度工具\n\n|名称|功能描述（见WIKI）|相关产考|\n|---|---|---|\n|[接口文档管理工具 Postman、Swagger、RAP]|接口测试|无|\n\n### 新项目建议\n\n1. 新项目建议采用 minSdkVersion=\"14\"（覆盖目前99%设备） 或者更高版本，采用minSdkVersion=\"17\"（覆盖目前96%设备） 可直接越过webview js漏洞。\n\n\n\n### 相关参考\n[接口文档管理工具 Postman、Swagger、RAP]:http://qa.blog.163.com/blog/static/190147002201611155418810/\n\n[Logger]:https://github.com/orhanobut/logger\n[Timer]:https://github.com/JakeWharton/timber\n[RxAndroid Tutorial]:https://www.raywenderlich.com/170233/reactive-programming-rxandroid-kotlin-introduction\n[RxJava]:https://github.com/ReactiveX/RxJava\n[RxAndroid]:https://github.com/ReactiveX/RxAndroid\n[RxPermissions]:https://github.com/tbruyelle/RxPermissions\n[retrofit-adapters for rxjava2]:https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava2\n[给 Android 开发者的 RxJava 详解]:http://gank.io/post/560e15be2dca930e00da1083\n[RxBinding]:https://github.com/JakeWharton/RxBinding\n\n[Retrofit2]:https://github.com/square/retrofit\n\n\n[Butterknife]:https://github.com/JakeWharton/butterknife\n[OKHTTP3]:https://github.com/square/okhttp\n[Dagger2]:https://github.com/JakeWharton/dagger\n\n[Fresco]:https://github.com/facebook/fresco\n[AppUpdate]:https://github.com/WVector/AppUpdate\n[JsBridge]:https://github.com/lzyzsd/JsBridge\n[material-dialogs]:https://github.com/afollestad/material-dialogs\n[MPAndroidChart]:https://github.com/PhilJay/MPAndroidChart\n[airbnb-lottie-android]:https://github.com/airbnb/lottie-android\n[Material-Animations]:https://github.com/lgvalle/Material-Animations\n[recyclerview-animators]:https://github.com/wasabeef/recyclerview-animators\n[AVLoadingIndicatorView]:https://github.com/81813780/AVLoadingIndicatorView\n[uCrop]:https://github.com/Yalantis/uCrop\n\n### 和当前项目类似项目  \n\n[AndroidUtilCode]   :  [AndroidUtilCode功能列表]  借鉴其通用基础模块封装\n\n[android-common] : 借鉴其通用基础模块封装\n   \n[EasyAndroid] \n\n[XSnow]   \n\n[EasyAndroid]:https://github.com/wu928320442/EasyAndroid\n[AndroidUtilCode]:https://github.com/Blankj/AndroidUtilCode\n[AndroidUtilCode功能列表]:http://blog.csdn.net/qq_33445600/article/details/78487857\n[XSnow]:https://github.com/xiaoyaoyou1212/XSnow\n[android-common]:https://github.com/litesuits/android-common","slug":"Android基础开发框架2018","published":1,"updated":"2018-07-25T05:18:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hgc0002js6s6h82ffq2","content":"<h3 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h3><pre><code>整合时下优秀的开源框架，实现一个高度解耦，可快速开发，易复用，易扩展的Android基础库。涉及到常规应用开发的各方面。\n</code></pre><h3 id=\"关注点\"><a href=\"#关注点\" class=\"headerlink\" title=\"关注点\"></a>关注点</h3><ol>\n<li>code规范</li>\n<li>通用基础库(Base*、Util)</li>\n<li>业务组件封装</li>\n<li>架构（MVP、MVVM）</li>\n<li>抽象中间层</li>\n<li>解耦，易替换，易删除</li>\n<li>快速易开发</li>\n<li>易测试（自动化测试，单元测试等）</li>\n<li>持续集成CI</li>\n<li>渠道打包</li>\n<li>灰度发布</li>\n<li>强制更新</li>\n<li>异步任务调度</li>\n<li>View &amp; Animation</li>\n<li>组件化</li>\n<li>插件化</li>\n<li>热更新</li>\n</ol>\n<h3 id=\"第三方库\"><a href=\"#第三方库\" class=\"headerlink\" title=\"第三方库\"></a>第三方库</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>功能描述（见WIKI）</th>\n<th>同类项目</th>\n<th>相关优化方向</th>\n<th>相关产考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[Android Jetpack]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[阿里 sophix]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[阿里 Atlas]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[阿里 Small]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[阿里 AndFix]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[Kotlin]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[React Native]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[Android Testing]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[MVP]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[MVVM]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ReactiveX/RxJava\" target=\"_blank\" rel=\"noopener\">RxJava</a></td>\n<td>异步编程</td>\n<td></td>\n<td></td>\n<td><a href=\"http://gank.io/post/560e15be2dca930e00da1083\" target=\"_blank\" rel=\"noopener\">给 Android 开发者的 RxJava 详解</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ReactiveX/RxAndroid\" target=\"_blank\" rel=\"noopener\">RxAndroid</a></td>\n<td>异步编程</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/tbruyelle/RxPermissions\" target=\"_blank\" rel=\"noopener\">RxPermissions</a></td>\n<td>RxJava支持6.0权限</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/square/retrofit\" target=\"_blank\" rel=\"noopener\">Retrofit2</a></td>\n<td>网络访问封装</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/JakeWharton/dagger\" target=\"_blank\" rel=\"noopener\">Dagger2</a></td>\n<td>对象注入</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/orhanobut/logger\" target=\"_blank\" rel=\"noopener\">Logger</a></td>\n<td>日志记录</td>\n<td><a href=\"https://github.com/JakeWharton/timber\" target=\"_blank\" rel=\"noopener\">Timer</a></td>\n<td>无埋点日志、无埋点统计</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://www.raywenderlich.com/170233/reactive-programming-rxandroid-kotlin-introduction\" target=\"_blank\" rel=\"noopener\">RxAndroid Tutorial</a></td>\n<td>指南</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/JakeWharton/RxBinding\" target=\"_blank\" rel=\"noopener\">RxBinding</a></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava2\" target=\"_blank\" rel=\"noopener\">retrofit-adapters for rxjava2</a></td>\n<td>基础封装</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/square/okhttp\" target=\"_blank\" rel=\"noopener\">OKHTTP3</a></td>\n<td>网络访问</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/facebook/fresco\" target=\"_blank\" rel=\"noopener\">Fresco</a></td>\n<td>图片处理</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/JakeWharton/butterknife\" target=\"_blank\" rel=\"noopener\">Butterknife</a></td>\n<td>View注入</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/lzyzsd/JsBridge\" target=\"_blank\" rel=\"noopener\">JsBridge</a></td>\n<td>hybird</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/afollestad/material-dialogs\" target=\"_blank\" rel=\"noopener\">material-dialogs</a></td>\n<td>Dialog</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/PhilJay/MPAndroidChart\" target=\"_blank\" rel=\"noopener\">MPAndroidChart</a></td>\n<td>图表</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/airbnb/lottie-android\" target=\"_blank\" rel=\"noopener\">airbnb-lottie-android</a></td>\n<td>AirBnB 动画框架，渲染高级动效</td>\n<td></td>\n<td></td>\n<td><a href=\"https://github.com/lgvalle/Material-Animations\" target=\"_blank\" rel=\"noopener\">Material-Animations</a>、<a href=\"https://github.com/wasabeef/recyclerview-animators\" target=\"_blank\" rel=\"noopener\">recyclerview-animators</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/81813780/AVLoadingIndicatorView\" target=\"_blank\" rel=\"noopener\">AVLoadingIndicatorView</a></td>\n<td>Loading动画</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Yalantis/uCrop\" target=\"_blank\" rel=\"noopener\">uCrop</a></td>\n<td>图片剪切</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>推送服务</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>推送后台管理页面开发-开源项目-daquan</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>社会化</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>数据统计</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>单元测试</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>接入SDK</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>数据加解密</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>业务流程动态配置化管理</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>应用模块权限配置管理</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>应用模块动态配置</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>配置文件动态下发</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>页面跳转动态配置管理</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>渠道配置</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>代码混淆</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>应用加壳</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>自动化测试</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>灰度发布</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/WVector/AppUpdate\" target=\"_blank\" rel=\"noopener\">AppUpdate</a></td>\n<td>应用版本更新模块</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>插件化，版本更新</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>热修复，bug修复</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>相机</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>图片</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>视频</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>音频</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>即时通信IM</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>PDF文件在线查看，下载查看</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>状态栏</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>标题栏</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Back键</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>手势识别</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>主菜单</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"开发、测试、集成、发布、灰度工具\"><a href=\"#开发、测试、集成、发布、灰度工具\" class=\"headerlink\" title=\"开发、测试、集成、发布、灰度工具\"></a>开发、测试、集成、发布、灰度工具</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>功能描述（见WIKI）</th>\n<th>相关产考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://qa.blog.163.com/blog/static/190147002201611155418810/\" target=\"_blank\" rel=\"noopener\">接口文档管理工具 Postman、Swagger、RAP</a></td>\n<td>接口测试</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"新项目建议\"><a href=\"#新项目建议\" class=\"headerlink\" title=\"新项目建议\"></a>新项目建议</h3><ol>\n<li>新项目建议采用 minSdkVersion=”14”（覆盖目前99%设备） 或者更高版本，采用minSdkVersion=”17”（覆盖目前96%设备） 可直接越过webview js漏洞。</li>\n</ol>\n<h3 id=\"相关参考\"><a href=\"#相关参考\" class=\"headerlink\" title=\"相关参考\"></a>相关参考</h3><h3 id=\"和当前项目类似项目\"><a href=\"#和当前项目类似项目\" class=\"headerlink\" title=\"和当前项目类似项目\"></a>和当前项目类似项目</h3><p><a href=\"https://github.com/Blankj/AndroidUtilCode\" target=\"_blank\" rel=\"noopener\">AndroidUtilCode</a>   :  <a href=\"http://blog.csdn.net/qq_33445600/article/details/78487857\" target=\"_blank\" rel=\"noopener\">AndroidUtilCode功能列表</a>  借鉴其通用基础模块封装</p>\n<p><a href=\"https://github.com/litesuits/android-common\" target=\"_blank\" rel=\"noopener\">android-common</a> : 借鉴其通用基础模块封装</p>\n<p><a href=\"https://github.com/wu928320442/EasyAndroid\" target=\"_blank\" rel=\"noopener\">EasyAndroid</a> </p>\n<p><a href=\"https://github.com/xiaoyaoyou1212/XSnow\" target=\"_blank\" rel=\"noopener\">XSnow</a>   </p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h3><pre><code>整合时下优秀的开源框架，实现一个高度解耦，可快速开发，易复用，易扩展的Android基础库。涉及到常规应用开发的各方面。\n</code></pre><h3 id=\"关注点\"><a href=\"#关注点\" class=\"headerlink\" title=\"关注点\"></a>关注点</h3><ol>\n<li>code规范</li>\n<li>通用基础库(Base*、Util)</li>\n<li>业务组件封装</li>\n<li>架构（MVP、MVVM）</li>\n<li>抽象中间层</li>\n<li>解耦，易替换，易删除</li>\n<li>快速易开发</li>\n<li>易测试（自动化测试，单元测试等）</li>\n<li>持续集成CI</li>\n<li>渠道打包</li>\n<li>灰度发布</li>\n<li>强制更新</li>\n<li>异步任务调度</li>\n<li>View &amp; Animation</li>\n<li>组件化</li>\n<li>插件化</li>\n<li>热更新</li>\n</ol>\n<h3 id=\"第三方库\"><a href=\"#第三方库\" class=\"headerlink\" title=\"第三方库\"></a>第三方库</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>功能描述（见WIKI）</th>\n<th>同类项目</th>\n<th>相关优化方向</th>\n<th>相关产考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[Android Jetpack]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[阿里 sophix]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[阿里 Atlas]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[阿里 Small]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[阿里 AndFix]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[Kotlin]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[React Native]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[Android Testing]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[MVP]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[MVVM]</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ReactiveX/RxJava\" target=\"_blank\" rel=\"noopener\">RxJava</a></td>\n<td>异步编程</td>\n<td></td>\n<td></td>\n<td><a href=\"http://gank.io/post/560e15be2dca930e00da1083\" target=\"_blank\" rel=\"noopener\">给 Android 开发者的 RxJava 详解</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/ReactiveX/RxAndroid\" target=\"_blank\" rel=\"noopener\">RxAndroid</a></td>\n<td>异步编程</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/tbruyelle/RxPermissions\" target=\"_blank\" rel=\"noopener\">RxPermissions</a></td>\n<td>RxJava支持6.0权限</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/square/retrofit\" target=\"_blank\" rel=\"noopener\">Retrofit2</a></td>\n<td>网络访问封装</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/JakeWharton/dagger\" target=\"_blank\" rel=\"noopener\">Dagger2</a></td>\n<td>对象注入</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/orhanobut/logger\" target=\"_blank\" rel=\"noopener\">Logger</a></td>\n<td>日志记录</td>\n<td><a href=\"https://github.com/JakeWharton/timber\" target=\"_blank\" rel=\"noopener\">Timer</a></td>\n<td>无埋点日志、无埋点统计</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://www.raywenderlich.com/170233/reactive-programming-rxandroid-kotlin-introduction\" target=\"_blank\" rel=\"noopener\">RxAndroid Tutorial</a></td>\n<td>指南</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/JakeWharton/RxBinding\" target=\"_blank\" rel=\"noopener\">RxBinding</a></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava2\" target=\"_blank\" rel=\"noopener\">retrofit-adapters for rxjava2</a></td>\n<td>基础封装</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/square/okhttp\" target=\"_blank\" rel=\"noopener\">OKHTTP3</a></td>\n<td>网络访问</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/facebook/fresco\" target=\"_blank\" rel=\"noopener\">Fresco</a></td>\n<td>图片处理</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/JakeWharton/butterknife\" target=\"_blank\" rel=\"noopener\">Butterknife</a></td>\n<td>View注入</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/lzyzsd/JsBridge\" target=\"_blank\" rel=\"noopener\">JsBridge</a></td>\n<td>hybird</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/afollestad/material-dialogs\" target=\"_blank\" rel=\"noopener\">material-dialogs</a></td>\n<td>Dialog</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/PhilJay/MPAndroidChart\" target=\"_blank\" rel=\"noopener\">MPAndroidChart</a></td>\n<td>图表</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/airbnb/lottie-android\" target=\"_blank\" rel=\"noopener\">airbnb-lottie-android</a></td>\n<td>AirBnB 动画框架，渲染高级动效</td>\n<td></td>\n<td></td>\n<td><a href=\"https://github.com/lgvalle/Material-Animations\" target=\"_blank\" rel=\"noopener\">Material-Animations</a>、<a href=\"https://github.com/wasabeef/recyclerview-animators\" target=\"_blank\" rel=\"noopener\">recyclerview-animators</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/81813780/AVLoadingIndicatorView\" target=\"_blank\" rel=\"noopener\">AVLoadingIndicatorView</a></td>\n<td>Loading动画</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Yalantis/uCrop\" target=\"_blank\" rel=\"noopener\">uCrop</a></td>\n<td>图片剪切</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>推送服务</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>推送后台管理页面开发-开源项目-daquan</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>社会化</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>数据统计</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>单元测试</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>接入SDK</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>数据加解密</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>业务流程动态配置化管理</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>应用模块权限配置管理</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>应用模块动态配置</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>配置文件动态下发</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>页面跳转动态配置管理</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>渠道配置</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>代码混淆</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>应用加壳</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>自动化测试</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>灰度发布</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/WVector/AppUpdate\" target=\"_blank\" rel=\"noopener\">AppUpdate</a></td>\n<td>应用版本更新模块</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>插件化，版本更新</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>热修复，bug修复</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>相机</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>图片</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>视频</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>音频</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>即时通信IM</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>PDF文件在线查看，下载查看</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>状态栏</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>标题栏</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Back键</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>手势识别</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>主菜单</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"开发、测试、集成、发布、灰度工具\"><a href=\"#开发、测试、集成、发布、灰度工具\" class=\"headerlink\" title=\"开发、测试、集成、发布、灰度工具\"></a>开发、测试、集成、发布、灰度工具</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>功能描述（见WIKI）</th>\n<th>相关产考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://qa.blog.163.com/blog/static/190147002201611155418810/\" target=\"_blank\" rel=\"noopener\">接口文档管理工具 Postman、Swagger、RAP</a></td>\n<td>接口测试</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"新项目建议\"><a href=\"#新项目建议\" class=\"headerlink\" title=\"新项目建议\"></a>新项目建议</h3><ol>\n<li>新项目建议采用 minSdkVersion=”14”（覆盖目前99%设备） 或者更高版本，采用minSdkVersion=”17”（覆盖目前96%设备） 可直接越过webview js漏洞。</li>\n</ol>\n<h3 id=\"相关参考\"><a href=\"#相关参考\" class=\"headerlink\" title=\"相关参考\"></a>相关参考</h3><h3 id=\"和当前项目类似项目\"><a href=\"#和当前项目类似项目\" class=\"headerlink\" title=\"和当前项目类似项目\"></a>和当前项目类似项目</h3><p><a href=\"https://github.com/Blankj/AndroidUtilCode\" target=\"_blank\" rel=\"noopener\">AndroidUtilCode</a>   :  <a href=\"http://blog.csdn.net/qq_33445600/article/details/78487857\" target=\"_blank\" rel=\"noopener\">AndroidUtilCode功能列表</a>  借鉴其通用基础模块封装</p>\n<p><a href=\"https://github.com/litesuits/android-common\" target=\"_blank\" rel=\"noopener\">android-common</a> : 借鉴其通用基础模块封装</p>\n<p><a href=\"https://github.com/wu928320442/EasyAndroid\" target=\"_blank\" rel=\"noopener\">EasyAndroid</a> </p>\n<p><a href=\"https://github.com/xiaoyaoyou1212/XSnow\" target=\"_blank\" rel=\"noopener\">XSnow</a>   </p>\n"},{"title":"Android应用快速开发学习路线","date":"2018-08-01T12:47:20.000Z","summery":"集合当下已经非常流行和完善的各种第三方开发库，搭建快速，高效，稳定的Android基础框架系统，避免重复制造轮子，提高开发效率。文中将涉及到OkHttp、Retrofit、RxJava、Kotlin、MVP等相关知识。","_content":"#### 参考资料\n\n[高级Android开发强化实战]\n\n[Google IO 合集]\n\n### 一、面向对象设计原则\n\n|序号|名称|目标|描述|\n|----|----|----|----|\n|1|<b>开-闭原则</b>|对扩展开放，对修改关闭|即在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展。增加新功能，不改变原有代码。避免回归|\n|2|<b>类的单一职责原则</b>|解耦和增强内聚性（高内聚，低耦合）|类被修改的几率很大，因此应该专注于单一的功能。如果你把多个功能放在同一个类中，功能之间就形成了关联，改变其中一个功能，有可能中止另一个功能，这时就需要新一轮的测试来避免可能出现的问题|\n|3|<b>依赖倒置原则</b>|要依赖于抽象，不要依赖于具体的实现，抽象的是稳定的。实现是多变的|高层模块不应该依赖低层模块，两者都应该依赖其抽象（抽象类或接口）；抽象不应该依赖细节（具体实现），细节（具体实现）应该依赖抽象。|\n|4|<b>组合复用原则</b>|尽量使用对象组合，而不是继承来达到复用的目的。|该原则就是在一个新的对象里面使用一些已有的对象，使之成为新对象的一部分：新的对象通过向这些对象的委派达到复用已有功能的目的。如果仅仅为了代码复用优先选择组合复用，而非继承复用。组合的耦合性相对继承低。|\n|5|<b>里氏替换原则</b>|功能容易被替换|父类出现的地方可以被子类替换，在替换后依然保持原功能。子类要拥有父类的所有功能。子类在重写父类方法时，尽量选择扩展重写，防止改变了功能。|\n|6|<b>接口隔离原则</b>|不应该强迫客户程序依赖他们不需要使用的方法|一个接口不需要提供太多的行为，一个接口应该只提供一种对外的功能，不应该把所有的操作都封装到一个接口当中，尽量定义小而精的接口interface，少定义大而全的接口。本质与单一职责相同。小接口之间功能隔离，实现类需要多个功能时可以选择多实现.或接口之间做继承|\n|7|<b>迪米特法则（类与类交互的原则）</b>|一个对象应当对其他对象有尽可能少的了解,不和陌生人说话。|类间解耦，低耦合）意思就是降低各个对象之间的耦合，提高系统的可维护性；在模块之间只通过接口来通信，而不理会模块的内部工作原理，可以使各个模块的耦合成都降到最低，促进软件的复用类与类交互时，在满足功能要求的基础上，传递的数据量越少越好。因为这样可能降低耦合度。|\n|8|<b>面向接口编程而非面向实现</b>|原则的原则，上面的7条法则都应该遵循该法则。此为开发第一原则|客户端通过一系列抽象操作实例，而无需关注具体类型。便于灵活切换一系列功能。解耦，分层，复用，替换！|\n\n\n### 二、开发规范\n开发出可维护的代码，开发规范至关重要。没有开发规范，随着开发人员的来来去去，各种开发习惯充斥在代码中，代码风格不统一，将给后期维护升级带来巨大的困难。开发规范中通常都是一些约定，开发人员必须都遵循这些约定。\n\n1. [架构分层规范]\n2. [编码规范]\n3. [仓库管理规范]\n\n### 三、新的语言\n这些新的语言，有的可以提高开发效率；有的可以轻松实现纯Java不太容易实现的功能；有的则可用提供与Javascript更优美的交互方式。然而，如果你只是想开发出应用，完全可以先略过这部门内容，再你完全掌握其他部分的内容之后，再回过头来学习。他们让Android开发变的更美，而并非一定必要。\n\n<font color=\"#ff0000\">但是：</font><b>现在越来越多的公司开始使用他们，so，在你掌握其他知识之后，一定要来学习并使用他们。否则你到了公司可能并不能快速熟悉他们新的开发架构。</b>\n\n1. [RxJava]\n2. [Kotlin]\n3. [ReactNative]\n\n### 四、项目架构\n\n1. [OkHttp] \n2. [Retrofit]\n3. [Dagger]\n4. [ButterKnife]\n5. [MVP]\n6. [Hybird]\n8. [Android Jetpack]\n9. [EventBus]\n4. [配置化编程]\n5. [向下兼容设计]\n6. [面向删除-关闭修改]\n\n### 五、Android基础进阶\n\n这部门内容并不是从0开始学习Android，是针对有Android基础的同学而准备的进阶内容。通常掌握下面的内容之后，你就有能力开发常见的普通应用。如果想要从0开始学习Android，建议先从[这里: android developer guide](https://developer.android.com/guide/)开始：\n\n1. [ConstraintLayout]\n2. [RecyclerView]\n3. [CoordinatorLayout]\n4. [AppBarLayout]\n5. [CollapsingToolbarLayout]\n3. [WebView]\n4. [ViewPager]\n7. [Bitmap]\n8. [Canvas]\n9. [Animation]\n10. [View]\n10. [Chart]\n11. [MediaPlayer]\n12. [Dialog]\n18. [Toolbar]\n19. [BackStack]\n13. [Fragment]\n14. [Activity]\n15. [Service]\n16. [Receiver]\n17. [Provider]\n18. [DownloadService]\n\n### 六、组件化、第三方开源库\n\n1. [Base]\n3. [Permission]\n4. [Paging]\n6. [无埋点统计]\n7. [DeepLink]\n8. [功能权限配置]\n9. [picasso]\n10. [uikit]\n11. [kryo]\n12. [LeakCannary]\n13. [Crashlytics]\n14. [recyclerview-helper]\n15. [android-gif-drawable]\n16. [orhanobut logger]\n17. [sobotsdk]\n18. [react-native]\n19. [lib.FairyPlugin]\n20. [lib.h5bridge]\n21. [bugly:crashreport]\n22. [butterknife]\n23. [converter_gson]\n24. [adapter_rxjava]\n\n### 七、持续集成、测试\n\n1. [Jeakins]\n1. [Android-testing]]\n2. [Mockito]\n3. [Expressco]\n4. [UIAutomator]\n\n### 八、插件化、热更新\n\n1. [ARouter]\n2. [Sophix]\n\n### 九、程序固化、版本发布\n\n1. [Gradle]\n2. [360固化]\n3. [渠道发布]\n4. [灰度发布]\n\n### 十、设计模式\n\n\n[高级Android开发强化实战]:https://www.jianshu.com/p/0ce30c6703a1\n[Google IO 合集]:https://www.jianshu.com/p/99f8423088a3\n\n[CoordinatorLayout]:https://www.jianshu.com/p/f09723b7e887/\n\n\n\n","source":"_posts/Android熟练学习路线.md","raw":"---\ntitle: Android应用快速开发学习路线\ndate: 2018-08-01 20:47:20\ntags: [android,架构,Kotlin,RxJava,Retrofit,组件化,插件化,热更新,持续集成,设计模式,设计原则]\nsummery: 集合当下已经非常流行和完善的各种第三方开发库，搭建快速，高效，稳定的Android基础框架系统，避免重复制造轮子，提高开发效率。文中将涉及到OkHttp、Retrofit、RxJava、Kotlin、MVP等相关知识。\n---\n#### 参考资料\n\n[高级Android开发强化实战]\n\n[Google IO 合集]\n\n### 一、面向对象设计原则\n\n|序号|名称|目标|描述|\n|----|----|----|----|\n|1|<b>开-闭原则</b>|对扩展开放，对修改关闭|即在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展。增加新功能，不改变原有代码。避免回归|\n|2|<b>类的单一职责原则</b>|解耦和增强内聚性（高内聚，低耦合）|类被修改的几率很大，因此应该专注于单一的功能。如果你把多个功能放在同一个类中，功能之间就形成了关联，改变其中一个功能，有可能中止另一个功能，这时就需要新一轮的测试来避免可能出现的问题|\n|3|<b>依赖倒置原则</b>|要依赖于抽象，不要依赖于具体的实现，抽象的是稳定的。实现是多变的|高层模块不应该依赖低层模块，两者都应该依赖其抽象（抽象类或接口）；抽象不应该依赖细节（具体实现），细节（具体实现）应该依赖抽象。|\n|4|<b>组合复用原则</b>|尽量使用对象组合，而不是继承来达到复用的目的。|该原则就是在一个新的对象里面使用一些已有的对象，使之成为新对象的一部分：新的对象通过向这些对象的委派达到复用已有功能的目的。如果仅仅为了代码复用优先选择组合复用，而非继承复用。组合的耦合性相对继承低。|\n|5|<b>里氏替换原则</b>|功能容易被替换|父类出现的地方可以被子类替换，在替换后依然保持原功能。子类要拥有父类的所有功能。子类在重写父类方法时，尽量选择扩展重写，防止改变了功能。|\n|6|<b>接口隔离原则</b>|不应该强迫客户程序依赖他们不需要使用的方法|一个接口不需要提供太多的行为，一个接口应该只提供一种对外的功能，不应该把所有的操作都封装到一个接口当中，尽量定义小而精的接口interface，少定义大而全的接口。本质与单一职责相同。小接口之间功能隔离，实现类需要多个功能时可以选择多实现.或接口之间做继承|\n|7|<b>迪米特法则（类与类交互的原则）</b>|一个对象应当对其他对象有尽可能少的了解,不和陌生人说话。|类间解耦，低耦合）意思就是降低各个对象之间的耦合，提高系统的可维护性；在模块之间只通过接口来通信，而不理会模块的内部工作原理，可以使各个模块的耦合成都降到最低，促进软件的复用类与类交互时，在满足功能要求的基础上，传递的数据量越少越好。因为这样可能降低耦合度。|\n|8|<b>面向接口编程而非面向实现</b>|原则的原则，上面的7条法则都应该遵循该法则。此为开发第一原则|客户端通过一系列抽象操作实例，而无需关注具体类型。便于灵活切换一系列功能。解耦，分层，复用，替换！|\n\n\n### 二、开发规范\n开发出可维护的代码，开发规范至关重要。没有开发规范，随着开发人员的来来去去，各种开发习惯充斥在代码中，代码风格不统一，将给后期维护升级带来巨大的困难。开发规范中通常都是一些约定，开发人员必须都遵循这些约定。\n\n1. [架构分层规范]\n2. [编码规范]\n3. [仓库管理规范]\n\n### 三、新的语言\n这些新的语言，有的可以提高开发效率；有的可以轻松实现纯Java不太容易实现的功能；有的则可用提供与Javascript更优美的交互方式。然而，如果你只是想开发出应用，完全可以先略过这部门内容，再你完全掌握其他部分的内容之后，再回过头来学习。他们让Android开发变的更美，而并非一定必要。\n\n<font color=\"#ff0000\">但是：</font><b>现在越来越多的公司开始使用他们，so，在你掌握其他知识之后，一定要来学习并使用他们。否则你到了公司可能并不能快速熟悉他们新的开发架构。</b>\n\n1. [RxJava]\n2. [Kotlin]\n3. [ReactNative]\n\n### 四、项目架构\n\n1. [OkHttp] \n2. [Retrofit]\n3. [Dagger]\n4. [ButterKnife]\n5. [MVP]\n6. [Hybird]\n8. [Android Jetpack]\n9. [EventBus]\n4. [配置化编程]\n5. [向下兼容设计]\n6. [面向删除-关闭修改]\n\n### 五、Android基础进阶\n\n这部门内容并不是从0开始学习Android，是针对有Android基础的同学而准备的进阶内容。通常掌握下面的内容之后，你就有能力开发常见的普通应用。如果想要从0开始学习Android，建议先从[这里: android developer guide](https://developer.android.com/guide/)开始：\n\n1. [ConstraintLayout]\n2. [RecyclerView]\n3. [CoordinatorLayout]\n4. [AppBarLayout]\n5. [CollapsingToolbarLayout]\n3. [WebView]\n4. [ViewPager]\n7. [Bitmap]\n8. [Canvas]\n9. [Animation]\n10. [View]\n10. [Chart]\n11. [MediaPlayer]\n12. [Dialog]\n18. [Toolbar]\n19. [BackStack]\n13. [Fragment]\n14. [Activity]\n15. [Service]\n16. [Receiver]\n17. [Provider]\n18. [DownloadService]\n\n### 六、组件化、第三方开源库\n\n1. [Base]\n3. [Permission]\n4. [Paging]\n6. [无埋点统计]\n7. [DeepLink]\n8. [功能权限配置]\n9. [picasso]\n10. [uikit]\n11. [kryo]\n12. [LeakCannary]\n13. [Crashlytics]\n14. [recyclerview-helper]\n15. [android-gif-drawable]\n16. [orhanobut logger]\n17. [sobotsdk]\n18. [react-native]\n19. [lib.FairyPlugin]\n20. [lib.h5bridge]\n21. [bugly:crashreport]\n22. [butterknife]\n23. [converter_gson]\n24. [adapter_rxjava]\n\n### 七、持续集成、测试\n\n1. [Jeakins]\n1. [Android-testing]]\n2. [Mockito]\n3. [Expressco]\n4. [UIAutomator]\n\n### 八、插件化、热更新\n\n1. [ARouter]\n2. [Sophix]\n\n### 九、程序固化、版本发布\n\n1. [Gradle]\n2. [360固化]\n3. [渠道发布]\n4. [灰度发布]\n\n### 十、设计模式\n\n\n[高级Android开发强化实战]:https://www.jianshu.com/p/0ce30c6703a1\n[Google IO 合集]:https://www.jianshu.com/p/99f8423088a3\n\n[CoordinatorLayout]:https://www.jianshu.com/p/f09723b7e887/\n\n\n\n","slug":"Android熟练学习路线","published":1,"updated":"2018-08-14T17:03:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hgm0004js6sk5d6dls3","content":"<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.jianshu.com/p/0ce30c6703a1\" target=\"_blank\" rel=\"noopener\">高级Android开发强化实战</a></p>\n<p><a href=\"https://www.jianshu.com/p/99f8423088a3\" target=\"_blank\" rel=\"noopener\">Google IO 合集</a></p>\n<h3 id=\"一、面向对象设计原则\"><a href=\"#一、面向对象设计原则\" class=\"headerlink\" title=\"一、面向对象设计原则\"></a>一、面向对象设计原则</h3><table>\n<thead>\n<tr>\n<th>序号</th>\n<th>名称</th>\n<th>目标</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><b>开-闭原则</b></td>\n<td>对扩展开放，对修改关闭</td>\n<td>即在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展。增加新功能，不改变原有代码。避免回归</td>\n</tr>\n<tr>\n<td>2</td>\n<td><b>类的单一职责原则</b></td>\n<td>解耦和增强内聚性（高内聚，低耦合）</td>\n<td>类被修改的几率很大，因此应该专注于单一的功能。如果你把多个功能放在同一个类中，功能之间就形成了关联，改变其中一个功能，有可能中止另一个功能，这时就需要新一轮的测试来避免可能出现的问题</td>\n</tr>\n<tr>\n<td>3</td>\n<td><b>依赖倒置原则</b></td>\n<td>要依赖于抽象，不要依赖于具体的实现，抽象的是稳定的。实现是多变的</td>\n<td>高层模块不应该依赖低层模块，两者都应该依赖其抽象（抽象类或接口）；抽象不应该依赖细节（具体实现），细节（具体实现）应该依赖抽象。</td>\n</tr>\n<tr>\n<td>4</td>\n<td><b>组合复用原则</b></td>\n<td>尽量使用对象组合，而不是继承来达到复用的目的。</td>\n<td>该原则就是在一个新的对象里面使用一些已有的对象，使之成为新对象的一部分：新的对象通过向这些对象的委派达到复用已有功能的目的。如果仅仅为了代码复用优先选择组合复用，而非继承复用。组合的耦合性相对继承低。</td>\n</tr>\n<tr>\n<td>5</td>\n<td><b>里氏替换原则</b></td>\n<td>功能容易被替换</td>\n<td>父类出现的地方可以被子类替换，在替换后依然保持原功能。子类要拥有父类的所有功能。子类在重写父类方法时，尽量选择扩展重写，防止改变了功能。</td>\n</tr>\n<tr>\n<td>6</td>\n<td><b>接口隔离原则</b></td>\n<td>不应该强迫客户程序依赖他们不需要使用的方法</td>\n<td>一个接口不需要提供太多的行为，一个接口应该只提供一种对外的功能，不应该把所有的操作都封装到一个接口当中，尽量定义小而精的接口interface，少定义大而全的接口。本质与单一职责相同。小接口之间功能隔离，实现类需要多个功能时可以选择多实现.或接口之间做继承</td>\n</tr>\n<tr>\n<td>7</td>\n<td><b>迪米特法则（类与类交互的原则）</b></td>\n<td>一个对象应当对其他对象有尽可能少的了解,不和陌生人说话。</td>\n<td>类间解耦，低耦合）意思就是降低各个对象之间的耦合，提高系统的可维护性；在模块之间只通过接口来通信，而不理会模块的内部工作原理，可以使各个模块的耦合成都降到最低，促进软件的复用类与类交互时，在满足功能要求的基础上，传递的数据量越少越好。因为这样可能降低耦合度。</td>\n</tr>\n<tr>\n<td>8</td>\n<td><b>面向接口编程而非面向实现</b></td>\n<td>原则的原则，上面的7条法则都应该遵循该法则。此为开发第一原则</td>\n<td>客户端通过一系列抽象操作实例，而无需关注具体类型。便于灵活切换一系列功能。解耦，分层，复用，替换！</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"二、开发规范\"><a href=\"#二、开发规范\" class=\"headerlink\" title=\"二、开发规范\"></a>二、开发规范</h3><p>开发出可维护的代码，开发规范至关重要。没有开发规范，随着开发人员的来来去去，各种开发习惯充斥在代码中，代码风格不统一，将给后期维护升级带来巨大的困难。开发规范中通常都是一些约定，开发人员必须都遵循这些约定。</p>\n<ol>\n<li>[架构分层规范]</li>\n<li>[编码规范]</li>\n<li>[仓库管理规范]</li>\n</ol>\n<h3 id=\"三、新的语言\"><a href=\"#三、新的语言\" class=\"headerlink\" title=\"三、新的语言\"></a>三、新的语言</h3><p>这些新的语言，有的可以提高开发效率；有的可以轻松实现纯Java不太容易实现的功能；有的则可用提供与Javascript更优美的交互方式。然而，如果你只是想开发出应用，完全可以先略过这部门内容，再你完全掌握其他部分的内容之后，再回过头来学习。他们让Android开发变的更美，而并非一定必要。</p>\n<p><font color=\"#ff0000\">但是：</font><b>现在越来越多的公司开始使用他们，so，在你掌握其他知识之后，一定要来学习并使用他们。否则你到了公司可能并不能快速熟悉他们新的开发架构。</b></p>\n<ol>\n<li>[RxJava]</li>\n<li>[Kotlin]</li>\n<li>[ReactNative]</li>\n</ol>\n<h3 id=\"四、项目架构\"><a href=\"#四、项目架构\" class=\"headerlink\" title=\"四、项目架构\"></a>四、项目架构</h3><ol>\n<li>[OkHttp] </li>\n<li>[Retrofit]</li>\n<li>[Dagger]</li>\n<li>[ButterKnife]</li>\n<li>[MVP]</li>\n<li>[Hybird]</li>\n<li>[Android Jetpack]</li>\n<li>[EventBus]</li>\n<li>[配置化编程]</li>\n<li>[向下兼容设计]</li>\n<li>[面向删除-关闭修改]</li>\n</ol>\n<h3 id=\"五、Android基础进阶\"><a href=\"#五、Android基础进阶\" class=\"headerlink\" title=\"五、Android基础进阶\"></a>五、Android基础进阶</h3><p>这部门内容并不是从0开始学习Android，是针对有Android基础的同学而准备的进阶内容。通常掌握下面的内容之后，你就有能力开发常见的普通应用。如果想要从0开始学习Android，建议先从<a href=\"https://developer.android.com/guide/\" target=\"_blank\" rel=\"noopener\">这里: android developer guide</a>开始：</p>\n<ol>\n<li>[ConstraintLayout]</li>\n<li>[RecyclerView]</li>\n<li><a href=\"https://www.jianshu.com/p/f09723b7e887/\" target=\"_blank\" rel=\"noopener\">CoordinatorLayout</a></li>\n<li>[AppBarLayout]</li>\n<li>[CollapsingToolbarLayout]</li>\n<li>[WebView]</li>\n<li>[ViewPager]</li>\n<li>[Bitmap]</li>\n<li>[Canvas]</li>\n<li>[Animation]</li>\n<li>[View]</li>\n<li>[Chart]</li>\n<li>[MediaPlayer]</li>\n<li>[Dialog]</li>\n<li>[Toolbar]</li>\n<li>[BackStack]</li>\n<li>[Fragment]</li>\n<li>[Activity]</li>\n<li>[Service]</li>\n<li>[Receiver]</li>\n<li>[Provider]</li>\n<li>[DownloadService]</li>\n</ol>\n<h3 id=\"六、组件化、第三方开源库\"><a href=\"#六、组件化、第三方开源库\" class=\"headerlink\" title=\"六、组件化、第三方开源库\"></a>六、组件化、第三方开源库</h3><ol>\n<li>[Base]</li>\n<li>[Permission]</li>\n<li>[Paging]</li>\n<li>[无埋点统计]</li>\n<li>[DeepLink]</li>\n<li>[功能权限配置]</li>\n<li>[picasso]</li>\n<li>[uikit]</li>\n<li>[kryo]</li>\n<li>[LeakCannary]</li>\n<li>[Crashlytics]</li>\n<li>[recyclerview-helper]</li>\n<li>[android-gif-drawable]</li>\n<li>[orhanobut logger]</li>\n<li>[sobotsdk]</li>\n<li>[react-native]</li>\n<li>[lib.FairyPlugin]</li>\n<li>[lib.h5bridge]</li>\n<li>[bugly:crashreport]</li>\n<li>[butterknife]</li>\n<li>[converter_gson]</li>\n<li>[adapter_rxjava]</li>\n</ol>\n<h3 id=\"七、持续集成、测试\"><a href=\"#七、持续集成、测试\" class=\"headerlink\" title=\"七、持续集成、测试\"></a>七、持续集成、测试</h3><ol>\n<li>[Jeakins]</li>\n<li>[Android-testing]]</li>\n<li>[Mockito]</li>\n<li>[Expressco]</li>\n<li>[UIAutomator]</li>\n</ol>\n<h3 id=\"八、插件化、热更新\"><a href=\"#八、插件化、热更新\" class=\"headerlink\" title=\"八、插件化、热更新\"></a>八、插件化、热更新</h3><ol>\n<li>[ARouter]</li>\n<li>[Sophix]</li>\n</ol>\n<h3 id=\"九、程序固化、版本发布\"><a href=\"#九、程序固化、版本发布\" class=\"headerlink\" title=\"九、程序固化、版本发布\"></a>九、程序固化、版本发布</h3><ol>\n<li>[Gradle]</li>\n<li>[360固化]</li>\n<li>[渠道发布]</li>\n<li>[灰度发布]</li>\n</ol>\n<h3 id=\"十、设计模式\"><a href=\"#十、设计模式\" class=\"headerlink\" title=\"十、设计模式\"></a>十、设计模式</h3>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.jianshu.com/p/0ce30c6703a1\" target=\"_blank\" rel=\"noopener\">高级Android开发强化实战</a></p>\n<p><a href=\"https://www.jianshu.com/p/99f8423088a3\" target=\"_blank\" rel=\"noopener\">Google IO 合集</a></p>\n<h3 id=\"一、面向对象设计原则\"><a href=\"#一、面向对象设计原则\" class=\"headerlink\" title=\"一、面向对象设计原则\"></a>一、面向对象设计原则</h3><table>\n<thead>\n<tr>\n<th>序号</th>\n<th>名称</th>\n<th>目标</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><b>开-闭原则</b></td>\n<td>对扩展开放，对修改关闭</td>\n<td>即在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展。增加新功能，不改变原有代码。避免回归</td>\n</tr>\n<tr>\n<td>2</td>\n<td><b>类的单一职责原则</b></td>\n<td>解耦和增强内聚性（高内聚，低耦合）</td>\n<td>类被修改的几率很大，因此应该专注于单一的功能。如果你把多个功能放在同一个类中，功能之间就形成了关联，改变其中一个功能，有可能中止另一个功能，这时就需要新一轮的测试来避免可能出现的问题</td>\n</tr>\n<tr>\n<td>3</td>\n<td><b>依赖倒置原则</b></td>\n<td>要依赖于抽象，不要依赖于具体的实现，抽象的是稳定的。实现是多变的</td>\n<td>高层模块不应该依赖低层模块，两者都应该依赖其抽象（抽象类或接口）；抽象不应该依赖细节（具体实现），细节（具体实现）应该依赖抽象。</td>\n</tr>\n<tr>\n<td>4</td>\n<td><b>组合复用原则</b></td>\n<td>尽量使用对象组合，而不是继承来达到复用的目的。</td>\n<td>该原则就是在一个新的对象里面使用一些已有的对象，使之成为新对象的一部分：新的对象通过向这些对象的委派达到复用已有功能的目的。如果仅仅为了代码复用优先选择组合复用，而非继承复用。组合的耦合性相对继承低。</td>\n</tr>\n<tr>\n<td>5</td>\n<td><b>里氏替换原则</b></td>\n<td>功能容易被替换</td>\n<td>父类出现的地方可以被子类替换，在替换后依然保持原功能。子类要拥有父类的所有功能。子类在重写父类方法时，尽量选择扩展重写，防止改变了功能。</td>\n</tr>\n<tr>\n<td>6</td>\n<td><b>接口隔离原则</b></td>\n<td>不应该强迫客户程序依赖他们不需要使用的方法</td>\n<td>一个接口不需要提供太多的行为，一个接口应该只提供一种对外的功能，不应该把所有的操作都封装到一个接口当中，尽量定义小而精的接口interface，少定义大而全的接口。本质与单一职责相同。小接口之间功能隔离，实现类需要多个功能时可以选择多实现.或接口之间做继承</td>\n</tr>\n<tr>\n<td>7</td>\n<td><b>迪米特法则（类与类交互的原则）</b></td>\n<td>一个对象应当对其他对象有尽可能少的了解,不和陌生人说话。</td>\n<td>类间解耦，低耦合）意思就是降低各个对象之间的耦合，提高系统的可维护性；在模块之间只通过接口来通信，而不理会模块的内部工作原理，可以使各个模块的耦合成都降到最低，促进软件的复用类与类交互时，在满足功能要求的基础上，传递的数据量越少越好。因为这样可能降低耦合度。</td>\n</tr>\n<tr>\n<td>8</td>\n<td><b>面向接口编程而非面向实现</b></td>\n<td>原则的原则，上面的7条法则都应该遵循该法则。此为开发第一原则</td>\n<td>客户端通过一系列抽象操作实例，而无需关注具体类型。便于灵活切换一系列功能。解耦，分层，复用，替换！</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"二、开发规范\"><a href=\"#二、开发规范\" class=\"headerlink\" title=\"二、开发规范\"></a>二、开发规范</h3><p>开发出可维护的代码，开发规范至关重要。没有开发规范，随着开发人员的来来去去，各种开发习惯充斥在代码中，代码风格不统一，将给后期维护升级带来巨大的困难。开发规范中通常都是一些约定，开发人员必须都遵循这些约定。</p>\n<ol>\n<li>[架构分层规范]</li>\n<li>[编码规范]</li>\n<li>[仓库管理规范]</li>\n</ol>\n<h3 id=\"三、新的语言\"><a href=\"#三、新的语言\" class=\"headerlink\" title=\"三、新的语言\"></a>三、新的语言</h3><p>这些新的语言，有的可以提高开发效率；有的可以轻松实现纯Java不太容易实现的功能；有的则可用提供与Javascript更优美的交互方式。然而，如果你只是想开发出应用，完全可以先略过这部门内容，再你完全掌握其他部分的内容之后，再回过头来学习。他们让Android开发变的更美，而并非一定必要。</p>\n<p><font color=\"#ff0000\">但是：</font><b>现在越来越多的公司开始使用他们，so，在你掌握其他知识之后，一定要来学习并使用他们。否则你到了公司可能并不能快速熟悉他们新的开发架构。</b></p>\n<ol>\n<li>[RxJava]</li>\n<li>[Kotlin]</li>\n<li>[ReactNative]</li>\n</ol>\n<h3 id=\"四、项目架构\"><a href=\"#四、项目架构\" class=\"headerlink\" title=\"四、项目架构\"></a>四、项目架构</h3><ol>\n<li>[OkHttp] </li>\n<li>[Retrofit]</li>\n<li>[Dagger]</li>\n<li>[ButterKnife]</li>\n<li>[MVP]</li>\n<li>[Hybird]</li>\n<li>[Android Jetpack]</li>\n<li>[EventBus]</li>\n<li>[配置化编程]</li>\n<li>[向下兼容设计]</li>\n<li>[面向删除-关闭修改]</li>\n</ol>\n<h3 id=\"五、Android基础进阶\"><a href=\"#五、Android基础进阶\" class=\"headerlink\" title=\"五、Android基础进阶\"></a>五、Android基础进阶</h3><p>这部门内容并不是从0开始学习Android，是针对有Android基础的同学而准备的进阶内容。通常掌握下面的内容之后，你就有能力开发常见的普通应用。如果想要从0开始学习Android，建议先从<a href=\"https://developer.android.com/guide/\" target=\"_blank\" rel=\"noopener\">这里: android developer guide</a>开始：</p>\n<ol>\n<li>[ConstraintLayout]</li>\n<li>[RecyclerView]</li>\n<li><a href=\"https://www.jianshu.com/p/f09723b7e887/\" target=\"_blank\" rel=\"noopener\">CoordinatorLayout</a></li>\n<li>[AppBarLayout]</li>\n<li>[CollapsingToolbarLayout]</li>\n<li>[WebView]</li>\n<li>[ViewPager]</li>\n<li>[Bitmap]</li>\n<li>[Canvas]</li>\n<li>[Animation]</li>\n<li>[View]</li>\n<li>[Chart]</li>\n<li>[MediaPlayer]</li>\n<li>[Dialog]</li>\n<li>[Toolbar]</li>\n<li>[BackStack]</li>\n<li>[Fragment]</li>\n<li>[Activity]</li>\n<li>[Service]</li>\n<li>[Receiver]</li>\n<li>[Provider]</li>\n<li>[DownloadService]</li>\n</ol>\n<h3 id=\"六、组件化、第三方开源库\"><a href=\"#六、组件化、第三方开源库\" class=\"headerlink\" title=\"六、组件化、第三方开源库\"></a>六、组件化、第三方开源库</h3><ol>\n<li>[Base]</li>\n<li>[Permission]</li>\n<li>[Paging]</li>\n<li>[无埋点统计]</li>\n<li>[DeepLink]</li>\n<li>[功能权限配置]</li>\n<li>[picasso]</li>\n<li>[uikit]</li>\n<li>[kryo]</li>\n<li>[LeakCannary]</li>\n<li>[Crashlytics]</li>\n<li>[recyclerview-helper]</li>\n<li>[android-gif-drawable]</li>\n<li>[orhanobut logger]</li>\n<li>[sobotsdk]</li>\n<li>[react-native]</li>\n<li>[lib.FairyPlugin]</li>\n<li>[lib.h5bridge]</li>\n<li>[bugly:crashreport]</li>\n<li>[butterknife]</li>\n<li>[converter_gson]</li>\n<li>[adapter_rxjava]</li>\n</ol>\n<h3 id=\"七、持续集成、测试\"><a href=\"#七、持续集成、测试\" class=\"headerlink\" title=\"七、持续集成、测试\"></a>七、持续集成、测试</h3><ol>\n<li>[Jeakins]</li>\n<li>[Android-testing]]</li>\n<li>[Mockito]</li>\n<li>[Expressco]</li>\n<li>[UIAutomator]</li>\n</ol>\n<h3 id=\"八、插件化、热更新\"><a href=\"#八、插件化、热更新\" class=\"headerlink\" title=\"八、插件化、热更新\"></a>八、插件化、热更新</h3><ol>\n<li>[ARouter]</li>\n<li>[Sophix]</li>\n</ol>\n<h3 id=\"九、程序固化、版本发布\"><a href=\"#九、程序固化、版本发布\" class=\"headerlink\" title=\"九、程序固化、版本发布\"></a>九、程序固化、版本发布</h3><ol>\n<li>[Gradle]</li>\n<li>[360固化]</li>\n<li>[渠道发布]</li>\n<li>[灰度发布]</li>\n</ol>\n<h3 id=\"十、设计模式\"><a href=\"#十、设计模式\" class=\"headerlink\" title=\"十、设计模式\"></a>十、设计模式</h3>"},{"title":"android通用功能基础模块开发","date":"2018-07-24T02:55:39.000Z","summery":null,"_content":"\n### 软件架构\n1. MVP\n2. RxJava\n3. Dagger\n4. ReactNative\n5. Retrofit\n5. 插件化\n6. 热更新\n7. Fresco\n8. \n\n\n### 业务架构\n\n### 屏幕适配\n\n### 通用View组件封装\n\n1. 地址选择控件\n2. 密码控件\n3. 键盘输入控件\n4. K线图\n5. 饼图\n6. 柱状图\n7. 按钮\n8. 区域块\n9. 表格\n10. 加载动画\n11. 下拉刷新\n12. Pager\n13. 自动滚动\n14. 标签（热卖，最新，推荐等）\n15. 进度条（圆形，弧形，水平，垂直，图形进度条，带数值）签到进度\n16. 区间选择器\n17. View动画\n18. 评分\n19. toggle控件：双状态、三状态  （开、关、禁用）\n20. Dialog\n21. 日历\n22. Float Window\n23. \n\n\n### 系统View封装\n\n1. RecyclerView （各种列表，各种横向滚动，瀑布流）\n2. ConstraintLayout\n\n### 文件相关\n\n1. 文件上传\n2. 文件下载\n3. 文件在线阅读（PDF，Word，excel）\n4. 文件缓存\n\n\n### WebView & RN\n\n### 多媒体\n\n### Camera\n\n###\n\n\n\n","source":"_posts/Android通用基础功能模块开发.md","raw":"---\ntitle: android通用功能基础模块开发\ndate: 2018-07-24 10:55:39\ntags: android view  \nsummery: \n---\n\n### 软件架构\n1. MVP\n2. RxJava\n3. Dagger\n4. ReactNative\n5. Retrofit\n5. 插件化\n6. 热更新\n7. Fresco\n8. \n\n\n### 业务架构\n\n### 屏幕适配\n\n### 通用View组件封装\n\n1. 地址选择控件\n2. 密码控件\n3. 键盘输入控件\n4. K线图\n5. 饼图\n6. 柱状图\n7. 按钮\n8. 区域块\n9. 表格\n10. 加载动画\n11. 下拉刷新\n12. Pager\n13. 自动滚动\n14. 标签（热卖，最新，推荐等）\n15. 进度条（圆形，弧形，水平，垂直，图形进度条，带数值）签到进度\n16. 区间选择器\n17. View动画\n18. 评分\n19. toggle控件：双状态、三状态  （开、关、禁用）\n20. Dialog\n21. 日历\n22. Float Window\n23. \n\n\n### 系统View封装\n\n1. RecyclerView （各种列表，各种横向滚动，瀑布流）\n2. ConstraintLayout\n\n### 文件相关\n\n1. 文件上传\n2. 文件下载\n3. 文件在线阅读（PDF，Word，excel）\n4. 文件缓存\n\n\n### WebView & RN\n\n### 多媒体\n\n### Camera\n\n###\n\n\n\n","slug":"Android通用基础功能模块开发","published":1,"updated":"2018-08-09T09:38:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hgn0005js6sudoytbex","content":"<h3 id=\"软件架构\"><a href=\"#软件架构\" class=\"headerlink\" title=\"软件架构\"></a>软件架构</h3><ol>\n<li>MVP</li>\n<li>RxJava</li>\n<li>Dagger</li>\n<li>ReactNative</li>\n<li>Retrofit</li>\n<li>插件化</li>\n<li>热更新</li>\n<li>Fresco</li>\n<li></li>\n</ol>\n<h3 id=\"业务架构\"><a href=\"#业务架构\" class=\"headerlink\" title=\"业务架构\"></a>业务架构</h3><h3 id=\"屏幕适配\"><a href=\"#屏幕适配\" class=\"headerlink\" title=\"屏幕适配\"></a>屏幕适配</h3><h3 id=\"通用View组件封装\"><a href=\"#通用View组件封装\" class=\"headerlink\" title=\"通用View组件封装\"></a>通用View组件封装</h3><ol>\n<li>地址选择控件</li>\n<li>密码控件</li>\n<li>键盘输入控件</li>\n<li>K线图</li>\n<li>饼图</li>\n<li>柱状图</li>\n<li>按钮</li>\n<li>区域块</li>\n<li>表格</li>\n<li>加载动画</li>\n<li>下拉刷新</li>\n<li>Pager</li>\n<li>自动滚动</li>\n<li>标签（热卖，最新，推荐等）</li>\n<li>进度条（圆形，弧形，水平，垂直，图形进度条，带数值）签到进度</li>\n<li>区间选择器</li>\n<li>View动画</li>\n<li>评分</li>\n<li>toggle控件：双状态、三状态  （开、关、禁用）</li>\n<li>Dialog</li>\n<li>日历</li>\n<li>Float Window</li>\n<li></li>\n</ol>\n<h3 id=\"系统View封装\"><a href=\"#系统View封装\" class=\"headerlink\" title=\"系统View封装\"></a>系统View封装</h3><ol>\n<li>RecyclerView （各种列表，各种横向滚动，瀑布流）</li>\n<li>ConstraintLayout</li>\n</ol>\n<h3 id=\"文件相关\"><a href=\"#文件相关\" class=\"headerlink\" title=\"文件相关\"></a>文件相关</h3><ol>\n<li>文件上传</li>\n<li>文件下载</li>\n<li>文件在线阅读（PDF，Word，excel）</li>\n<li>文件缓存</li>\n</ol>\n<h3 id=\"WebView-amp-RN\"><a href=\"#WebView-amp-RN\" class=\"headerlink\" title=\"WebView &amp; RN\"></a>WebView &amp; RN</h3><h3 id=\"多媒体\"><a href=\"#多媒体\" class=\"headerlink\" title=\"多媒体\"></a>多媒体</h3><h3 id=\"Camera\"><a href=\"#Camera\" class=\"headerlink\" title=\"Camera\"></a>Camera</h3><p>###</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"软件架构\"><a href=\"#软件架构\" class=\"headerlink\" title=\"软件架构\"></a>软件架构</h3><ol>\n<li>MVP</li>\n<li>RxJava</li>\n<li>Dagger</li>\n<li>ReactNative</li>\n<li>Retrofit</li>\n<li>插件化</li>\n<li>热更新</li>\n<li>Fresco</li>\n<li></li>\n</ol>\n<h3 id=\"业务架构\"><a href=\"#业务架构\" class=\"headerlink\" title=\"业务架构\"></a>业务架构</h3><h3 id=\"屏幕适配\"><a href=\"#屏幕适配\" class=\"headerlink\" title=\"屏幕适配\"></a>屏幕适配</h3><h3 id=\"通用View组件封装\"><a href=\"#通用View组件封装\" class=\"headerlink\" title=\"通用View组件封装\"></a>通用View组件封装</h3><ol>\n<li>地址选择控件</li>\n<li>密码控件</li>\n<li>键盘输入控件</li>\n<li>K线图</li>\n<li>饼图</li>\n<li>柱状图</li>\n<li>按钮</li>\n<li>区域块</li>\n<li>表格</li>\n<li>加载动画</li>\n<li>下拉刷新</li>\n<li>Pager</li>\n<li>自动滚动</li>\n<li>标签（热卖，最新，推荐等）</li>\n<li>进度条（圆形，弧形，水平，垂直，图形进度条，带数值）签到进度</li>\n<li>区间选择器</li>\n<li>View动画</li>\n<li>评分</li>\n<li>toggle控件：双状态、三状态  （开、关、禁用）</li>\n<li>Dialog</li>\n<li>日历</li>\n<li>Float Window</li>\n<li></li>\n</ol>\n<h3 id=\"系统View封装\"><a href=\"#系统View封装\" class=\"headerlink\" title=\"系统View封装\"></a>系统View封装</h3><ol>\n<li>RecyclerView （各种列表，各种横向滚动，瀑布流）</li>\n<li>ConstraintLayout</li>\n</ol>\n<h3 id=\"文件相关\"><a href=\"#文件相关\" class=\"headerlink\" title=\"文件相关\"></a>文件相关</h3><ol>\n<li>文件上传</li>\n<li>文件下载</li>\n<li>文件在线阅读（PDF，Word，excel）</li>\n<li>文件缓存</li>\n</ol>\n<h3 id=\"WebView-amp-RN\"><a href=\"#WebView-amp-RN\" class=\"headerlink\" title=\"WebView &amp; RN\"></a>WebView &amp; RN</h3><h3 id=\"多媒体\"><a href=\"#多媒体\" class=\"headerlink\" title=\"多媒体\"></a>多媒体</h3><h3 id=\"Camera\"><a href=\"#Camera\" class=\"headerlink\" title=\"Camera\"></a>Camera</h3><p>###</p>\n"},{"title":"Best Practices of HTTPS&TLS in Android","date":"2018-09-11T08:11:48.000Z","summery":"理解SSL/TLS加密套件如何配置HTTP协议实现完全的加密传输协议HTTPS。并了解整个HTTP协议握手和传输阶段的各个流程，以及流程中涉及到的各种专业术语。例如：SSL/TLS、Cipher Suites、Cipher Suite、对称加密、非对称加密、随机数、证书Certificate、pre Master Secret、主秘钥Master Secret、会话秘钥、CA、Public key、Private key等等。","_content":"\n### 参考信息\n\n[app security best prectices]\n\n[https-locally-without-browser-privacy-errors]\n\t\n[app security best prectices]:https://developer.android.com/topic/security/best-practices#java\n\n[app signing]:https://developer.android.com/studio/publish/app-signing\n[network security configuration]:https://developer.android.com/topic/security/best-practices#network-security-config\n[unknown cerificate authority]:https://developer.android.com/training/articles/security-ssl.html#UnknownCa\n[TrustManager]:https://developer.android.com/reference/javax/net/ssl/TrustManager\n[TrustManagerFactory]:https://developer.android.com/reference/javax/net/ssl/TrustManagerFactory\n[CertificateFactory]:https://developer.android.com/reference/java/security/cert/CertificateFactory\n[https-locally-without-browser-privacy-errors]:https://deliciousbrains.com/https-locally-without-browser-privacy-errors/\n### 相关参考\n\n|名称|描述|相关|\n|----|----|----|\n|[app security best prectices]|||\n|[app signing]|||\n|[Certificate Authority (CA)]|CA 是数字证书授权机构||\n|[certificate]|数字证书||\n|[CertificateFactory]|此类定义了用于从相关的编码中生成证书、证书路径 (CertPath) 和证书撤消列表 (CRL) 对象的 CertificateFactory 功能。Android只支持X.509类型的CertificateFactory <p>which is used to generate certificate, certification path (CertPath : a certificate chain) and certificate revocation list (CRL) objects from their encodings.|A certificate factory for X.509 must return certificates that are an instance of java.security.cert.X509Certificate<br>and <br>CRLs that are an instance of java.security.cert.X509CRL|\n|[TrustManager]|不应该信任所有证书，应该处理好以下三种情况：<p> 1. You're communicating with a web server that has a certificate signed by a new or custom CA.<br> 2. That CA isn't trusted by the device you're using.<br> 3. You cannot use a [network security configuration].<p>To learn more about how to complete these steps, see the discussion about handling an [unknown cerificate authority]|[unknown cerificate authority]|\n|[TrustManagerFactory]|用于生成[TrustManager]||\n|[Keystore]|包含了证书（Certificate）和公钥（public key）信息，是[TrustManager]验证的对象||\n\n### Eclipse Tomcat 配置https支持\n\n1. 在conf目录下存放keystore,开发环境中keystore应该放在这里。\n\t\n\t```java\n\t/environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/\n\t```\n\t\t\n1. 在server.xml中增加https connector。\n\t\n\t```xml\n\t <Connector SSLEnabled=\"true\" \n\t\t clientAuth=\"false\" \n\t\t keystoreFile=\"conf/farubaba.keystore\" \n\t\t keystorePass=\"123456\" maxThreads=\"200\" port=\"8443\"\n\t\t protocol=\"org.apache.coyote.http11.Http11NioProtocol\" \n\t\t scheme=\"https\" \n\t\t secure=\"true\" \n\t\t sslProtocol=\"TLS\">\n    </Connector>\n\t```\n3. 如果keystore位置配置错误，tomcat找不到则会报错，需要在错误信息中的提示位置防止服务器的keystore。\n\t\n\t```java\n\t严重: Failed to initialize connector [Connector[HTTP/1.1-8443]]\norg.apache.catalina.LifecycleException: Failed to initialize component [Connector[HTTP/1.1-8443]]\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:112)\n\tat org.apache.catalina.core.StandardService.initInternal(StandardService.java:549)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)\n\tat org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:875)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:632)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:655)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:497)\n\tat org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:309)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:492)\nCaused by: org.apache.catalina.LifecycleException: Protocol handler initialization failed\n\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:995)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)\n\t... 12 more\nCaused by: java.lang.IllegalArgumentException: /environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/farubaba.keystore (No such file or directory)\n\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:116)\n\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:87)\n\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:225)\n\tat org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:1086)\n\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.init(AbstractJsseEndpoint.java:268)\n\tat org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:581)\n\tat org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:68)\n\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:993)\n\t... 13 more\nCaused by: java.io.FileNotFoundException: /environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/farubaba.keystore (No such file or directory)\n\tat java.io.FileInputStream.open0(Native Method)\n\tat java.io.FileInputStream.open(FileInputStream.java:195)\n\tat java.io.FileInputStream.<init>(FileInputStream.java:138)\n\tat java.io.FileInputStream.<init>(FileInputStream.java:93)\n\tat sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90)\n\tat sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188)\n\tat org.apache.tomcat.util.file.ConfigFileLoader.getInputStream(ConfigFileLoader.java:96)\n\tat org.apache.tomcat.util.net.SSLUtilBase.getStore(SSLUtilBase.java:132)\n\tat org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeystore(SSLHostConfigCertificate.java:204)\n\tat org.apache.tomcat.util.net.jsse.JSSEUtil.getKeyManagers(JSSEUtil.java:184)\n\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:114)\n\t... 20 more\n\t```\n","source":"_posts/Best Practices of HTTPS&TLS.md","raw":"---\ntitle: Best Practices of HTTPS&TLS in Android\ndate: 2018-09-11 16:11:48\ntags: [SSL/TLS,Cipher Suites,对称加密,非对称加密,随机数,证书,Certificate,pre Master Secret,Master Secret,会话秘钥,CA,Public key,Private key]\nsummery: 理解SSL/TLS加密套件如何配置HTTP协议实现完全的加密传输协议HTTPS。并了解整个HTTP协议握手和传输阶段的各个流程，以及流程中涉及到的各种专业术语。例如：SSL/TLS、Cipher Suites、Cipher Suite、对称加密、非对称加密、随机数、证书Certificate、pre Master Secret、主秘钥Master Secret、会话秘钥、CA、Public key、Private key等等。\n---\n\n### 参考信息\n\n[app security best prectices]\n\n[https-locally-without-browser-privacy-errors]\n\t\n[app security best prectices]:https://developer.android.com/topic/security/best-practices#java\n\n[app signing]:https://developer.android.com/studio/publish/app-signing\n[network security configuration]:https://developer.android.com/topic/security/best-practices#network-security-config\n[unknown cerificate authority]:https://developer.android.com/training/articles/security-ssl.html#UnknownCa\n[TrustManager]:https://developer.android.com/reference/javax/net/ssl/TrustManager\n[TrustManagerFactory]:https://developer.android.com/reference/javax/net/ssl/TrustManagerFactory\n[CertificateFactory]:https://developer.android.com/reference/java/security/cert/CertificateFactory\n[https-locally-without-browser-privacy-errors]:https://deliciousbrains.com/https-locally-without-browser-privacy-errors/\n### 相关参考\n\n|名称|描述|相关|\n|----|----|----|\n|[app security best prectices]|||\n|[app signing]|||\n|[Certificate Authority (CA)]|CA 是数字证书授权机构||\n|[certificate]|数字证书||\n|[CertificateFactory]|此类定义了用于从相关的编码中生成证书、证书路径 (CertPath) 和证书撤消列表 (CRL) 对象的 CertificateFactory 功能。Android只支持X.509类型的CertificateFactory <p>which is used to generate certificate, certification path (CertPath : a certificate chain) and certificate revocation list (CRL) objects from their encodings.|A certificate factory for X.509 must return certificates that are an instance of java.security.cert.X509Certificate<br>and <br>CRLs that are an instance of java.security.cert.X509CRL|\n|[TrustManager]|不应该信任所有证书，应该处理好以下三种情况：<p> 1. You're communicating with a web server that has a certificate signed by a new or custom CA.<br> 2. That CA isn't trusted by the device you're using.<br> 3. You cannot use a [network security configuration].<p>To learn more about how to complete these steps, see the discussion about handling an [unknown cerificate authority]|[unknown cerificate authority]|\n|[TrustManagerFactory]|用于生成[TrustManager]||\n|[Keystore]|包含了证书（Certificate）和公钥（public key）信息，是[TrustManager]验证的对象||\n\n### Eclipse Tomcat 配置https支持\n\n1. 在conf目录下存放keystore,开发环境中keystore应该放在这里。\n\t\n\t```java\n\t/environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/\n\t```\n\t\t\n1. 在server.xml中增加https connector。\n\t\n\t```xml\n\t <Connector SSLEnabled=\"true\" \n\t\t clientAuth=\"false\" \n\t\t keystoreFile=\"conf/farubaba.keystore\" \n\t\t keystorePass=\"123456\" maxThreads=\"200\" port=\"8443\"\n\t\t protocol=\"org.apache.coyote.http11.Http11NioProtocol\" \n\t\t scheme=\"https\" \n\t\t secure=\"true\" \n\t\t sslProtocol=\"TLS\">\n    </Connector>\n\t```\n3. 如果keystore位置配置错误，tomcat找不到则会报错，需要在错误信息中的提示位置防止服务器的keystore。\n\t\n\t```java\n\t严重: Failed to initialize connector [Connector[HTTP/1.1-8443]]\norg.apache.catalina.LifecycleException: Failed to initialize component [Connector[HTTP/1.1-8443]]\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:112)\n\tat org.apache.catalina.core.StandardService.initInternal(StandardService.java:549)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)\n\tat org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:875)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:632)\n\tat org.apache.catalina.startup.Catalina.load(Catalina.java:655)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:497)\n\tat org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:309)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:492)\nCaused by: org.apache.catalina.LifecycleException: Protocol handler initialization failed\n\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:995)\n\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)\n\t... 12 more\nCaused by: java.lang.IllegalArgumentException: /environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/farubaba.keystore (No such file or directory)\n\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:116)\n\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:87)\n\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:225)\n\tat org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:1086)\n\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.init(AbstractJsseEndpoint.java:268)\n\tat org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:581)\n\tat org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:68)\n\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:993)\n\t... 13 more\nCaused by: java.io.FileNotFoundException: /environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/farubaba.keystore (No such file or directory)\n\tat java.io.FileInputStream.open0(Native Method)\n\tat java.io.FileInputStream.open(FileInputStream.java:195)\n\tat java.io.FileInputStream.<init>(FileInputStream.java:138)\n\tat java.io.FileInputStream.<init>(FileInputStream.java:93)\n\tat sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90)\n\tat sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188)\n\tat org.apache.tomcat.util.file.ConfigFileLoader.getInputStream(ConfigFileLoader.java:96)\n\tat org.apache.tomcat.util.net.SSLUtilBase.getStore(SSLUtilBase.java:132)\n\tat org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeystore(SSLHostConfigCertificate.java:204)\n\tat org.apache.tomcat.util.net.jsse.JSSEUtil.getKeyManagers(JSSEUtil.java:184)\n\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:114)\n\t... 20 more\n\t```\n","slug":"Best Practices of HTTPS&TLS","published":1,"updated":"2018-09-12T08:58:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hgp0006js6scytimc3d","content":"<h3 id=\"参考信息\"><a href=\"#参考信息\" class=\"headerlink\" title=\"参考信息\"></a>参考信息</h3><p><a href=\"https://developer.android.com/topic/security/best-practices#java\" target=\"_blank\" rel=\"noopener\">app security best prectices</a></p>\n<p><a href=\"https://deliciousbrains.com/https-locally-without-browser-privacy-errors/\" target=\"_blank\" rel=\"noopener\">https-locally-without-browser-privacy-errors</a></p>\n<h3 id=\"相关参考\"><a href=\"#相关参考\" class=\"headerlink\" title=\"相关参考\"></a>相关参考</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n<th>相关</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://developer.android.com/topic/security/best-practices#java\" target=\"_blank\" rel=\"noopener\">app security best prectices</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://developer.android.com/studio/publish/app-signing\" target=\"_blank\" rel=\"noopener\">app signing</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[Certificate Authority (CA)]</td>\n<td>CA 是数字证书授权机构</td>\n<td></td>\n</tr>\n<tr>\n<td>[certificate]</td>\n<td>数字证书</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://developer.android.com/reference/java/security/cert/CertificateFactory\" target=\"_blank\" rel=\"noopener\">CertificateFactory</a></td>\n<td>此类定义了用于从相关的编码中生成证书、证书路径 (CertPath) 和证书撤消列表 (CRL) 对象的 CertificateFactory 功能。Android只支持X.509类型的CertificateFactory <p>which is used to generate certificate, certification path (CertPath : a certificate chain) and certificate revocation list (CRL) objects from their encodings.</p></td>\n<td>A certificate factory for X.509 must return certificates that are an instance of java.security.cert.X509Certificate<br>and <br>CRLs that are an instance of java.security.cert.X509CRL</td>\n</tr>\n<tr>\n<td><a href=\"https://developer.android.com/reference/javax/net/ssl/TrustManager\" target=\"_blank\" rel=\"noopener\">TrustManager</a></td>\n<td>不应该信任所有证书，应该处理好以下三种情况：<p> 1. You’re communicating with a web server that has a certificate signed by a new or custom CA.<br> 2. That CA isn’t trusted by the device you’re using.<br> 3. You cannot use a <a href=\"https://developer.android.com/topic/security/best-practices#network-security-config\" target=\"_blank\" rel=\"noopener\">network security configuration</a>.</p><p>To learn more about how to complete these steps, see the discussion about handling an <a href=\"https://developer.android.com/training/articles/security-ssl.html#UnknownCa\" target=\"_blank\" rel=\"noopener\">unknown cerificate authority</a></p></td>\n<td><a href=\"https://developer.android.com/training/articles/security-ssl.html#UnknownCa\" target=\"_blank\" rel=\"noopener\">unknown cerificate authority</a></td>\n</tr>\n<tr>\n<td><a href=\"https://developer.android.com/reference/javax/net/ssl/TrustManagerFactory\" target=\"_blank\" rel=\"noopener\">TrustManagerFactory</a></td>\n<td>用于生成<a href=\"https://developer.android.com/reference/javax/net/ssl/TrustManager\" target=\"_blank\" rel=\"noopener\">TrustManager</a></td>\n<td></td>\n</tr>\n<tr>\n<td>[Keystore]</td>\n<td>包含了证书（Certificate）和公钥（public key）信息，是<a href=\"https://developer.android.com/reference/javax/net/ssl/TrustManager\" target=\"_blank\" rel=\"noopener\">TrustManager</a>验证的对象</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Eclipse-Tomcat-配置https支持\"><a href=\"#Eclipse-Tomcat-配置https支持\" class=\"headerlink\" title=\"Eclipse Tomcat 配置https支持\"></a>Eclipse Tomcat 配置https支持</h3><ol>\n<li><p>在conf目录下存放keystore,开发环境中keystore应该放在这里。</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>在server.xml中增加https connector。</p>\n <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">SSLEnabled</span>=<span class=\"string\">\"true\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">clientAuth</span>=<span class=\"string\">\"false\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">keystoreFile</span>=<span class=\"string\">\"conf/farubaba.keystore\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">keystorePass</span>=<span class=\"string\">\"123456\"</span> <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"200\"</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8443\"</span></span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">protocol</span>=<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">scheme</span>=<span class=\"string\">\"https\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">secure</span>=<span class=\"string\">\"true\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">sslProtocol</span>=<span class=\"string\">\"TLS\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Connector</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果keystore位置配置错误，tomcat找不到则会报错，需要在错误信息中的提示位置防止服务器的keystore。</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t严重: Failed to initialize connector [Connector[HTTP/<span class=\"number\">1.1</span>-<span class=\"number\">8443</span>]]</span><br><span class=\"line\">org.apache.catalina.LifecycleException: Failed to initialize component [Connector[HTTP/<span class=\"number\">1.1</span>-<span class=\"number\">8443</span>]]</span><br><span class=\"line\">\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:<span class=\"number\">112</span>)</span><br><span class=\"line\">\tat org.apache.catalina.core.StandardService.initInternal(StandardService.java:<span class=\"number\">549</span>)</span><br><span class=\"line\">\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:<span class=\"number\">107</span>)</span><br><span class=\"line\">\tat org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:<span class=\"number\">875</span>)</span><br><span class=\"line\">\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:<span class=\"number\">107</span>)</span><br><span class=\"line\">\tat org.apache.catalina.startup.Catalina.load(Catalina.java:<span class=\"number\">632</span>)</span><br><span class=\"line\">\tat org.apache.catalina.startup.Catalina.load(Catalina.java:<span class=\"number\">655</span>)</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class=\"number\">62</span>)</span><br><span class=\"line\">\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class=\"number\">43</span>)</span><br><span class=\"line\">\tat java.lang.reflect.Method.invoke(Method.java:<span class=\"number\">497</span>)</span><br><span class=\"line\">\tat org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:<span class=\"number\">309</span>)</span><br><span class=\"line\">\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:<span class=\"number\">492</span>)</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Protocol handler initialization failed</span><br><span class=\"line\">\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:<span class=\"number\">995</span>)</span><br><span class=\"line\">\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:<span class=\"number\">107</span>)</span><br><span class=\"line\">\t... <span class=\"number\">12</span> more</span><br><span class=\"line\">Caused by: java.lang.IllegalArgumentException: /environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/farubaba.keystore (No such file or directory)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:<span class=\"number\">116</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:<span class=\"number\">87</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:<span class=\"number\">225</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:<span class=\"number\">1086</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.init(AbstractJsseEndpoint.java:<span class=\"number\">268</span>)</span><br><span class=\"line\">\tat org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:<span class=\"number\">581</span>)</span><br><span class=\"line\">\tat org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:<span class=\"number\">68</span>)</span><br><span class=\"line\">\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:<span class=\"number\">993</span>)</span><br><span class=\"line\">\t... <span class=\"number\">13</span> more</span><br><span class=\"line\">Caused by: java.io.FileNotFoundException: /environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/farubaba.keystore (No such file or directory)</span><br><span class=\"line\">\tat java.io.FileInputStream.open0(Native Method)</span><br><span class=\"line\">\tat java.io.FileInputStream.open(FileInputStream.java:<span class=\"number\">195</span>)</span><br><span class=\"line\">\tat java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:<span class=\"number\">138</span>)</span><br><span class=\"line\">\tat java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:<span class=\"number\">93</span>)</span><br><span class=\"line\">\tat sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:<span class=\"number\">90</span>)</span><br><span class=\"line\">\tat sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:<span class=\"number\">188</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.file.ConfigFileLoader.getInputStream(ConfigFileLoader.java:<span class=\"number\">96</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.SSLUtilBase.getStore(SSLUtilBase.java:<span class=\"number\">132</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeystore(SSLHostConfigCertificate.java:<span class=\"number\">204</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.jsse.JSSEUtil.getKeyManagers(JSSEUtil.java:<span class=\"number\">184</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:<span class=\"number\">114</span>)</span><br><span class=\"line\">\t... <span class=\"number\">20</span> more</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"参考信息\"><a href=\"#参考信息\" class=\"headerlink\" title=\"参考信息\"></a>参考信息</h3><p><a href=\"https://developer.android.com/topic/security/best-practices#java\" target=\"_blank\" rel=\"noopener\">app security best prectices</a></p>\n<p><a href=\"https://deliciousbrains.com/https-locally-without-browser-privacy-errors/\" target=\"_blank\" rel=\"noopener\">https-locally-without-browser-privacy-errors</a></p>\n<h3 id=\"相关参考\"><a href=\"#相关参考\" class=\"headerlink\" title=\"相关参考\"></a>相关参考</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n<th>相关</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://developer.android.com/topic/security/best-practices#java\" target=\"_blank\" rel=\"noopener\">app security best prectices</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://developer.android.com/studio/publish/app-signing\" target=\"_blank\" rel=\"noopener\">app signing</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[Certificate Authority (CA)]</td>\n<td>CA 是数字证书授权机构</td>\n<td></td>\n</tr>\n<tr>\n<td>[certificate]</td>\n<td>数字证书</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://developer.android.com/reference/java/security/cert/CertificateFactory\" target=\"_blank\" rel=\"noopener\">CertificateFactory</a></td>\n<td>此类定义了用于从相关的编码中生成证书、证书路径 (CertPath) 和证书撤消列表 (CRL) 对象的 CertificateFactory 功能。Android只支持X.509类型的CertificateFactory <p>which is used to generate certificate, certification path (CertPath : a certificate chain) and certificate revocation list (CRL) objects from their encodings.</p></td>\n<td>A certificate factory for X.509 must return certificates that are an instance of java.security.cert.X509Certificate<br>and <br>CRLs that are an instance of java.security.cert.X509CRL</td>\n</tr>\n<tr>\n<td><a href=\"https://developer.android.com/reference/javax/net/ssl/TrustManager\" target=\"_blank\" rel=\"noopener\">TrustManager</a></td>\n<td>不应该信任所有证书，应该处理好以下三种情况：<p> 1. You’re communicating with a web server that has a certificate signed by a new or custom CA.<br> 2. That CA isn’t trusted by the device you’re using.<br> 3. You cannot use a <a href=\"https://developer.android.com/topic/security/best-practices#network-security-config\" target=\"_blank\" rel=\"noopener\">network security configuration</a>.</p><p>To learn more about how to complete these steps, see the discussion about handling an <a href=\"https://developer.android.com/training/articles/security-ssl.html#UnknownCa\" target=\"_blank\" rel=\"noopener\">unknown cerificate authority</a></p></td>\n<td><a href=\"https://developer.android.com/training/articles/security-ssl.html#UnknownCa\" target=\"_blank\" rel=\"noopener\">unknown cerificate authority</a></td>\n</tr>\n<tr>\n<td><a href=\"https://developer.android.com/reference/javax/net/ssl/TrustManagerFactory\" target=\"_blank\" rel=\"noopener\">TrustManagerFactory</a></td>\n<td>用于生成<a href=\"https://developer.android.com/reference/javax/net/ssl/TrustManager\" target=\"_blank\" rel=\"noopener\">TrustManager</a></td>\n<td></td>\n</tr>\n<tr>\n<td>[Keystore]</td>\n<td>包含了证书（Certificate）和公钥（public key）信息，是<a href=\"https://developer.android.com/reference/javax/net/ssl/TrustManager\" target=\"_blank\" rel=\"noopener\">TrustManager</a>验证的对象</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Eclipse-Tomcat-配置https支持\"><a href=\"#Eclipse-Tomcat-配置https支持\" class=\"headerlink\" title=\"Eclipse Tomcat 配置https支持\"></a>Eclipse Tomcat 配置https支持</h3><ol>\n<li><p>在conf目录下存放keystore,开发环境中keystore应该放在这里。</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>在server.xml中增加https connector。</p>\n <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">SSLEnabled</span>=<span class=\"string\">\"true\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">clientAuth</span>=<span class=\"string\">\"false\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">keystoreFile</span>=<span class=\"string\">\"conf/farubaba.keystore\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">keystorePass</span>=<span class=\"string\">\"123456\"</span> <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"200\"</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8443\"</span></span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">protocol</span>=<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">scheme</span>=<span class=\"string\">\"https\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">secure</span>=<span class=\"string\">\"true\"</span> </span></span><br><span class=\"line\"><span class=\"tag\"> <span class=\"attr\">sslProtocol</span>=<span class=\"string\">\"TLS\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Connector</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果keystore位置配置错误，tomcat找不到则会报错，需要在错误信息中的提示位置防止服务器的keystore。</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t严重: Failed to initialize connector [Connector[HTTP/<span class=\"number\">1.1</span>-<span class=\"number\">8443</span>]]</span><br><span class=\"line\">org.apache.catalina.LifecycleException: Failed to initialize component [Connector[HTTP/<span class=\"number\">1.1</span>-<span class=\"number\">8443</span>]]</span><br><span class=\"line\">\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:<span class=\"number\">112</span>)</span><br><span class=\"line\">\tat org.apache.catalina.core.StandardService.initInternal(StandardService.java:<span class=\"number\">549</span>)</span><br><span class=\"line\">\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:<span class=\"number\">107</span>)</span><br><span class=\"line\">\tat org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:<span class=\"number\">875</span>)</span><br><span class=\"line\">\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:<span class=\"number\">107</span>)</span><br><span class=\"line\">\tat org.apache.catalina.startup.Catalina.load(Catalina.java:<span class=\"number\">632</span>)</span><br><span class=\"line\">\tat org.apache.catalina.startup.Catalina.load(Catalina.java:<span class=\"number\">655</span>)</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class=\"line\">\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class=\"number\">62</span>)</span><br><span class=\"line\">\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class=\"number\">43</span>)</span><br><span class=\"line\">\tat java.lang.reflect.Method.invoke(Method.java:<span class=\"number\">497</span>)</span><br><span class=\"line\">\tat org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:<span class=\"number\">309</span>)</span><br><span class=\"line\">\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:<span class=\"number\">492</span>)</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Protocol handler initialization failed</span><br><span class=\"line\">\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:<span class=\"number\">995</span>)</span><br><span class=\"line\">\tat org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:<span class=\"number\">107</span>)</span><br><span class=\"line\">\t... <span class=\"number\">12</span> more</span><br><span class=\"line\">Caused by: java.lang.IllegalArgumentException: /environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/farubaba.keystore (No such file or directory)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:<span class=\"number\">116</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:<span class=\"number\">87</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:<span class=\"number\">225</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:<span class=\"number\">1086</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.init(AbstractJsseEndpoint.java:<span class=\"number\">268</span>)</span><br><span class=\"line\">\tat org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:<span class=\"number\">581</span>)</span><br><span class=\"line\">\tat org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:<span class=\"number\">68</span>)</span><br><span class=\"line\">\tat org.apache.catalina.connector.Connector.initInternal(Connector.java:<span class=\"number\">993</span>)</span><br><span class=\"line\">\t... <span class=\"number\">13</span> more</span><br><span class=\"line\">Caused by: java.io.FileNotFoundException: /environment/eclipse/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/conf/farubaba.keystore (No such file or directory)</span><br><span class=\"line\">\tat java.io.FileInputStream.open0(Native Method)</span><br><span class=\"line\">\tat java.io.FileInputStream.open(FileInputStream.java:<span class=\"number\">195</span>)</span><br><span class=\"line\">\tat java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:<span class=\"number\">138</span>)</span><br><span class=\"line\">\tat java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:<span class=\"number\">93</span>)</span><br><span class=\"line\">\tat sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:<span class=\"number\">90</span>)</span><br><span class=\"line\">\tat sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:<span class=\"number\">188</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.file.ConfigFileLoader.getInputStream(ConfigFileLoader.java:<span class=\"number\">96</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.SSLUtilBase.getStore(SSLUtilBase.java:<span class=\"number\">132</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.SSLHostConfigCertificate.getCertificateKeystore(SSLHostConfigCertificate.java:<span class=\"number\">204</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.jsse.JSSEUtil.getKeyManagers(JSSEUtil.java:<span class=\"number\">184</span>)</span><br><span class=\"line\">\tat org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:<span class=\"number\">114</span>)</span><br><span class=\"line\">\t... <span class=\"number\">20</span> more</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"HTTPS及SSL/TLS概述","date":"2018-09-03T09:30:28.000Z","summery":"理解SSL/TLS加密套件如何配置HTTP协议实现完全的加密传输协议HTTPS。并了解整个HTTP协议握手和传输阶段的各个流程，以及流程中涉及到的各种专业术语。例如：SSL/TLS、Cipher Suites、Cipher Suite、对称加密、非对称加密、随机数、证书Certificate、pre Master Secret、主秘钥Master Secret、会话秘钥、CA、Public key、Private key等等。","_content":"\n### 参考信息\n\n1. 快速理解Http及Https相关基础信息在Java中的相关术语：[Apache Http Client Tutorial]\n2. [为什么Android中证书不能使用JKS，而只能使用BKS] 和 [android-trusting-ssl-certificates]\n3. [Android使用BKS证书详细说明]\n2. [Android下Https使用自定义证书]\n3. <b>[Android Developer: android-security-ssl Best Practice]</b>\n4. [Android Webview SSL 自签名安全校验解决方案]\n2. JDK中相关的package\n\t\n\t>java.net\n\tjavax.net\n\tjavax.net.ssl\n\tjavax.security\n\tjavax.security.cert\n\t\n### 一、SSL/TLS通信模型概要\n\n\n<div align=\"center\">\n\t<img src=\"/images/10、SSL_TSL通信模型概要.png\" width=\"90%\" />\n</div>\n\n### 二、SSL/TLS通信模型时序图简要说明\n\n\n<div align=\"center\">\n\t<img src=\"/images/11、SSL_TSL通信模型时序图.png\" width=\"90%\" />\n</div>\n\n### 三、javax.net.ssl.HttpsURLConnection分析\n\n<div align=\"center\">\n\t<img src=\"/images/12、javax.net.ssl.HttpsUrlConnection方法分析.png\" width=\"90%\" />\n</div>\n\n构成HttpsURLConnection的关键对象有：\n\n|名称|作用|示例|\n|----|----|----|\n|SSLSocketFactory|创建SSLSocket对象，用于建立SSLSocket连接||\n|CipherSuite|密码套件，用于https协议握手，传输过程中的加解密套件。“密码套件”是给定的 SSL 连接所使用的加密算法组合，在协商过程中，两个端点必须对可用于双方环境的密码套件达成一致。如果不存在这种公共的套件，就不能建立 SSL 连接，也不能交换数据。||\n|HostnameVerifier|javax.net.ssl.HostnameVerifier <br>此类是用于主机名验证的基接口。在握手期间，如果 URL 的主机名和服务器的标识主机名不匹配，则验证机制可以回调此接口的实现程序来确定是否应该允许此连接。<br><b>策略可以是基于证书的或依赖于其他验证方案。</b><br>当验证 URL 主机名使用的默认规则失败时使用这些回调||\n|Certificate|类java.security.cert.Certificate<br>管理各种身份证书的抽象类，身份证书是一个主体与由另一个主体所担保的公钥之间的绑定关系。（一个主体表示一种实体，如个体用户、一个用户组或一家公司）。此类是具有不同格式但是很常用的证书的抽象。例如，不同的证书类型（如 X.509 和 PGP）共享通用的证书功能（如编码和验证）和某些信息类型（如公钥）。<br>虽然 X.509、PGP 和 SDSI 证书包含不同的信息集，并且它们以不同的方式存储和获取信息，但都可以通过继承 Certificate 类来实现它们||\n|Certificate[]|证书链，包括服务器证书链和客户端证书链||\n|Principal|证书实体，及证书拥有者和签发者。能代表多个实体:<br>1）证书拥有者 getSubjectX500Principal()<br>2）证书签发者 getIssuerX500Principal()<br>参考：java.security.cert.X509Certificate中上述方法描述 | 无|\n\n\n### 四、javax.net.ssl.SSLSocket分析\n\n<div align=\"center\">\n\t<img src=\"/images/13、javax.net.ssl.SSLSocket分析.png\" width=\"90%\" />\n</div>\n\n构建SSLSocket类的关键对象如下：\n\n|名称|作用|示例|\n|----|----|----|\n|SSLContext|此类的实例表示安全套接字协议的实现，它充当用于安全套接字工厂(SSLSocketFactory)或 SSLEngine 的工厂。用可选的一组密钥和信任管理器及安全随机字节源初始化此类。||\n|SSLSocket||无|\n| SSLSession|||\n|SSLParameters|||\n\n### 五、相关知识\n\n|术语|描述|示例|\n|----|----|----|\n|SSL/TLS|||\n|Cipher Suite|||\n|对称加密|||\n|非对称加密|||\n|BouncyCastle|||\n|Certificate|||\n|CA|||\n|crt|||\n|cer|||\n|bks证书|android 平台支持bks格式证书文件|生成bks文件命令：<br> keytool -importcert -v -trustcacerts -alias certfarubaba -file server.crt -keystore farubaba.bks -storetype BKS -providerclass org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath ./bcprov-jdk15on-146.jar -storepass 123456 其中server.crt是原格式证书 farubaba.bks是目标生成证书 123456是bks格式文件证书密码|\n|Keystore|||\n|TrustStore|||\n|keytool|[Java 安全套接字编程以及 keytool 使用最佳实践]||\n|openssl|||\n|主密钥|||\n|会话秘钥|||\n|HostnameVerify|||\n|SSLSocketFactory|||\n|X.509|||\n|TrustManger|||\n\n\n[Apache Http Client Tutorial]:http://hc.apache.org/httpcomponents-client-4.5.x/tutorial/html/index.html\n[Java 安全套接字编程以及 keytool 使用最佳实践]:https://www.ibm.com/developerworks/cn/java/j-lo-socketkeytool/index.html?ca=drs\n[Android下Https使用自定义证书]:https://blog.csdn.net/raptor/article/details/18898937\n[为什么Android中证书不能使用JKS，而只能使用BKS]:https://stackoverflow.com/questions/11117486/wrong-version-of-keystore-on-android-call\n[android-trusting-ssl-certificates]:http://blog.crazybob.org/2010/02/android-trusting-ssl-certificates.html\n[Android使用BKS证书详细说明]:http://nelenkov.blogspot.com/2011/12/using-custom-certificate-trust-store-on.html\n[Android Developer: android-security-ssl Best Practice]:https://developer.android.com/training/articles/security-ssl\n[Android Webview SSL 自签名安全校验解决方案]:https://www.cnblogs.com/liyiran/p/7011317.html","source":"_posts/HTTPS及SSL-TLS概述.md","raw":"---\ntitle: HTTPS及SSL/TLS概述\ndate: 2018-09-03 17:30:28\ntags: [SSL/TLS,Cipher Suites,对称加密,非对称加密,随机数,证书,Certificate,pre Master Secret,Master Secret,会话秘钥,CA,Public key,Private key]\nsummery: 理解SSL/TLS加密套件如何配置HTTP协议实现完全的加密传输协议HTTPS。并了解整个HTTP协议握手和传输阶段的各个流程，以及流程中涉及到的各种专业术语。例如：SSL/TLS、Cipher Suites、Cipher Suite、对称加密、非对称加密、随机数、证书Certificate、pre Master Secret、主秘钥Master Secret、会话秘钥、CA、Public key、Private key等等。\n---\n\n### 参考信息\n\n1. 快速理解Http及Https相关基础信息在Java中的相关术语：[Apache Http Client Tutorial]\n2. [为什么Android中证书不能使用JKS，而只能使用BKS] 和 [android-trusting-ssl-certificates]\n3. [Android使用BKS证书详细说明]\n2. [Android下Https使用自定义证书]\n3. <b>[Android Developer: android-security-ssl Best Practice]</b>\n4. [Android Webview SSL 自签名安全校验解决方案]\n2. JDK中相关的package\n\t\n\t>java.net\n\tjavax.net\n\tjavax.net.ssl\n\tjavax.security\n\tjavax.security.cert\n\t\n### 一、SSL/TLS通信模型概要\n\n\n<div align=\"center\">\n\t<img src=\"/images/10、SSL_TSL通信模型概要.png\" width=\"90%\" />\n</div>\n\n### 二、SSL/TLS通信模型时序图简要说明\n\n\n<div align=\"center\">\n\t<img src=\"/images/11、SSL_TSL通信模型时序图.png\" width=\"90%\" />\n</div>\n\n### 三、javax.net.ssl.HttpsURLConnection分析\n\n<div align=\"center\">\n\t<img src=\"/images/12、javax.net.ssl.HttpsUrlConnection方法分析.png\" width=\"90%\" />\n</div>\n\n构成HttpsURLConnection的关键对象有：\n\n|名称|作用|示例|\n|----|----|----|\n|SSLSocketFactory|创建SSLSocket对象，用于建立SSLSocket连接||\n|CipherSuite|密码套件，用于https协议握手，传输过程中的加解密套件。“密码套件”是给定的 SSL 连接所使用的加密算法组合，在协商过程中，两个端点必须对可用于双方环境的密码套件达成一致。如果不存在这种公共的套件，就不能建立 SSL 连接，也不能交换数据。||\n|HostnameVerifier|javax.net.ssl.HostnameVerifier <br>此类是用于主机名验证的基接口。在握手期间，如果 URL 的主机名和服务器的标识主机名不匹配，则验证机制可以回调此接口的实现程序来确定是否应该允许此连接。<br><b>策略可以是基于证书的或依赖于其他验证方案。</b><br>当验证 URL 主机名使用的默认规则失败时使用这些回调||\n|Certificate|类java.security.cert.Certificate<br>管理各种身份证书的抽象类，身份证书是一个主体与由另一个主体所担保的公钥之间的绑定关系。（一个主体表示一种实体，如个体用户、一个用户组或一家公司）。此类是具有不同格式但是很常用的证书的抽象。例如，不同的证书类型（如 X.509 和 PGP）共享通用的证书功能（如编码和验证）和某些信息类型（如公钥）。<br>虽然 X.509、PGP 和 SDSI 证书包含不同的信息集，并且它们以不同的方式存储和获取信息，但都可以通过继承 Certificate 类来实现它们||\n|Certificate[]|证书链，包括服务器证书链和客户端证书链||\n|Principal|证书实体，及证书拥有者和签发者。能代表多个实体:<br>1）证书拥有者 getSubjectX500Principal()<br>2）证书签发者 getIssuerX500Principal()<br>参考：java.security.cert.X509Certificate中上述方法描述 | 无|\n\n\n### 四、javax.net.ssl.SSLSocket分析\n\n<div align=\"center\">\n\t<img src=\"/images/13、javax.net.ssl.SSLSocket分析.png\" width=\"90%\" />\n</div>\n\n构建SSLSocket类的关键对象如下：\n\n|名称|作用|示例|\n|----|----|----|\n|SSLContext|此类的实例表示安全套接字协议的实现，它充当用于安全套接字工厂(SSLSocketFactory)或 SSLEngine 的工厂。用可选的一组密钥和信任管理器及安全随机字节源初始化此类。||\n|SSLSocket||无|\n| SSLSession|||\n|SSLParameters|||\n\n### 五、相关知识\n\n|术语|描述|示例|\n|----|----|----|\n|SSL/TLS|||\n|Cipher Suite|||\n|对称加密|||\n|非对称加密|||\n|BouncyCastle|||\n|Certificate|||\n|CA|||\n|crt|||\n|cer|||\n|bks证书|android 平台支持bks格式证书文件|生成bks文件命令：<br> keytool -importcert -v -trustcacerts -alias certfarubaba -file server.crt -keystore farubaba.bks -storetype BKS -providerclass org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath ./bcprov-jdk15on-146.jar -storepass 123456 其中server.crt是原格式证书 farubaba.bks是目标生成证书 123456是bks格式文件证书密码|\n|Keystore|||\n|TrustStore|||\n|keytool|[Java 安全套接字编程以及 keytool 使用最佳实践]||\n|openssl|||\n|主密钥|||\n|会话秘钥|||\n|HostnameVerify|||\n|SSLSocketFactory|||\n|X.509|||\n|TrustManger|||\n\n\n[Apache Http Client Tutorial]:http://hc.apache.org/httpcomponents-client-4.5.x/tutorial/html/index.html\n[Java 安全套接字编程以及 keytool 使用最佳实践]:https://www.ibm.com/developerworks/cn/java/j-lo-socketkeytool/index.html?ca=drs\n[Android下Https使用自定义证书]:https://blog.csdn.net/raptor/article/details/18898937\n[为什么Android中证书不能使用JKS，而只能使用BKS]:https://stackoverflow.com/questions/11117486/wrong-version-of-keystore-on-android-call\n[android-trusting-ssl-certificates]:http://blog.crazybob.org/2010/02/android-trusting-ssl-certificates.html\n[Android使用BKS证书详细说明]:http://nelenkov.blogspot.com/2011/12/using-custom-certificate-trust-store-on.html\n[Android Developer: android-security-ssl Best Practice]:https://developer.android.com/training/articles/security-ssl\n[Android Webview SSL 自签名安全校验解决方案]:https://www.cnblogs.com/liyiran/p/7011317.html","slug":"HTTPS及SSL-TLS概述","published":1,"updated":"2018-09-12T17:14:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hgq0008js6sq4fp3srw","content":"<h3 id=\"参考信息\"><a href=\"#参考信息\" class=\"headerlink\" title=\"参考信息\"></a>参考信息</h3><ol>\n<li>快速理解Http及Https相关基础信息在Java中的相关术语：<a href=\"http://hc.apache.org/httpcomponents-client-4.5.x/tutorial/html/index.html\" target=\"_blank\" rel=\"noopener\">Apache Http Client Tutorial</a></li>\n<li><a href=\"https://stackoverflow.com/questions/11117486/wrong-version-of-keystore-on-android-call\" target=\"_blank\" rel=\"noopener\">为什么Android中证书不能使用JKS，而只能使用BKS</a> 和 <a href=\"http://blog.crazybob.org/2010/02/android-trusting-ssl-certificates.html\" target=\"_blank\" rel=\"noopener\">android-trusting-ssl-certificates</a></li>\n<li><a href=\"http://nelenkov.blogspot.com/2011/12/using-custom-certificate-trust-store-on.html\" target=\"_blank\" rel=\"noopener\">Android使用BKS证书详细说明</a></li>\n<li><a href=\"https://blog.csdn.net/raptor/article/details/18898937\" target=\"_blank\" rel=\"noopener\">Android下Https使用自定义证书</a></li>\n<li><b><a href=\"https://developer.android.com/training/articles/security-ssl\" target=\"_blank\" rel=\"noopener\">Android Developer: android-security-ssl Best Practice</a></b></li>\n<li><a href=\"https://www.cnblogs.com/liyiran/p/7011317.html\" target=\"_blank\" rel=\"noopener\">Android Webview SSL 自签名安全校验解决方案</a></li>\n<li><p>JDK中相关的package</p>\n<blockquote>\n<p>java.net<br> javax.net<br> javax.net.ssl<br> javax.security<br> javax.security.cert</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"一、SSL-TLS通信模型概要\"><a href=\"#一、SSL-TLS通信模型概要\" class=\"headerlink\" title=\"一、SSL/TLS通信模型概要\"></a>一、SSL/TLS通信模型概要</h3><div align=\"center\"><br>    <img src=\"/images/10、SSL_TSL通信模型概要.png\" width=\"90%\"><br></div>\n\n<h3 id=\"二、SSL-TLS通信模型时序图简要说明\"><a href=\"#二、SSL-TLS通信模型时序图简要说明\" class=\"headerlink\" title=\"二、SSL/TLS通信模型时序图简要说明\"></a>二、SSL/TLS通信模型时序图简要说明</h3><div align=\"center\"><br>    <img src=\"/images/11、SSL_TSL通信模型时序图.png\" width=\"90%\"><br></div>\n\n<h3 id=\"三、javax-net-ssl-HttpsURLConnection分析\"><a href=\"#三、javax-net-ssl-HttpsURLConnection分析\" class=\"headerlink\" title=\"三、javax.net.ssl.HttpsURLConnection分析\"></a>三、javax.net.ssl.HttpsURLConnection分析</h3><div align=\"center\"><br>    <img src=\"/images/12、javax.net.ssl.HttpsUrlConnection方法分析.png\" width=\"90%\"><br></div>\n\n<p>构成HttpsURLConnection的关键对象有：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SSLSocketFactory</td>\n<td>创建SSLSocket对象，用于建立SSLSocket连接</td>\n<td></td>\n</tr>\n<tr>\n<td>CipherSuite</td>\n<td>密码套件，用于https协议握手，传输过程中的加解密套件。“密码套件”是给定的 SSL 连接所使用的加密算法组合，在协商过程中，两个端点必须对可用于双方环境的密码套件达成一致。如果不存在这种公共的套件，就不能建立 SSL 连接，也不能交换数据。</td>\n<td></td>\n</tr>\n<tr>\n<td>HostnameVerifier</td>\n<td>javax.net.ssl.HostnameVerifier <br>此类是用于主机名验证的基接口。在握手期间，如果 URL 的主机名和服务器的标识主机名不匹配，则验证机制可以回调此接口的实现程序来确定是否应该允许此连接。<br><b>策略可以是基于证书的或依赖于其他验证方案。</b><br>当验证 URL 主机名使用的默认规则失败时使用这些回调</td>\n<td></td>\n</tr>\n<tr>\n<td>Certificate</td>\n<td>类java.security.cert.Certificate<br>管理各种身份证书的抽象类，身份证书是一个主体与由另一个主体所担保的公钥之间的绑定关系。（一个主体表示一种实体，如个体用户、一个用户组或一家公司）。此类是具有不同格式但是很常用的证书的抽象。例如，不同的证书类型（如 X.509 和 PGP）共享通用的证书功能（如编码和验证）和某些信息类型（如公钥）。<br>虽然 X.509、PGP 和 SDSI 证书包含不同的信息集，并且它们以不同的方式存储和获取信息，但都可以通过继承 Certificate 类来实现它们</td>\n<td></td>\n</tr>\n<tr>\n<td>Certificate[]</td>\n<td>证书链，包括服务器证书链和客户端证书链</td>\n<td></td>\n</tr>\n<tr>\n<td>Principal</td>\n<td>证书实体，及证书拥有者和签发者。能代表多个实体:<br>1）证书拥有者 getSubjectX500Principal()<br>2）证书签发者 getIssuerX500Principal()<br>参考：java.security.cert.X509Certificate中上述方法描述</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"四、javax-net-ssl-SSLSocket分析\"><a href=\"#四、javax-net-ssl-SSLSocket分析\" class=\"headerlink\" title=\"四、javax.net.ssl.SSLSocket分析\"></a>四、javax.net.ssl.SSLSocket分析</h3><div align=\"center\"><br>    <img src=\"/images/13、javax.net.ssl.SSLSocket分析.png\" width=\"90%\"><br></div>\n\n<p>构建SSLSocket类的关键对象如下：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SSLContext</td>\n<td>此类的实例表示安全套接字协议的实现，它充当用于安全套接字工厂(SSLSocketFactory)或 SSLEngine 的工厂。用可选的一组密钥和信任管理器及安全随机字节源初始化此类。</td>\n<td></td>\n</tr>\n<tr>\n<td>SSLSocket</td>\n<td></td>\n<td>无</td>\n</tr>\n<tr>\n<td>SSLSession</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SSLParameters</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"五、相关知识\"><a href=\"#五、相关知识\" class=\"headerlink\" title=\"五、相关知识\"></a>五、相关知识</h3><table>\n<thead>\n<tr>\n<th>术语</th>\n<th>描述</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SSL/TLS</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Cipher Suite</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>对称加密</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>非对称加密</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>BouncyCastle</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Certificate</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>CA</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>crt</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>cer</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bks证书</td>\n<td>android 平台支持bks格式证书文件</td>\n<td>生成bks文件命令：<br> keytool -importcert -v -trustcacerts -alias certfarubaba -file server.crt -keystore farubaba.bks -storetype BKS -providerclass org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath ./bcprov-jdk15on-146.jar -storepass 123456 其中server.crt是原格式证书 farubaba.bks是目标生成证书 123456是bks格式文件证书密码</td>\n</tr>\n<tr>\n<td>Keystore</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>TrustStore</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>keytool</td>\n<td><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-socketkeytool/index.html?ca=drs\" target=\"_blank\" rel=\"noopener\">Java 安全套接字编程以及 keytool 使用最佳实践</a></td>\n<td></td>\n</tr>\n<tr>\n<td>openssl</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>主密钥</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>会话秘钥</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>HostnameVerify</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SSLSocketFactory</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>X.509</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>TrustManger</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"参考信息\"><a href=\"#参考信息\" class=\"headerlink\" title=\"参考信息\"></a>参考信息</h3><ol>\n<li>快速理解Http及Https相关基础信息在Java中的相关术语：<a href=\"http://hc.apache.org/httpcomponents-client-4.5.x/tutorial/html/index.html\" target=\"_blank\" rel=\"noopener\">Apache Http Client Tutorial</a></li>\n<li><a href=\"https://stackoverflow.com/questions/11117486/wrong-version-of-keystore-on-android-call\" target=\"_blank\" rel=\"noopener\">为什么Android中证书不能使用JKS，而只能使用BKS</a> 和 <a href=\"http://blog.crazybob.org/2010/02/android-trusting-ssl-certificates.html\" target=\"_blank\" rel=\"noopener\">android-trusting-ssl-certificates</a></li>\n<li><a href=\"http://nelenkov.blogspot.com/2011/12/using-custom-certificate-trust-store-on.html\" target=\"_blank\" rel=\"noopener\">Android使用BKS证书详细说明</a></li>\n<li><a href=\"https://blog.csdn.net/raptor/article/details/18898937\" target=\"_blank\" rel=\"noopener\">Android下Https使用自定义证书</a></li>\n<li><b><a href=\"https://developer.android.com/training/articles/security-ssl\" target=\"_blank\" rel=\"noopener\">Android Developer: android-security-ssl Best Practice</a></b></li>\n<li><a href=\"https://www.cnblogs.com/liyiran/p/7011317.html\" target=\"_blank\" rel=\"noopener\">Android Webview SSL 自签名安全校验解决方案</a></li>\n<li><p>JDK中相关的package</p>\n<blockquote>\n<p>java.net<br> javax.net<br> javax.net.ssl<br> javax.security<br> javax.security.cert</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"一、SSL-TLS通信模型概要\"><a href=\"#一、SSL-TLS通信模型概要\" class=\"headerlink\" title=\"一、SSL/TLS通信模型概要\"></a>一、SSL/TLS通信模型概要</h3><div align=\"center\"><br>    <img src=\"/images/10、SSL_TSL通信模型概要.png\" width=\"90%\"><br></div>\n\n<h3 id=\"二、SSL-TLS通信模型时序图简要说明\"><a href=\"#二、SSL-TLS通信模型时序图简要说明\" class=\"headerlink\" title=\"二、SSL/TLS通信模型时序图简要说明\"></a>二、SSL/TLS通信模型时序图简要说明</h3><div align=\"center\"><br>    <img src=\"/images/11、SSL_TSL通信模型时序图.png\" width=\"90%\"><br></div>\n\n<h3 id=\"三、javax-net-ssl-HttpsURLConnection分析\"><a href=\"#三、javax-net-ssl-HttpsURLConnection分析\" class=\"headerlink\" title=\"三、javax.net.ssl.HttpsURLConnection分析\"></a>三、javax.net.ssl.HttpsURLConnection分析</h3><div align=\"center\"><br>    <img src=\"/images/12、javax.net.ssl.HttpsUrlConnection方法分析.png\" width=\"90%\"><br></div>\n\n<p>构成HttpsURLConnection的关键对象有：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SSLSocketFactory</td>\n<td>创建SSLSocket对象，用于建立SSLSocket连接</td>\n<td></td>\n</tr>\n<tr>\n<td>CipherSuite</td>\n<td>密码套件，用于https协议握手，传输过程中的加解密套件。“密码套件”是给定的 SSL 连接所使用的加密算法组合，在协商过程中，两个端点必须对可用于双方环境的密码套件达成一致。如果不存在这种公共的套件，就不能建立 SSL 连接，也不能交换数据。</td>\n<td></td>\n</tr>\n<tr>\n<td>HostnameVerifier</td>\n<td>javax.net.ssl.HostnameVerifier <br>此类是用于主机名验证的基接口。在握手期间，如果 URL 的主机名和服务器的标识主机名不匹配，则验证机制可以回调此接口的实现程序来确定是否应该允许此连接。<br><b>策略可以是基于证书的或依赖于其他验证方案。</b><br>当验证 URL 主机名使用的默认规则失败时使用这些回调</td>\n<td></td>\n</tr>\n<tr>\n<td>Certificate</td>\n<td>类java.security.cert.Certificate<br>管理各种身份证书的抽象类，身份证书是一个主体与由另一个主体所担保的公钥之间的绑定关系。（一个主体表示一种实体，如个体用户、一个用户组或一家公司）。此类是具有不同格式但是很常用的证书的抽象。例如，不同的证书类型（如 X.509 和 PGP）共享通用的证书功能（如编码和验证）和某些信息类型（如公钥）。<br>虽然 X.509、PGP 和 SDSI 证书包含不同的信息集，并且它们以不同的方式存储和获取信息，但都可以通过继承 Certificate 类来实现它们</td>\n<td></td>\n</tr>\n<tr>\n<td>Certificate[]</td>\n<td>证书链，包括服务器证书链和客户端证书链</td>\n<td></td>\n</tr>\n<tr>\n<td>Principal</td>\n<td>证书实体，及证书拥有者和签发者。能代表多个实体:<br>1）证书拥有者 getSubjectX500Principal()<br>2）证书签发者 getIssuerX500Principal()<br>参考：java.security.cert.X509Certificate中上述方法描述</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"四、javax-net-ssl-SSLSocket分析\"><a href=\"#四、javax-net-ssl-SSLSocket分析\" class=\"headerlink\" title=\"四、javax.net.ssl.SSLSocket分析\"></a>四、javax.net.ssl.SSLSocket分析</h3><div align=\"center\"><br>    <img src=\"/images/13、javax.net.ssl.SSLSocket分析.png\" width=\"90%\"><br></div>\n\n<p>构建SSLSocket类的关键对象如下：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SSLContext</td>\n<td>此类的实例表示安全套接字协议的实现，它充当用于安全套接字工厂(SSLSocketFactory)或 SSLEngine 的工厂。用可选的一组密钥和信任管理器及安全随机字节源初始化此类。</td>\n<td></td>\n</tr>\n<tr>\n<td>SSLSocket</td>\n<td></td>\n<td>无</td>\n</tr>\n<tr>\n<td>SSLSession</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SSLParameters</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"五、相关知识\"><a href=\"#五、相关知识\" class=\"headerlink\" title=\"五、相关知识\"></a>五、相关知识</h3><table>\n<thead>\n<tr>\n<th>术语</th>\n<th>描述</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SSL/TLS</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Cipher Suite</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>对称加密</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>非对称加密</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>BouncyCastle</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Certificate</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>CA</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>crt</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>cer</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bks证书</td>\n<td>android 平台支持bks格式证书文件</td>\n<td>生成bks文件命令：<br> keytool -importcert -v -trustcacerts -alias certfarubaba -file server.crt -keystore farubaba.bks -storetype BKS -providerclass org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath ./bcprov-jdk15on-146.jar -storepass 123456 其中server.crt是原格式证书 farubaba.bks是目标生成证书 123456是bks格式文件证书密码</td>\n</tr>\n<tr>\n<td>Keystore</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>TrustStore</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>keytool</td>\n<td><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-socketkeytool/index.html?ca=drs\" target=\"_blank\" rel=\"noopener\">Java 安全套接字编程以及 keytool 使用最佳实践</a></td>\n<td></td>\n</tr>\n<tr>\n<td>openssl</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>主密钥</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>会话秘钥</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>HostnameVerify</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SSLSocketFactory</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>X.509</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>TrustManger</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Kotlin入门","date":"2018-07-24T06:27:20.000Z","summery":"Kotlin入门笔记，学习摘要","_content":"\n### 官方入口\n\n[官方网站]\n\n[官方入门Demo]\n\n[官方网站]:https://kotlinlang.org/\n[官方入门Demo]:https://try.kotlinlang.org/#/Examples/Hello,%20world!/Simplest%20version/Simplest%20version.kt\n","source":"_posts/Kotlin入门笔记.md","raw":"---\ntitle: Kotlin入门\ndate: 2018-07-24 14:27:20\ntags: [Kotlin]\nsummery: Kotlin入门笔记，学习摘要\n\n---\n\n### 官方入口\n\n[官方网站]\n\n[官方入门Demo]\n\n[官方网站]:https://kotlinlang.org/\n[官方入门Demo]:https://try.kotlinlang.org/#/Examples/Hello,%20world!/Simplest%20version/Simplest%20version.kt\n","slug":"Kotlin入门笔记","published":1,"updated":"2018-07-24T06:42:51.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hgs0009js6sx1bh6tfm","content":"<h3 id=\"官方入口\"><a href=\"#官方入口\" class=\"headerlink\" title=\"官方入口\"></a>官方入口</h3><p><a href=\"https://kotlinlang.org/\" target=\"_blank\" rel=\"noopener\">官方网站</a></p>\n<p><a href=\"https://try.kotlinlang.org/#/Examples/Hello,%20world!/Simplest%20version/Simplest%20version.kt\" target=\"_blank\" rel=\"noopener\">官方入门Demo</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"官方入口\"><a href=\"#官方入口\" class=\"headerlink\" title=\"官方入口\"></a>官方入口</h3><p><a href=\"https://kotlinlang.org/\" target=\"_blank\" rel=\"noopener\">官方网站</a></p>\n<p><a href=\"https://try.kotlinlang.org/#/Examples/Hello,%20world!/Simplest%20version/Simplest%20version.kt\" target=\"_blank\" rel=\"noopener\">官方入门Demo</a></p>\n"},{"title":"How To Create Github Pages with Hexo 未完待续","date":"2018-07-10T17:13:40.000Z","summery":"使用github pages  +  Hexo themes快速搭建简洁漂亮的个人blog，绑定域名，以及自定义模板。","_content":"\n#### Guide\n\n#### 全面官方文档\n\n[github-help-all]\n\n[github-pages-guide]\n\n[jekyll-guide]\n\n[customizing-github-pages]\n\n##### Hexo命令 Quick Start\n\n##### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n##### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n##### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n##### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n##### Add Theme \"next\"\n\n\tgit clone --branch v5.1.2 https://github.com/iissnan/hexo-theme-next themes/next\n\nmore info: [hexo-theme-next]\n\n##### Add Theme \"even\"\n\n\tgit clone https://github.com/ahonn/hexo-theme-even themes/even\n\t\n##### Add Comments\n\n[add comments]\n\n##### Highlight 高亮显示code代码\n使用[highlightjs]来替换掉hexo自带的highlight功能\n[highlightjs]\n\n##### 设置Markdown文件中图片的位置和大小\n\n[Resize-Image]\n\n##### 设置markdown表格的宽度\n\n[markdown 表格宽度设置]\n\n[markdown 单元格宽度]\n\n##### 在Markdown中使用css style\n\n```css\n<style>\n\ntable th{\n\tbackground: #ddd\n}\n\ntable th:nth-child(1) {\n    width: 100px;\n}\n\ntable th:nth-child(2) {\n    width: 150px;\n}\n\ntable th:nth-child(3) {\n    width: 50px;\n}\n\ntable th:nth-child(4) {\n    width: 160px;\n}\n</style>\n```\n\n##### 在markdown中使用javascript [需要将javascript代码放在文档末尾]\n\n```javascript\n<script>\n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//设置文档中的第一个th的宽度\n           myth.style.width = \"80px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"70px\";\n       }\n       if(i==3){\n           myth.style.width = \"150px\";\n       }       \n   }\n   //alert(document.getElementsByTagName(\"table\").length);\n   \t\n</script>\n```\n#### 超链接\n\n[github-help-all]:https://help.github.com/\n[github-pages-guide]:https://help.github.com/categories/github-pages-basics/\n[jekyll-guide]:https://jekyllrb.com/docs/home/\n[customizing-github-pages]:https://help.github.com/categories/customizing-github-pages/\n[hexo-theme-next]:https://github.com/iissnan/hexo-theme-next\n[add comments]:https://widgetpack.com/\n[highlightjs]:https://highlightjs.org/\n[Resize-Image]:https://support.typora.io/Resize-Image/\n[markdown 表格宽度设置]:https://blog.csdn.net/maxsky/article/details/54666998\n[markdown 单元格宽度]:https://blog.csdn.net/liuyan19891230/article/details/52839788\n\n\n<script>\n   \n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"80px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"70px\";\n       }\n       if(i==3){\n           myth.style.width = \"150px\";\n       }       \n   }\n   //alert(document.getElementsByTagName(\"table\").length);\n   \t\n</script>","source":"_posts/How-To-Create-Github-Pages-with-Hexo.md","raw":"---\ntitle: How To Create Github Pages with Hexo 未完待续\ndate: 2018-07-11 01:13:40\ntags:\nsummery: 使用github pages  +  Hexo themes快速搭建简洁漂亮的个人blog，绑定域名，以及自定义模板。\n---\n\n#### Guide\n\n#### 全面官方文档\n\n[github-help-all]\n\n[github-pages-guide]\n\n[jekyll-guide]\n\n[customizing-github-pages]\n\n##### Hexo命令 Quick Start\n\n##### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n##### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n##### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n##### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n##### Add Theme \"next\"\n\n\tgit clone --branch v5.1.2 https://github.com/iissnan/hexo-theme-next themes/next\n\nmore info: [hexo-theme-next]\n\n##### Add Theme \"even\"\n\n\tgit clone https://github.com/ahonn/hexo-theme-even themes/even\n\t\n##### Add Comments\n\n[add comments]\n\n##### Highlight 高亮显示code代码\n使用[highlightjs]来替换掉hexo自带的highlight功能\n[highlightjs]\n\n##### 设置Markdown文件中图片的位置和大小\n\n[Resize-Image]\n\n##### 设置markdown表格的宽度\n\n[markdown 表格宽度设置]\n\n[markdown 单元格宽度]\n\n##### 在Markdown中使用css style\n\n```css\n<style>\n\ntable th{\n\tbackground: #ddd\n}\n\ntable th:nth-child(1) {\n    width: 100px;\n}\n\ntable th:nth-child(2) {\n    width: 150px;\n}\n\ntable th:nth-child(3) {\n    width: 50px;\n}\n\ntable th:nth-child(4) {\n    width: 160px;\n}\n</style>\n```\n\n##### 在markdown中使用javascript [需要将javascript代码放在文档末尾]\n\n```javascript\n<script>\n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//设置文档中的第一个th的宽度\n           myth.style.width = \"80px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"70px\";\n       }\n       if(i==3){\n           myth.style.width = \"150px\";\n       }       \n   }\n   //alert(document.getElementsByTagName(\"table\").length);\n   \t\n</script>\n```\n#### 超链接\n\n[github-help-all]:https://help.github.com/\n[github-pages-guide]:https://help.github.com/categories/github-pages-basics/\n[jekyll-guide]:https://jekyllrb.com/docs/home/\n[customizing-github-pages]:https://help.github.com/categories/customizing-github-pages/\n[hexo-theme-next]:https://github.com/iissnan/hexo-theme-next\n[add comments]:https://widgetpack.com/\n[highlightjs]:https://highlightjs.org/\n[Resize-Image]:https://support.typora.io/Resize-Image/\n[markdown 表格宽度设置]:https://blog.csdn.net/maxsky/article/details/54666998\n[markdown 单元格宽度]:https://blog.csdn.net/liuyan19891230/article/details/52839788\n\n\n<script>\n   \n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"80px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"70px\";\n       }\n       if(i==3){\n           myth.style.width = \"150px\";\n       }       \n   }\n   //alert(document.getElementsByTagName(\"table\").length);\n   \t\n</script>","slug":"How-To-Create-Github-Pages-with-Hexo","published":1,"updated":"2018-07-23T15:22:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hgu000bjs6skhi6xlqs","content":"<h4 id=\"Guide\"><a href=\"#Guide\" class=\"headerlink\" title=\"Guide\"></a>Guide</h4><h4 id=\"全面官方文档\"><a href=\"#全面官方文档\" class=\"headerlink\" title=\"全面官方文档\"></a>全面官方文档</h4><p><a href=\"https://help.github.com/\" target=\"_blank\" rel=\"noopener\">github-help-all</a></p>\n<p><a href=\"https://help.github.com/categories/github-pages-basics/\" target=\"_blank\" rel=\"noopener\">github-pages-guide</a></p>\n<p><a href=\"https://jekyllrb.com/docs/home/\" target=\"_blank\" rel=\"noopener\">jekyll-guide</a></p>\n<p><a href=\"https://help.github.com/categories/customizing-github-pages/\" target=\"_blank\" rel=\"noopener\">customizing-github-pages</a></p>\n<h5 id=\"Hexo命令-Quick-Start\"><a href=\"#Hexo命令-Quick-Start\" class=\"headerlink\" title=\"Hexo命令 Quick Start\"></a>Hexo命令 Quick Start</h5><h5 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h5 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h5 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h5 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h5 id=\"Add-Theme-“next”\"><a href=\"#Add-Theme-“next”\" class=\"headerlink\" title=\"Add Theme “next”\"></a>Add Theme “next”</h5><pre><code>git clone --branch v5.1.2 https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre><p>more info: <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">hexo-theme-next</a></p>\n<h5 id=\"Add-Theme-“even”\"><a href=\"#Add-Theme-“even”\" class=\"headerlink\" title=\"Add Theme “even”\"></a>Add Theme “even”</h5><pre><code>git clone https://github.com/ahonn/hexo-theme-even themes/even\n</code></pre><h5 id=\"Add-Comments\"><a href=\"#Add-Comments\" class=\"headerlink\" title=\"Add Comments\"></a>Add Comments</h5><p><a href=\"https://widgetpack.com/\" target=\"_blank\" rel=\"noopener\">add comments</a></p>\n<h5 id=\"Highlight-高亮显示code代码\"><a href=\"#Highlight-高亮显示code代码\" class=\"headerlink\" title=\"Highlight 高亮显示code代码\"></a>Highlight 高亮显示code代码</h5><p>使用<a href=\"https://highlightjs.org/\" target=\"_blank\" rel=\"noopener\">highlightjs</a>来替换掉hexo自带的highlight功能<br><a href=\"https://highlightjs.org/\" target=\"_blank\" rel=\"noopener\">highlightjs</a></p>\n<h5 id=\"设置Markdown文件中图片的位置和大小\"><a href=\"#设置Markdown文件中图片的位置和大小\" class=\"headerlink\" title=\"设置Markdown文件中图片的位置和大小\"></a>设置Markdown文件中图片的位置和大小</h5><p><a href=\"https://support.typora.io/Resize-Image/\" target=\"_blank\" rel=\"noopener\">Resize-Image</a></p>\n<h5 id=\"设置markdown表格的宽度\"><a href=\"#设置markdown表格的宽度\" class=\"headerlink\" title=\"设置markdown表格的宽度\"></a>设置markdown表格的宽度</h5><p><a href=\"https://blog.csdn.net/maxsky/article/details/54666998\" target=\"_blank\" rel=\"noopener\">markdown 表格宽度设置</a></p>\n<p><a href=\"https://blog.csdn.net/liuyan19891230/article/details/52839788\" target=\"_blank\" rel=\"noopener\">markdown 单元格宽度</a></p>\n<h5 id=\"在Markdown中使用css-style\"><a href=\"#在Markdown中使用css-style\" class=\"headerlink\" title=\"在Markdown中使用css style\"></a>在Markdown中使用css style</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">style</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"number\">#ddd</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span><span class=\"selector-pseudo\">:nth-child(1)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span><span class=\"selector-pseudo\">:nth-child(2)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span><span class=\"selector-pseudo\">:nth-child(3)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span><span class=\"selector-pseudo\">:nth-child(4)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">160px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"在markdown中使用javascript-需要将javascript代码放在文档末尾\"><a href=\"#在markdown中使用javascript-需要将javascript代码放在文档末尾\" class=\"headerlink\" title=\"在markdown中使用javascript [需要将javascript代码放在文档末尾]\"></a>在markdown中使用javascript [需要将javascript代码放在文档末尾]</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> ths = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"th\"</span>);</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;ths.length;i++)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> myth = ths[i];</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(i==<span class=\"number\">0</span>)&#123;<span class=\"comment\">//设置文档中的第一个th的宽度</span></span><br><span class=\"line\">           myth.style.width = <span class=\"string\">\"80px\"</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(i==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">           myth.style.width = <span class=\"string\">\"150px\"</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(i==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">           myth.style.width = <span class=\"string\">\"70px\"</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(i==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">           myth.style.width = <span class=\"string\">\"150px\"</span>;</span><br><span class=\"line\">       &#125;       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">//alert(document.getElementsByTagName(\"table\").length);</span></span><br><span class=\"line\">   \t</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h4><script>\n\n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"80px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"70px\";\n       }\n       if(i==3){\n           myth.style.width = \"150px\";\n       }       \n   }\n   //alert(document.getElementsByTagName(\"table\").length);\n\n</script>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"Guide\"><a href=\"#Guide\" class=\"headerlink\" title=\"Guide\"></a>Guide</h4><h4 id=\"全面官方文档\"><a href=\"#全面官方文档\" class=\"headerlink\" title=\"全面官方文档\"></a>全面官方文档</h4><p><a href=\"https://help.github.com/\" target=\"_blank\" rel=\"noopener\">github-help-all</a></p>\n<p><a href=\"https://help.github.com/categories/github-pages-basics/\" target=\"_blank\" rel=\"noopener\">github-pages-guide</a></p>\n<p><a href=\"https://jekyllrb.com/docs/home/\" target=\"_blank\" rel=\"noopener\">jekyll-guide</a></p>\n<p><a href=\"https://help.github.com/categories/customizing-github-pages/\" target=\"_blank\" rel=\"noopener\">customizing-github-pages</a></p>\n<h5 id=\"Hexo命令-Quick-Start\"><a href=\"#Hexo命令-Quick-Start\" class=\"headerlink\" title=\"Hexo命令 Quick Start\"></a>Hexo命令 Quick Start</h5><h5 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h5 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h5 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h5 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h5 id=\"Add-Theme-“next”\"><a href=\"#Add-Theme-“next”\" class=\"headerlink\" title=\"Add Theme “next”\"></a>Add Theme “next”</h5><pre><code>git clone --branch v5.1.2 https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre><p>more info: <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">hexo-theme-next</a></p>\n<h5 id=\"Add-Theme-“even”\"><a href=\"#Add-Theme-“even”\" class=\"headerlink\" title=\"Add Theme “even”\"></a>Add Theme “even”</h5><pre><code>git clone https://github.com/ahonn/hexo-theme-even themes/even\n</code></pre><h5 id=\"Add-Comments\"><a href=\"#Add-Comments\" class=\"headerlink\" title=\"Add Comments\"></a>Add Comments</h5><p><a href=\"https://widgetpack.com/\" target=\"_blank\" rel=\"noopener\">add comments</a></p>\n<h5 id=\"Highlight-高亮显示code代码\"><a href=\"#Highlight-高亮显示code代码\" class=\"headerlink\" title=\"Highlight 高亮显示code代码\"></a>Highlight 高亮显示code代码</h5><p>使用<a href=\"https://highlightjs.org/\" target=\"_blank\" rel=\"noopener\">highlightjs</a>来替换掉hexo自带的highlight功能<br><a href=\"https://highlightjs.org/\" target=\"_blank\" rel=\"noopener\">highlightjs</a></p>\n<h5 id=\"设置Markdown文件中图片的位置和大小\"><a href=\"#设置Markdown文件中图片的位置和大小\" class=\"headerlink\" title=\"设置Markdown文件中图片的位置和大小\"></a>设置Markdown文件中图片的位置和大小</h5><p><a href=\"https://support.typora.io/Resize-Image/\" target=\"_blank\" rel=\"noopener\">Resize-Image</a></p>\n<h5 id=\"设置markdown表格的宽度\"><a href=\"#设置markdown表格的宽度\" class=\"headerlink\" title=\"设置markdown表格的宽度\"></a>设置markdown表格的宽度</h5><p><a href=\"https://blog.csdn.net/maxsky/article/details/54666998\" target=\"_blank\" rel=\"noopener\">markdown 表格宽度设置</a></p>\n<p><a href=\"https://blog.csdn.net/liuyan19891230/article/details/52839788\" target=\"_blank\" rel=\"noopener\">markdown 单元格宽度</a></p>\n<h5 id=\"在Markdown中使用css-style\"><a href=\"#在Markdown中使用css-style\" class=\"headerlink\" title=\"在Markdown中使用css style\"></a>在Markdown中使用css style</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">style</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"number\">#ddd</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span><span class=\"selector-pseudo\">:nth-child(1)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span><span class=\"selector-pseudo\">:nth-child(2)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span><span class=\"selector-pseudo\">:nth-child(3)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> <span class=\"selector-tag\">th</span><span class=\"selector-pseudo\">:nth-child(4)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">160px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"在markdown中使用javascript-需要将javascript代码放在文档末尾\"><a href=\"#在markdown中使用javascript-需要将javascript代码放在文档末尾\" class=\"headerlink\" title=\"在markdown中使用javascript [需要将javascript代码放在文档末尾]\"></a>在markdown中使用javascript [需要将javascript代码放在文档末尾]</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> ths = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"th\"</span>);</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;ths.length;i++)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> myth = ths[i];</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(i==<span class=\"number\">0</span>)&#123;<span class=\"comment\">//设置文档中的第一个th的宽度</span></span><br><span class=\"line\">           myth.style.width = <span class=\"string\">\"80px\"</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(i==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">           myth.style.width = <span class=\"string\">\"150px\"</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(i==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">           myth.style.width = <span class=\"string\">\"70px\"</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(i==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">           myth.style.width = <span class=\"string\">\"150px\"</span>;</span><br><span class=\"line\">       &#125;       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">//alert(document.getElementsByTagName(\"table\").length);</span></span><br><span class=\"line\">   \t</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h4><script>\n\n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"80px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"70px\";\n       }\n       if(i==3){\n           myth.style.width = \"150px\";\n       }       \n   }\n   //alert(document.getElementsByTagName(\"table\").length);\n\n</script>"},{"title":"Mac磁盘空间清理，腾出更多空间","date":"2018-09-23T03:06:14.000Z","summery":"清理你的mac空间，腾出更多的空间。","_content":"### 一、参考\n\n[跟着这份清理教程，帮你的 Mac 腾出更多储存空间]\n\n[跟着这份清理教程，帮你的 Mac 腾出更多储存空间]:https://sspai.com/post/44012\n\n","source":"_posts/Mac磁盘清理.md","raw":"---\ntitle: Mac磁盘空间清理，腾出更多空间\ndate: 2018-09-23 11:06:14\ntags: [mac,清理, 存储空间]\nsummery: 清理你的mac空间，腾出更多的空间。\n---\n### 一、参考\n\n[跟着这份清理教程，帮你的 Mac 腾出更多储存空间]\n\n[跟着这份清理教程，帮你的 Mac 腾出更多储存空间]:https://sspai.com/post/44012\n\n","slug":"Mac磁盘清理","published":1,"updated":"2018-09-27T05:56:54.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hgx000cjs6s4b2g4tx5","content":"<h3 id=\"一、参考\"><a href=\"#一、参考\" class=\"headerlink\" title=\"一、参考\"></a>一、参考</h3><p><a href=\"https://sspai.com/post/44012\" target=\"_blank\" rel=\"noopener\">跟着这份清理教程，帮你的 Mac 腾出更多储存空间</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、参考\"><a href=\"#一、参考\" class=\"headerlink\" title=\"一、参考\"></a>一、参考</h3><p><a href=\"https://sspai.com/post/44012\" target=\"_blank\" rel=\"noopener\">跟着这份清理教程，帮你的 Mac 腾出更多储存空间</a></p>\n"},{"title":"OAuth授权认证","date":"2018-09-03T09:30:28.000Z","summery":"理解SSL/TLS加密套件如何配置HTTP协议实现完全的加密传输协议HTTPS。并了解整个HTTP协议握手和传输阶段的各个流程，以及流程中涉及到的各种专业术语。例如：SSL/TLS、Cipher Suites、Cipher Suite、对称加密、非对称加密、随机数、证书Certificate、pre Master Secret、主秘钥Master Secret、会话秘钥、CA、Public key、Private key等等。","_content":"\n### 参考信息\n","source":"_posts/OAuth认证.md","raw":"---\ntitle: OAuth授权认证\ndate: 2018-09-03 17:30:28\ntags: [SSL/TLS,Cipher Suites,对称加密,非对称加密,随机数,证书,Certificate,pre Master Secret,Master Secret,会话秘钥,CA,Public key,Private key]\nsummery: 理解SSL/TLS加密套件如何配置HTTP协议实现完全的加密传输协议HTTPS。并了解整个HTTP协议握手和传输阶段的各个流程，以及流程中涉及到的各种专业术语。例如：SSL/TLS、Cipher Suites、Cipher Suite、对称加密、非对称加密、随机数、证书Certificate、pre Master Secret、主秘钥Master Secret、会话秘钥、CA、Public key、Private key等等。\n---\n\n### 参考信息\n","slug":"OAuth认证","published":1,"updated":"2018-09-12T15:31:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hgy000ejs6szms2b57l","content":"<h3 id=\"参考信息\"><a href=\"#参考信息\" class=\"headerlink\" title=\"参考信息\"></a>参考信息</h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"参考信息\"><a href=\"#参考信息\" class=\"headerlink\" title=\"参考信息\"></a>参考信息</h3>"},{"title":"Jetty配置https支持","date":"2018-08-13T17:04:38.000Z","summery":"使用jetty xml ioc 为Jetty服务器配置https支持。了解jetty各个层级的配置文件，如.ini, .xml 等","_content":"### 一、jetty配置https支持\n\n[HTTPS及SSL TLS概述]\n\n[通俗理解HTTPS]\n\n[https握手链接过程详解]\n\n[jetty javadoc for 配置]\n\n[ERR\\_SSL\\_VERSION\\_OR\\_CIPHER\\_MISMATCH 错误]\n\n[Android Https]\n\n[IBM Java 安全套接字编程以及 keytool 使用最佳实践]\n\n/start.ini  > /etc/jetty-http.xml > /demo-base/start.d/http.ini(只对当前应用有效)\n\n|配置文件|配置对象|存放位置|作用|相关文件|\n|----|----|----|----|----|\n|jetty.xml|org.eclipse.jetty.server.Server||||\n|jetty-web.xml|org.eclipse.jetty.webapp.WebAppContext|/WEB-INF/jetty-web.xml|配置单一项目||\n|jetty-env.xml|org.eclipse.jetty.webapp.WebAppContext|WEB-INF/jetty-env.xml|配置单一项目的JNDI|[jetty-env.xml配置]|\n|webdefault.xml|org.eclipse.jetty.webapp.WebAppContext|jetty.home/etc/webdefault.xml|before web.xml defaultsDescriptor ||\n|jetty-deploy.xml||JETTY-HOME/etc/jetty-deploy.xml|||\n|override-web.xml|org.eclipse.jetty.webapp.WebAppContext||after web.xml overrideDescriptor ||\n\n\n[jetty javadoc for 配置]\n\n[see in Jetty 8 SSL_Connectors]\n\n\n[maven jetty9 plugin 配置https]\n\n[jetty-documentation]\n\n[jetty-config-connectors]\n\n[jetty-configuring-ssl]\n\n[configuring-jetty-maven-plugin]\n\n\n\n#### 1. TLS and SSL versions\n\nWhich browser/OS supports which protocols can be found on Wikipedia.[Transport\\_Layer\\_Security in Web\\_browsers]\n\n```\nTLS v1.0 -> TLS v1.1 -> TLS v1.2\nSSL v1   -> SSL v2   -> SSL v3\n```\n\nOlder Protocols\n\n```\nTLS v1.0, v1.1 and SSL v3 are no longer supported by default.\n```\n\nNew Protocol\n\n```\nTLS v1.2\nThe protocol which should be used wherever possible. All CBC based ciphers are supported since Java 7, the new GCM modes are supported since Java 8\n```\n\n名词解释：\n\nCA:\n\nCSR:\n\nkey:\n\ncertificate:\n\nkeystore:(mac中存储在 /Users/violet/.keystore)\n\n<http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-key-pairs-and-certificates-JDK-keytool>\n\nCertificates:\n\n<http://en.tldp.org/HOWTO/SSL-Certificates-HOWTO/index.html>\n\n<http://mindprod.com/jgloss/certificate.html>\n\nKeytool:\n\n<https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html>\n\n<https://docs.oracle.com/javase/8/docs/technotes/tools/windows/keytool.html>\n\nOther tools:\n\n<https://www.ibm.com/developerworks/community/groups/service/html/communityview?communityUuid=6fb00498-f6ea-4f65-bf0c-adc5bd0c5fcc>\n\nOpenSSL:\n\n<https://www.openssl.org/docs/faq.html>\n\n#### 2. 使用keytool生成minimal requirements key to run an SSL\n\nThe following command generates a key pair and certificate directly into file keystore\n\n```\nkeytool -keystore keystore -alias jetty -genkey -keyalg RSA\n\n```\n\n完整一点的key,需要提供更多的信息，正式环境还不能使用它，但在测试环境中足够了。\n\n```\nkeytool -keystore keystore -alias jetty -genkey -keyalg RSA -sigalg SHA256withRSA\n```\n\n#### 4. 创建适合商用SSL 的key\n<http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-csr-from-keytool>\n\n#### 3. 独立安装的Jetty配置https支持\n\n1). 相关命令\n\n\t```\n\t\tjava -jar $JETTY_HOME/start.jar --list-modules=connector\n\t\t\n\t\tjava -jar $JETTY_HOME/start.jar --create-startd\n\t\t\n\t\tjava -jar $JETTY_HOME/start.jar --add-to-start=http,https\n\t\t\n\t\ttree\n\t\t\t.\n\t\t\t├── etc\n\t\t\t│   └── keystore\n\t\t\t└── start.d\n\t\t\t    ├── http.ini\n\t\t\t    └── https.ini\n\t\t\n\t\tjava -jar $JETTY_HOME/start.jar\n\t\t\n\t```\n2). 修改https.ini\n\n\n### 二、常见链接中间人：反向代理（Reverse Proxy）和负载均衡（Load Banlancer）\n\nOften a Connector needs to be configured to accept connections from an intermediary such as a Reverse Proxy and/or Load Balancer deployed in front of the server.\n\n[ERR\\_SSL\\_VERSION\\_OR\\_CIPHER\\_MISMATCH 错误]:https://blog.csdn.net/u013332124/article/details/79480665\n[WireShark抓包for Mac]:https://www.jianshu.com/p/c67baf5fce6d\n[https握手链接过程详解]:https://www.jianshu.com/p/7158568e4867\n[see in Jetty 8 SSL_Connectors]:https://wiki.eclipse.org/Jetty/Reference/SSL_Connectors\n[jetty-env.xml配置]:http://www.eclipse.org/jetty/documentation/current/jetty-env-xml.html\n[jetty javadoc for 配置]:http://www.eclipse.org/jetty/javadoc/9.4.11.v20180605/overview-summary.html\n\n[maven jetty9 plugin 配置https]:http://zhangwei8607.iteye.com/blog/2205127\n[jetty-config-connectors]:http://www.eclipse.org/jetty/documentation/current/configuring-connectors.html\n[configuring-jetty-maven-plugin]:http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html\n[jetty-documentation]:http://www.eclipse.org/jetty/documentation/current/\n\n[jetty-configuring-ssl]:http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html\n[Transport\\_Layer\\_Security in Web\\_browsers]:https://en.wikipedia.org/wiki/Transport_Layer_Security#Web_browsers\n\n[通俗理解HTTPS]:https://www.cnblogs.com/zhangshitong/p/6478721.html\n[Android Https]:https://www.cnblogs.com/alisecurity/p/5939336.html\n\n[IBM Java 安全套接字编程以及 keytool 使用最佳实践]:https://www.ibm.com/developerworks/cn/java/j-lo-socketkeytool/index.html?ca=drs\n\n[HTTPS及SSL TLS概述]:HTTPS及SSL-TLS概述.md","source":"_posts/jetty配置https支持.md","raw":"---\ntitle: Jetty配置https支持\ndate: 2018-08-14 01:04:38\ntags: [Jetty,HTTPS, SSL, TLS, Http2]\nsummery: 使用jetty xml ioc 为Jetty服务器配置https支持。了解jetty各个层级的配置文件，如.ini, .xml 等\n---\n### 一、jetty配置https支持\n\n[HTTPS及SSL TLS概述]\n\n[通俗理解HTTPS]\n\n[https握手链接过程详解]\n\n[jetty javadoc for 配置]\n\n[ERR\\_SSL\\_VERSION\\_OR\\_CIPHER\\_MISMATCH 错误]\n\n[Android Https]\n\n[IBM Java 安全套接字编程以及 keytool 使用最佳实践]\n\n/start.ini  > /etc/jetty-http.xml > /demo-base/start.d/http.ini(只对当前应用有效)\n\n|配置文件|配置对象|存放位置|作用|相关文件|\n|----|----|----|----|----|\n|jetty.xml|org.eclipse.jetty.server.Server||||\n|jetty-web.xml|org.eclipse.jetty.webapp.WebAppContext|/WEB-INF/jetty-web.xml|配置单一项目||\n|jetty-env.xml|org.eclipse.jetty.webapp.WebAppContext|WEB-INF/jetty-env.xml|配置单一项目的JNDI|[jetty-env.xml配置]|\n|webdefault.xml|org.eclipse.jetty.webapp.WebAppContext|jetty.home/etc/webdefault.xml|before web.xml defaultsDescriptor ||\n|jetty-deploy.xml||JETTY-HOME/etc/jetty-deploy.xml|||\n|override-web.xml|org.eclipse.jetty.webapp.WebAppContext||after web.xml overrideDescriptor ||\n\n\n[jetty javadoc for 配置]\n\n[see in Jetty 8 SSL_Connectors]\n\n\n[maven jetty9 plugin 配置https]\n\n[jetty-documentation]\n\n[jetty-config-connectors]\n\n[jetty-configuring-ssl]\n\n[configuring-jetty-maven-plugin]\n\n\n\n#### 1. TLS and SSL versions\n\nWhich browser/OS supports which protocols can be found on Wikipedia.[Transport\\_Layer\\_Security in Web\\_browsers]\n\n```\nTLS v1.0 -> TLS v1.1 -> TLS v1.2\nSSL v1   -> SSL v2   -> SSL v3\n```\n\nOlder Protocols\n\n```\nTLS v1.0, v1.1 and SSL v3 are no longer supported by default.\n```\n\nNew Protocol\n\n```\nTLS v1.2\nThe protocol which should be used wherever possible. All CBC based ciphers are supported since Java 7, the new GCM modes are supported since Java 8\n```\n\n名词解释：\n\nCA:\n\nCSR:\n\nkey:\n\ncertificate:\n\nkeystore:(mac中存储在 /Users/violet/.keystore)\n\n<http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-key-pairs-and-certificates-JDK-keytool>\n\nCertificates:\n\n<http://en.tldp.org/HOWTO/SSL-Certificates-HOWTO/index.html>\n\n<http://mindprod.com/jgloss/certificate.html>\n\nKeytool:\n\n<https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html>\n\n<https://docs.oracle.com/javase/8/docs/technotes/tools/windows/keytool.html>\n\nOther tools:\n\n<https://www.ibm.com/developerworks/community/groups/service/html/communityview?communityUuid=6fb00498-f6ea-4f65-bf0c-adc5bd0c5fcc>\n\nOpenSSL:\n\n<https://www.openssl.org/docs/faq.html>\n\n#### 2. 使用keytool生成minimal requirements key to run an SSL\n\nThe following command generates a key pair and certificate directly into file keystore\n\n```\nkeytool -keystore keystore -alias jetty -genkey -keyalg RSA\n\n```\n\n完整一点的key,需要提供更多的信息，正式环境还不能使用它，但在测试环境中足够了。\n\n```\nkeytool -keystore keystore -alias jetty -genkey -keyalg RSA -sigalg SHA256withRSA\n```\n\n#### 4. 创建适合商用SSL 的key\n<http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-csr-from-keytool>\n\n#### 3. 独立安装的Jetty配置https支持\n\n1). 相关命令\n\n\t```\n\t\tjava -jar $JETTY_HOME/start.jar --list-modules=connector\n\t\t\n\t\tjava -jar $JETTY_HOME/start.jar --create-startd\n\t\t\n\t\tjava -jar $JETTY_HOME/start.jar --add-to-start=http,https\n\t\t\n\t\ttree\n\t\t\t.\n\t\t\t├── etc\n\t\t\t│   └── keystore\n\t\t\t└── start.d\n\t\t\t    ├── http.ini\n\t\t\t    └── https.ini\n\t\t\n\t\tjava -jar $JETTY_HOME/start.jar\n\t\t\n\t```\n2). 修改https.ini\n\n\n### 二、常见链接中间人：反向代理（Reverse Proxy）和负载均衡（Load Banlancer）\n\nOften a Connector needs to be configured to accept connections from an intermediary such as a Reverse Proxy and/or Load Balancer deployed in front of the server.\n\n[ERR\\_SSL\\_VERSION\\_OR\\_CIPHER\\_MISMATCH 错误]:https://blog.csdn.net/u013332124/article/details/79480665\n[WireShark抓包for Mac]:https://www.jianshu.com/p/c67baf5fce6d\n[https握手链接过程详解]:https://www.jianshu.com/p/7158568e4867\n[see in Jetty 8 SSL_Connectors]:https://wiki.eclipse.org/Jetty/Reference/SSL_Connectors\n[jetty-env.xml配置]:http://www.eclipse.org/jetty/documentation/current/jetty-env-xml.html\n[jetty javadoc for 配置]:http://www.eclipse.org/jetty/javadoc/9.4.11.v20180605/overview-summary.html\n\n[maven jetty9 plugin 配置https]:http://zhangwei8607.iteye.com/blog/2205127\n[jetty-config-connectors]:http://www.eclipse.org/jetty/documentation/current/configuring-connectors.html\n[configuring-jetty-maven-plugin]:http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html\n[jetty-documentation]:http://www.eclipse.org/jetty/documentation/current/\n\n[jetty-configuring-ssl]:http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html\n[Transport\\_Layer\\_Security in Web\\_browsers]:https://en.wikipedia.org/wiki/Transport_Layer_Security#Web_browsers\n\n[通俗理解HTTPS]:https://www.cnblogs.com/zhangshitong/p/6478721.html\n[Android Https]:https://www.cnblogs.com/alisecurity/p/5939336.html\n\n[IBM Java 安全套接字编程以及 keytool 使用最佳实践]:https://www.ibm.com/developerworks/cn/java/j-lo-socketkeytool/index.html?ca=drs\n\n[HTTPS及SSL TLS概述]:HTTPS及SSL-TLS概述.md","slug":"jetty配置https支持","published":1,"updated":"2018-09-11T08:28:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hgz000fjs6sewd2usoq","content":"<h3 id=\"一、jetty配置https支持\"><a href=\"#一、jetty配置https支持\" class=\"headerlink\" title=\"一、jetty配置https支持\"></a>一、jetty配置https支持</h3><p><a href=\"HTTPS及SSL-TLS概述.md\">HTTPS及SSL TLS概述</a></p>\n<p><a href=\"https://www.cnblogs.com/zhangshitong/p/6478721.html\" target=\"_blank\" rel=\"noopener\">通俗理解HTTPS</a></p>\n<p><a href=\"https://www.jianshu.com/p/7158568e4867\" target=\"_blank\" rel=\"noopener\">https握手链接过程详解</a></p>\n<p><a href=\"http://www.eclipse.org/jetty/javadoc/9.4.11.v20180605/overview-summary.html\" target=\"_blank\" rel=\"noopener\">jetty javadoc for 配置</a></p>\n<p><a href=\"https://blog.csdn.net/u013332124/article/details/79480665\" target=\"_blank\" rel=\"noopener\">ERR_SSL_VERSION_OR_CIPHER_MISMATCH 错误</a></p>\n<p><a href=\"https://www.cnblogs.com/alisecurity/p/5939336.html\" target=\"_blank\" rel=\"noopener\">Android Https</a></p>\n<p><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-socketkeytool/index.html?ca=drs\" target=\"_blank\" rel=\"noopener\">IBM Java 安全套接字编程以及 keytool 使用最佳实践</a></p>\n<p>/start.ini  &gt; /etc/jetty-http.xml &gt; /demo-base/start.d/http.ini(只对当前应用有效)</p>\n<table>\n<thead>\n<tr>\n<th>配置文件</th>\n<th>配置对象</th>\n<th>存放位置</th>\n<th>作用</th>\n<th>相关文件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>jetty.xml</td>\n<td>org.eclipse.jetty.server.Server</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>jetty-web.xml</td>\n<td>org.eclipse.jetty.webapp.WebAppContext</td>\n<td>/WEB-INF/jetty-web.xml</td>\n<td>配置单一项目</td>\n<td></td>\n</tr>\n<tr>\n<td>jetty-env.xml</td>\n<td>org.eclipse.jetty.webapp.WebAppContext</td>\n<td>WEB-INF/jetty-env.xml</td>\n<td>配置单一项目的JNDI</td>\n<td><a href=\"http://www.eclipse.org/jetty/documentation/current/jetty-env-xml.html\" target=\"_blank\" rel=\"noopener\">jetty-env.xml配置</a></td>\n</tr>\n<tr>\n<td>webdefault.xml</td>\n<td>org.eclipse.jetty.webapp.WebAppContext</td>\n<td>jetty.home/etc/webdefault.xml</td>\n<td>before web.xml defaultsDescriptor</td>\n<td></td>\n</tr>\n<tr>\n<td>jetty-deploy.xml</td>\n<td></td>\n<td>JETTY-HOME/etc/jetty-deploy.xml</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>override-web.xml</td>\n<td>org.eclipse.jetty.webapp.WebAppContext</td>\n<td></td>\n<td>after web.xml overrideDescriptor</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"http://www.eclipse.org/jetty/javadoc/9.4.11.v20180605/overview-summary.html\" target=\"_blank\" rel=\"noopener\">jetty javadoc for 配置</a></p>\n<p><a href=\"https://wiki.eclipse.org/Jetty/Reference/SSL_Connectors\" target=\"_blank\" rel=\"noopener\">see in Jetty 8 SSL_Connectors</a></p>\n<p><a href=\"http://zhangwei8607.iteye.com/blog/2205127\" target=\"_blank\" rel=\"noopener\">maven jetty9 plugin 配置https</a></p>\n<p><a href=\"http://www.eclipse.org/jetty/documentation/current/\" target=\"_blank\" rel=\"noopener\">jetty-documentation</a></p>\n<p><a href=\"http://www.eclipse.org/jetty/documentation/current/configuring-connectors.html\" target=\"_blank\" rel=\"noopener\">jetty-config-connectors</a></p>\n<p><a href=\"http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html\" target=\"_blank\" rel=\"noopener\">jetty-configuring-ssl</a></p>\n<p><a href=\"http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html\" target=\"_blank\" rel=\"noopener\">configuring-jetty-maven-plugin</a></p>\n<h4 id=\"1-TLS-and-SSL-versions\"><a href=\"#1-TLS-and-SSL-versions\" class=\"headerlink\" title=\"1. TLS and SSL versions\"></a>1. TLS and SSL versions</h4><p>Which browser/OS supports which protocols can be found on Wikipedia.<a href=\"https://en.wikipedia.org/wiki/Transport_Layer_Security#Web_browsers\" target=\"_blank\" rel=\"noopener\">Transport_Layer_Security in Web_browsers</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TLS v1.0 -&gt; TLS v1.1 -&gt; TLS v1.2</span><br><span class=\"line\">SSL v1   -&gt; SSL v2   -&gt; SSL v3</span><br></pre></td></tr></table></figure>\n<p>Older Protocols</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TLS v1.0, v1.1 and SSL v3 are no longer supported by default.</span><br></pre></td></tr></table></figure>\n<p>New Protocol</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TLS v1.2</span><br><span class=\"line\">The protocol which should be used wherever possible. All CBC based ciphers are supported since Java 7, the new GCM modes are supported since Java 8</span><br></pre></td></tr></table></figure>\n<p>名词解释：</p>\n<p>CA:</p>\n<p>CSR:</p>\n<p>key:</p>\n<p>certificate:</p>\n<p>keystore:(mac中存储在 /Users/violet/.keystore)</p>\n<p><a href=\"http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-key-pairs-and-certificates-JDK-keytool\" target=\"_blank\" rel=\"noopener\">http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-key-pairs-and-certificates-JDK-keytool</a></p>\n<p>Certificates:</p>\n<p><a href=\"http://en.tldp.org/HOWTO/SSL-Certificates-HOWTO/index.html\" target=\"_blank\" rel=\"noopener\">http://en.tldp.org/HOWTO/SSL-Certificates-HOWTO/index.html</a></p>\n<p><a href=\"http://mindprod.com/jgloss/certificate.html\" target=\"_blank\" rel=\"noopener\">http://mindprod.com/jgloss/certificate.html</a></p>\n<p>Keytool:</p>\n<p><a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html</a></p>\n<p><a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/keytool.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/8/docs/technotes/tools/windows/keytool.html</a></p>\n<p>Other tools:</p>\n<p><a href=\"https://www.ibm.com/developerworks/community/groups/service/html/communityview?communityUuid=6fb00498-f6ea-4f65-bf0c-adc5bd0c5fcc\" target=\"_blank\" rel=\"noopener\">https://www.ibm.com/developerworks/community/groups/service/html/communityview?communityUuid=6fb00498-f6ea-4f65-bf0c-adc5bd0c5fcc</a></p>\n<p>OpenSSL:</p>\n<p><a href=\"https://www.openssl.org/docs/faq.html\" target=\"_blank\" rel=\"noopener\">https://www.openssl.org/docs/faq.html</a></p>\n<h4 id=\"2-使用keytool生成minimal-requirements-key-to-run-an-SSL\"><a href=\"#2-使用keytool生成minimal-requirements-key-to-run-an-SSL\" class=\"headerlink\" title=\"2. 使用keytool生成minimal requirements key to run an SSL\"></a>2. 使用keytool生成minimal requirements key to run an SSL</h4><p>The following command generates a key pair and certificate directly into file keystore</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -keystore keystore -alias jetty -genkey -keyalg RSA</span><br></pre></td></tr></table></figure>\n<p>完整一点的key,需要提供更多的信息，正式环境还不能使用它，但在测试环境中足够了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -keystore keystore -alias jetty -genkey -keyalg RSA -sigalg SHA256withRSA</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-创建适合商用SSL-的key\"><a href=\"#4-创建适合商用SSL-的key\" class=\"headerlink\" title=\"4. 创建适合商用SSL 的key\"></a>4. 创建适合商用SSL 的key</h4><p><a href=\"http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-csr-from-keytool\" target=\"_blank\" rel=\"noopener\">http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-csr-from-keytool</a></p>\n<h4 id=\"3-独立安装的Jetty配置https支持\"><a href=\"#3-独立安装的Jetty配置https支持\" class=\"headerlink\" title=\"3. 独立安装的Jetty配置https支持\"></a>3. 独立安装的Jetty配置https支持</h4><p>1). 相关命令</p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar $JETTY_HOME/start.jar --list-modules=connector</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar $JETTY_HOME/start.jar --create-startd</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar $JETTY_HOME/start.jar --add-to-start=http,https</span><br><span class=\"line\"></span><br><span class=\"line\">tree</span><br><span class=\"line\">\t.</span><br><span class=\"line\">\t├── etc</span><br><span class=\"line\">\t│   └── keystore</span><br><span class=\"line\">\t└── start.d</span><br><span class=\"line\">\t    ├── http.ini</span><br><span class=\"line\">\t    └── https.ini</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar $JETTY_HOME/start.jar</span><br></pre></td></tr></table></figure>\n</code></pre><p>2). 修改https.ini</p>\n<h3 id=\"二、常见链接中间人：反向代理（Reverse-Proxy）和负载均衡（Load-Banlancer）\"><a href=\"#二、常见链接中间人：反向代理（Reverse-Proxy）和负载均衡（Load-Banlancer）\" class=\"headerlink\" title=\"二、常见链接中间人：反向代理（Reverse Proxy）和负载均衡（Load Banlancer）\"></a>二、常见链接中间人：反向代理（Reverse Proxy）和负载均衡（Load Banlancer）</h3><p>Often a Connector needs to be configured to accept connections from an intermediary such as a Reverse Proxy and/or Load Balancer deployed in front of the server.</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、jetty配置https支持\"><a href=\"#一、jetty配置https支持\" class=\"headerlink\" title=\"一、jetty配置https支持\"></a>一、jetty配置https支持</h3><p><a href=\"HTTPS及SSL-TLS概述.md\">HTTPS及SSL TLS概述</a></p>\n<p><a href=\"https://www.cnblogs.com/zhangshitong/p/6478721.html\" target=\"_blank\" rel=\"noopener\">通俗理解HTTPS</a></p>\n<p><a href=\"https://www.jianshu.com/p/7158568e4867\" target=\"_blank\" rel=\"noopener\">https握手链接过程详解</a></p>\n<p><a href=\"http://www.eclipse.org/jetty/javadoc/9.4.11.v20180605/overview-summary.html\" target=\"_blank\" rel=\"noopener\">jetty javadoc for 配置</a></p>\n<p><a href=\"https://blog.csdn.net/u013332124/article/details/79480665\" target=\"_blank\" rel=\"noopener\">ERR_SSL_VERSION_OR_CIPHER_MISMATCH 错误</a></p>\n<p><a href=\"https://www.cnblogs.com/alisecurity/p/5939336.html\" target=\"_blank\" rel=\"noopener\">Android Https</a></p>\n<p><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-socketkeytool/index.html?ca=drs\" target=\"_blank\" rel=\"noopener\">IBM Java 安全套接字编程以及 keytool 使用最佳实践</a></p>\n<p>/start.ini  &gt; /etc/jetty-http.xml &gt; /demo-base/start.d/http.ini(只对当前应用有效)</p>\n<table>\n<thead>\n<tr>\n<th>配置文件</th>\n<th>配置对象</th>\n<th>存放位置</th>\n<th>作用</th>\n<th>相关文件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>jetty.xml</td>\n<td>org.eclipse.jetty.server.Server</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>jetty-web.xml</td>\n<td>org.eclipse.jetty.webapp.WebAppContext</td>\n<td>/WEB-INF/jetty-web.xml</td>\n<td>配置单一项目</td>\n<td></td>\n</tr>\n<tr>\n<td>jetty-env.xml</td>\n<td>org.eclipse.jetty.webapp.WebAppContext</td>\n<td>WEB-INF/jetty-env.xml</td>\n<td>配置单一项目的JNDI</td>\n<td><a href=\"http://www.eclipse.org/jetty/documentation/current/jetty-env-xml.html\" target=\"_blank\" rel=\"noopener\">jetty-env.xml配置</a></td>\n</tr>\n<tr>\n<td>webdefault.xml</td>\n<td>org.eclipse.jetty.webapp.WebAppContext</td>\n<td>jetty.home/etc/webdefault.xml</td>\n<td>before web.xml defaultsDescriptor</td>\n<td></td>\n</tr>\n<tr>\n<td>jetty-deploy.xml</td>\n<td></td>\n<td>JETTY-HOME/etc/jetty-deploy.xml</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>override-web.xml</td>\n<td>org.eclipse.jetty.webapp.WebAppContext</td>\n<td></td>\n<td>after web.xml overrideDescriptor</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"http://www.eclipse.org/jetty/javadoc/9.4.11.v20180605/overview-summary.html\" target=\"_blank\" rel=\"noopener\">jetty javadoc for 配置</a></p>\n<p><a href=\"https://wiki.eclipse.org/Jetty/Reference/SSL_Connectors\" target=\"_blank\" rel=\"noopener\">see in Jetty 8 SSL_Connectors</a></p>\n<p><a href=\"http://zhangwei8607.iteye.com/blog/2205127\" target=\"_blank\" rel=\"noopener\">maven jetty9 plugin 配置https</a></p>\n<p><a href=\"http://www.eclipse.org/jetty/documentation/current/\" target=\"_blank\" rel=\"noopener\">jetty-documentation</a></p>\n<p><a href=\"http://www.eclipse.org/jetty/documentation/current/configuring-connectors.html\" target=\"_blank\" rel=\"noopener\">jetty-config-connectors</a></p>\n<p><a href=\"http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html\" target=\"_blank\" rel=\"noopener\">jetty-configuring-ssl</a></p>\n<p><a href=\"http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html\" target=\"_blank\" rel=\"noopener\">configuring-jetty-maven-plugin</a></p>\n<h4 id=\"1-TLS-and-SSL-versions\"><a href=\"#1-TLS-and-SSL-versions\" class=\"headerlink\" title=\"1. TLS and SSL versions\"></a>1. TLS and SSL versions</h4><p>Which browser/OS supports which protocols can be found on Wikipedia.<a href=\"https://en.wikipedia.org/wiki/Transport_Layer_Security#Web_browsers\" target=\"_blank\" rel=\"noopener\">Transport_Layer_Security in Web_browsers</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TLS v1.0 -&gt; TLS v1.1 -&gt; TLS v1.2</span><br><span class=\"line\">SSL v1   -&gt; SSL v2   -&gt; SSL v3</span><br></pre></td></tr></table></figure>\n<p>Older Protocols</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TLS v1.0, v1.1 and SSL v3 are no longer supported by default.</span><br></pre></td></tr></table></figure>\n<p>New Protocol</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TLS v1.2</span><br><span class=\"line\">The protocol which should be used wherever possible. All CBC based ciphers are supported since Java 7, the new GCM modes are supported since Java 8</span><br></pre></td></tr></table></figure>\n<p>名词解释：</p>\n<p>CA:</p>\n<p>CSR:</p>\n<p>key:</p>\n<p>certificate:</p>\n<p>keystore:(mac中存储在 /Users/violet/.keystore)</p>\n<p><a href=\"http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-key-pairs-and-certificates-JDK-keytool\" target=\"_blank\" rel=\"noopener\">http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-key-pairs-and-certificates-JDK-keytool</a></p>\n<p>Certificates:</p>\n<p><a href=\"http://en.tldp.org/HOWTO/SSL-Certificates-HOWTO/index.html\" target=\"_blank\" rel=\"noopener\">http://en.tldp.org/HOWTO/SSL-Certificates-HOWTO/index.html</a></p>\n<p><a href=\"http://mindprod.com/jgloss/certificate.html\" target=\"_blank\" rel=\"noopener\">http://mindprod.com/jgloss/certificate.html</a></p>\n<p>Keytool:</p>\n<p><a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/8/docs/technotes/tools/unix/keytool.html</a></p>\n<p><a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/keytool.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/8/docs/technotes/tools/windows/keytool.html</a></p>\n<p>Other tools:</p>\n<p><a href=\"https://www.ibm.com/developerworks/community/groups/service/html/communityview?communityUuid=6fb00498-f6ea-4f65-bf0c-adc5bd0c5fcc\" target=\"_blank\" rel=\"noopener\">https://www.ibm.com/developerworks/community/groups/service/html/communityview?communityUuid=6fb00498-f6ea-4f65-bf0c-adc5bd0c5fcc</a></p>\n<p>OpenSSL:</p>\n<p><a href=\"https://www.openssl.org/docs/faq.html\" target=\"_blank\" rel=\"noopener\">https://www.openssl.org/docs/faq.html</a></p>\n<h4 id=\"2-使用keytool生成minimal-requirements-key-to-run-an-SSL\"><a href=\"#2-使用keytool生成minimal-requirements-key-to-run-an-SSL\" class=\"headerlink\" title=\"2. 使用keytool生成minimal requirements key to run an SSL\"></a>2. 使用keytool生成minimal requirements key to run an SSL</h4><p>The following command generates a key pair and certificate directly into file keystore</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -keystore keystore -alias jetty -genkey -keyalg RSA</span><br></pre></td></tr></table></figure>\n<p>完整一点的key,需要提供更多的信息，正式环境还不能使用它，但在测试环境中足够了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -keystore keystore -alias jetty -genkey -keyalg RSA -sigalg SHA256withRSA</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-创建适合商用SSL-的key\"><a href=\"#4-创建适合商用SSL-的key\" class=\"headerlink\" title=\"4. 创建适合商用SSL 的key\"></a>4. 创建适合商用SSL 的key</h4><p><a href=\"http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-csr-from-keytool\" target=\"_blank\" rel=\"noopener\">http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html#generating-csr-from-keytool</a></p>\n<h4 id=\"3-独立安装的Jetty配置https支持\"><a href=\"#3-独立安装的Jetty配置https支持\" class=\"headerlink\" title=\"3. 独立安装的Jetty配置https支持\"></a>3. 独立安装的Jetty配置https支持</h4><p>1). 相关命令</p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar $JETTY_HOME/start.jar --list-modules=connector</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar $JETTY_HOME/start.jar --create-startd</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar $JETTY_HOME/start.jar --add-to-start=http,https</span><br><span class=\"line\"></span><br><span class=\"line\">tree</span><br><span class=\"line\">\t.</span><br><span class=\"line\">\t├── etc</span><br><span class=\"line\">\t│   └── keystore</span><br><span class=\"line\">\t└── start.d</span><br><span class=\"line\">\t    ├── http.ini</span><br><span class=\"line\">\t    └── https.ini</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar $JETTY_HOME/start.jar</span><br></pre></td></tr></table></figure>\n</code></pre><p>2). 修改https.ini</p>\n<h3 id=\"二、常见链接中间人：反向代理（Reverse-Proxy）和负载均衡（Load-Banlancer）\"><a href=\"#二、常见链接中间人：反向代理（Reverse-Proxy）和负载均衡（Load-Banlancer）\" class=\"headerlink\" title=\"二、常见链接中间人：反向代理（Reverse Proxy）和负载均衡（Load Banlancer）\"></a>二、常见链接中间人：反向代理（Reverse Proxy）和负载均衡（Load Banlancer）</h3><p>Often a Connector needs to be configured to accept connections from an intermediary such as a Reverse Proxy and/or Load Balancer deployed in front of the server.</p>\n"},{"title":"列出我们常用官方文档","date":"2018-08-19T01:12:56.000Z","summery":"将我们日常开发中经常使用到的官方文档罗列出来，方便查找。当然很多文档你可以在Dash或者DevDocs中找到。","_content":"|名称|官方网站|功能分类|相关参考|\n|----|----|----|----|\n|Gson|<https://github.com/google/gson/blob/master/UserGuide.md>|对象JSON转换||\n|||||\n|||||\n\n","source":"_posts/官方文档集合.md","raw":"---\ntitle: 列出我们常用官方文档\ndate: 2018-08-19 09:12:56\ntags: [OkHttp,http2,https,cache,IPv4,IPv6,Gson,Retrofit,RxJava,Kotlin]\nsummery: 将我们日常开发中经常使用到的官方文档罗列出来，方便查找。当然很多文档你可以在Dash或者DevDocs中找到。\n---\n|名称|官方网站|功能分类|相关参考|\n|----|----|----|----|\n|Gson|<https://github.com/google/gson/blob/master/UserGuide.md>|对象JSON转换||\n|||||\n|||||\n\n","slug":"官方文档集合","published":1,"updated":"2018-08-20T15:29:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hh0000hjs6sohgus9d3","content":"<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>官方网站</th>\n<th>功能分类</th>\n<th>相关参考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Gson</td>\n<td><a href=\"https://github.com/google/gson/blob/master/UserGuide.md\" target=\"_blank\" rel=\"noopener\">https://github.com/google/gson/blob/master/UserGuide.md</a></td>\n<td>对象JSON转换</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>官方网站</th>\n<th>功能分类</th>\n<th>相关参考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Gson</td>\n<td><a href=\"https://github.com/google/gson/blob/master/UserGuide.md\" target=\"_blank\" rel=\"noopener\">https://github.com/google/gson/blob/master/UserGuide.md</a></td>\n<td>对象JSON转换</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"比特币与区块链","date":"2018-09-04T16:30:12.000Z","summery":"比特币和区块链","_content":"### 比特币白皮书\n\n[比特币白皮书]\n\n[深入浅出区块链]\n\n[慕课网区块链Tiny熊]\n\n[Java实现区块链Demo]\n\n[比特币白皮书]:https://www.8btc.com/wiki/bitcoin-a-peer-to-peer-electronic-cash-system\n[深入浅出区块链]:https://learnblockchain.cn/\n[慕课网区块链Tiny熊]:https://www.imooc.com/t/2137489\n[Java实现区块链Demo]:https://blog.csdn.net/u010093971/article/details/79358730","source":"_posts/比特币与区块链.md","raw":"---\ntitle: 比特币与区块链\ndate: 2018-09-05 00:30:12\ntags: [比特币, 区块链]\nsummery: 比特币和区块链\n---\n### 比特币白皮书\n\n[比特币白皮书]\n\n[深入浅出区块链]\n\n[慕课网区块链Tiny熊]\n\n[Java实现区块链Demo]\n\n[比特币白皮书]:https://www.8btc.com/wiki/bitcoin-a-peer-to-peer-electronic-cash-system\n[深入浅出区块链]:https://learnblockchain.cn/\n[慕课网区块链Tiny熊]:https://www.imooc.com/t/2137489\n[Java实现区块链Demo]:https://blog.csdn.net/u010093971/article/details/79358730","slug":"比特币与区块链","published":1,"updated":"2018-09-04T16:33:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hh1000ijs6s38svmm7j","content":"<h3 id=\"比特币白皮书\"><a href=\"#比特币白皮书\" class=\"headerlink\" title=\"比特币白皮书\"></a>比特币白皮书</h3><p><a href=\"https://www.8btc.com/wiki/bitcoin-a-peer-to-peer-electronic-cash-system\" target=\"_blank\" rel=\"noopener\">比特币白皮书</a></p>\n<p><a href=\"https://learnblockchain.cn/\" target=\"_blank\" rel=\"noopener\">深入浅出区块链</a></p>\n<p><a href=\"https://www.imooc.com/t/2137489\" target=\"_blank\" rel=\"noopener\">慕课网区块链Tiny熊</a></p>\n<p><a href=\"https://blog.csdn.net/u010093971/article/details/79358730\" target=\"_blank\" rel=\"noopener\">Java实现区块链Demo</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"比特币白皮书\"><a href=\"#比特币白皮书\" class=\"headerlink\" title=\"比特币白皮书\"></a>比特币白皮书</h3><p><a href=\"https://www.8btc.com/wiki/bitcoin-a-peer-to-peer-electronic-cash-system\" target=\"_blank\" rel=\"noopener\">比特币白皮书</a></p>\n<p><a href=\"https://learnblockchain.cn/\" target=\"_blank\" rel=\"noopener\">深入浅出区块链</a></p>\n<p><a href=\"https://www.imooc.com/t/2137489\" target=\"_blank\" rel=\"noopener\">慕课网区块链Tiny熊</a></p>\n<p><a href=\"https://blog.csdn.net/u010093971/article/details/79358730\" target=\"_blank\" rel=\"noopener\">Java实现区块链Demo</a></p>\n"},{"title":"碎片化知识点总结-to be continued","date":"2018-07-17T19:07:20.000Z","summery":"记录工作学习过程中遇到的碎片化的知识点，不断更新，便于查对。未完待续……","_content":"\n### 碎片化知识 \n\n#### CSS 相关\n\n|css 预处理器|描述|\n|----|----|\n|[less]||\n|[sass]||\n|[stylus]||\n|||\n\n#### javascript相关\n\n|javascript template|描述|\n|----|----|\n|[ejs]||\n|[EJS]||\n|[Handlebars]||\n|[Jade]||\n|[Pug]|由Jade更名而来|\n\n#### 博客框架\n\n|名称|描述|\n|----|----|\n|[hexo]||\n|[jekyll]||\n|[wordpress]||\n\n#### Web应用开发框架\n\n|名称|描述|\n|----|----|\n|[Node.js 之 Express]||\n|||\n\n#### 规则记忆\n\n|1|2|3|4|5|\n|----|----|----|----|----|\n|[css 优先级顺序]|[css 速查手册]||||\n|[fontawesome-icons]|||||\n \n#### 杂项\n\n|1|2|3|4|5|\n|----|----|----|----|----|\n|[为什么Url需要转码]|[Junit如何执行异步方法测试]|[面试干货]|||\n\n[css 速查手册]:http://www.css88.com/book/css/\n \n[less]:http://lesscss.org/\n[sass]:https://www.sass.hk/\n[stylus]:http://stylus-lang.com/docs/bifs.html\n\n[EJS]:https://ejs.bootcss.com/\n[ejs]:https://www.npmjs.com/package/ejs\n[Handlebars]:http://handlebarsjs.com/\n[Jade]:http://jade-lang.com/\n[Pug]:https://pug.bootcss.com/api/getting-started.html\n\n[fontawesome-icons]:https://fontawesome.com/icons?d=gallery&s=brands\n\n[css 优先级顺序]:https://www.cnblogs.com/lonelyxmas/p/7807017.html\n\n[hexo]:https://hexo.io/zh-cn/docs/index.html\n[jekyll]:https://jekyllrb.com/\n[wordpress]:https://wordpress.org/\n\n[Node.js 之 Express]:http://www.expressjs.com.cn/\n\n[为什么Url需要转码]:https://www.cnblogs.com/jerrysion/p/5522673.html\n\n[Junit如何执行异步方法测试]:https://www.jianshu.com/p/dfbc15d919be\n\n[面试干货]:https://mp.weixin.qq.com/s/WVBJqqF6HGGJyzI1hc4fPg\n#### 碎片化记忆\n\n1. 输出javascript对象的方法\n\t\t\n\t\tfunction showObjProperty(obj) { \n\t\t\tvar propertys=''; \n\t\t\tvar propertyCounts=0; \n\t\t\tfor(i in obj){ \n\t\t\t\tif(obj.i !=null) \n\t\t\t\t\tpropertys = propertys +i+'属性：'+obj.i+'\\r\\n'; \n\t\t\t\telse \n\t\t\t\t\tpropertys = propertys +i+'方法\\r\\n'; \n\t\t\t} \n\t\t\talert(propertys); \n\t\t} \n\t\t\n\t\tejs方式输出：<%- propertys %>\n\t\t\n2. Hexo blog中的theme.post对象中常用属性\n\t\t\n\t\ttitle  \t\t标题\n\t\tdate   \t\t日期\n\t\tcategories\t分类\n\t\texcerpt\t\t摘要\n\t\ttags   \t\t标签\n\t\tpath   \t\t路径\n\t\tcontent\t\t内容\n\t\t_content   \t原始内容\n\t\t\n3. 是否","source":"_posts/碎片化知识总结-to be continued.md","raw":"---\ntitle: 碎片化知识点总结-to be continued\ndate: 2018-07-18 03:07:20\ntags:\nsummery: 记录工作学习过程中遇到的碎片化的知识点，不断更新，便于查对。未完待续……\n\n---\n\n### 碎片化知识 \n\n#### CSS 相关\n\n|css 预处理器|描述|\n|----|----|\n|[less]||\n|[sass]||\n|[stylus]||\n|||\n\n#### javascript相关\n\n|javascript template|描述|\n|----|----|\n|[ejs]||\n|[EJS]||\n|[Handlebars]||\n|[Jade]||\n|[Pug]|由Jade更名而来|\n\n#### 博客框架\n\n|名称|描述|\n|----|----|\n|[hexo]||\n|[jekyll]||\n|[wordpress]||\n\n#### Web应用开发框架\n\n|名称|描述|\n|----|----|\n|[Node.js 之 Express]||\n|||\n\n#### 规则记忆\n\n|1|2|3|4|5|\n|----|----|----|----|----|\n|[css 优先级顺序]|[css 速查手册]||||\n|[fontawesome-icons]|||||\n \n#### 杂项\n\n|1|2|3|4|5|\n|----|----|----|----|----|\n|[为什么Url需要转码]|[Junit如何执行异步方法测试]|[面试干货]|||\n\n[css 速查手册]:http://www.css88.com/book/css/\n \n[less]:http://lesscss.org/\n[sass]:https://www.sass.hk/\n[stylus]:http://stylus-lang.com/docs/bifs.html\n\n[EJS]:https://ejs.bootcss.com/\n[ejs]:https://www.npmjs.com/package/ejs\n[Handlebars]:http://handlebarsjs.com/\n[Jade]:http://jade-lang.com/\n[Pug]:https://pug.bootcss.com/api/getting-started.html\n\n[fontawesome-icons]:https://fontawesome.com/icons?d=gallery&s=brands\n\n[css 优先级顺序]:https://www.cnblogs.com/lonelyxmas/p/7807017.html\n\n[hexo]:https://hexo.io/zh-cn/docs/index.html\n[jekyll]:https://jekyllrb.com/\n[wordpress]:https://wordpress.org/\n\n[Node.js 之 Express]:http://www.expressjs.com.cn/\n\n[为什么Url需要转码]:https://www.cnblogs.com/jerrysion/p/5522673.html\n\n[Junit如何执行异步方法测试]:https://www.jianshu.com/p/dfbc15d919be\n\n[面试干货]:https://mp.weixin.qq.com/s/WVBJqqF6HGGJyzI1hc4fPg\n#### 碎片化记忆\n\n1. 输出javascript对象的方法\n\t\t\n\t\tfunction showObjProperty(obj) { \n\t\t\tvar propertys=''; \n\t\t\tvar propertyCounts=0; \n\t\t\tfor(i in obj){ \n\t\t\t\tif(obj.i !=null) \n\t\t\t\t\tpropertys = propertys +i+'属性：'+obj.i+'\\r\\n'; \n\t\t\t\telse \n\t\t\t\t\tpropertys = propertys +i+'方法\\r\\n'; \n\t\t\t} \n\t\t\talert(propertys); \n\t\t} \n\t\t\n\t\tejs方式输出：<%- propertys %>\n\t\t\n2. Hexo blog中的theme.post对象中常用属性\n\t\t\n\t\ttitle  \t\t标题\n\t\tdate   \t\t日期\n\t\tcategories\t分类\n\t\texcerpt\t\t摘要\n\t\ttags   \t\t标签\n\t\tpath   \t\t路径\n\t\tcontent\t\t内容\n\t\t_content   \t原始内容\n\t\t\n3. 是否","slug":"碎片化知识总结-to be continued","published":1,"updated":"2018-08-31T09:49:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hh2000jjs6s44pjzkhn","content":"<h3 id=\"碎片化知识\"><a href=\"#碎片化知识\" class=\"headerlink\" title=\"碎片化知识\"></a>碎片化知识</h3><h4 id=\"CSS-相关\"><a href=\"#CSS-相关\" class=\"headerlink\" title=\"CSS 相关\"></a>CSS 相关</h4><table>\n<thead>\n<tr>\n<th>css 预处理器</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"noopener\">less</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://www.sass.hk/\" target=\"_blank\" rel=\"noopener\">sass</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://stylus-lang.com/docs/bifs.html\" target=\"_blank\" rel=\"noopener\">stylus</a></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"javascript相关\"><a href=\"#javascript相关\" class=\"headerlink\" title=\"javascript相关\"></a>javascript相关</h4><table>\n<thead>\n<tr>\n<th>javascript template</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://ejs.bootcss.com/\" target=\"_blank\" rel=\"noopener\">ejs</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://ejs.bootcss.com/\" target=\"_blank\" rel=\"noopener\">EJS</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://handlebarsjs.com/\" target=\"_blank\" rel=\"noopener\">Handlebars</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://jade-lang.com/\" target=\"_blank\" rel=\"noopener\">Jade</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://pug.bootcss.com/api/getting-started.html\" target=\"_blank\" rel=\"noopener\">Pug</a></td>\n<td>由Jade更名而来</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"博客框架\"><a href=\"#博客框架\" class=\"headerlink\" title=\"博客框架\"></a>博客框架</h4><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">hexo</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">jekyll</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://wordpress.org/\" target=\"_blank\" rel=\"noopener\">wordpress</a></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Web应用开发框架\"><a href=\"#Web应用开发框架\" class=\"headerlink\" title=\"Web应用开发框架\"></a>Web应用开发框架</h4><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://www.expressjs.com.cn/\" target=\"_blank\" rel=\"noopener\">Node.js 之 Express</a></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"规则记忆\"><a href=\"#规则记忆\" class=\"headerlink\" title=\"规则记忆\"></a>规则记忆</h4><table>\n<thead>\n<tr>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.cnblogs.com/lonelyxmas/p/7807017.html\" target=\"_blank\" rel=\"noopener\">css 优先级顺序</a></td>\n<td><a href=\"http://www.css88.com/book/css/\" target=\"_blank\" rel=\"noopener\">css 速查手册</a></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://fontawesome.com/icons?d=gallery&amp;s=brands\" target=\"_blank\" rel=\"noopener\">fontawesome-icons</a></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"杂项\"><a href=\"#杂项\" class=\"headerlink\" title=\"杂项\"></a>杂项</h4><table>\n<thead>\n<tr>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.cnblogs.com/jerrysion/p/5522673.html\" target=\"_blank\" rel=\"noopener\">为什么Url需要转码</a></td>\n<td><a href=\"https://www.jianshu.com/p/dfbc15d919be\" target=\"_blank\" rel=\"noopener\">Junit如何执行异步方法测试</a></td>\n<td><a href=\"https://mp.weixin.qq.com/s/WVBJqqF6HGGJyzI1hc4fPg\" target=\"_blank\" rel=\"noopener\">面试干货</a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"碎片化记忆\"><a href=\"#碎片化记忆\" class=\"headerlink\" title=\"碎片化记忆\"></a>碎片化记忆</h4><ol>\n<li><p>输出javascript对象的方法</p>\n<pre><code>function showObjProperty(obj) { \n    var propertys=&apos;&apos;; \n    var propertyCounts=0; \n    for(i in obj){ \n        if(obj.i !=null) \n            propertys = propertys +i+&apos;属性：&apos;+obj.i+&apos;\\r\\n&apos;; \n        else \n            propertys = propertys +i+&apos;方法\\r\\n&apos;; \n    } \n    alert(propertys); \n} \n\nejs方式输出：&lt;%- propertys %&gt;\n</code></pre></li>\n<li><p>Hexo blog中的theme.post对象中常用属性</p>\n<pre><code>title          标题\ndate           日期\ncategories    分类\nexcerpt        摘要\ntags           标签\npath           路径\ncontent        内容\n_content       原始内容\n</code></pre></li>\n<li><p>是否</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"碎片化知识\"><a href=\"#碎片化知识\" class=\"headerlink\" title=\"碎片化知识\"></a>碎片化知识</h3><h4 id=\"CSS-相关\"><a href=\"#CSS-相关\" class=\"headerlink\" title=\"CSS 相关\"></a>CSS 相关</h4><table>\n<thead>\n<tr>\n<th>css 预处理器</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"noopener\">less</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://www.sass.hk/\" target=\"_blank\" rel=\"noopener\">sass</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://stylus-lang.com/docs/bifs.html\" target=\"_blank\" rel=\"noopener\">stylus</a></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"javascript相关\"><a href=\"#javascript相关\" class=\"headerlink\" title=\"javascript相关\"></a>javascript相关</h4><table>\n<thead>\n<tr>\n<th>javascript template</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://ejs.bootcss.com/\" target=\"_blank\" rel=\"noopener\">ejs</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://ejs.bootcss.com/\" target=\"_blank\" rel=\"noopener\">EJS</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://handlebarsjs.com/\" target=\"_blank\" rel=\"noopener\">Handlebars</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://jade-lang.com/\" target=\"_blank\" rel=\"noopener\">Jade</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://pug.bootcss.com/api/getting-started.html\" target=\"_blank\" rel=\"noopener\">Pug</a></td>\n<td>由Jade更名而来</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"博客框架\"><a href=\"#博客框架\" class=\"headerlink\" title=\"博客框架\"></a>博客框架</h4><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">hexo</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">jekyll</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://wordpress.org/\" target=\"_blank\" rel=\"noopener\">wordpress</a></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Web应用开发框架\"><a href=\"#Web应用开发框架\" class=\"headerlink\" title=\"Web应用开发框架\"></a>Web应用开发框架</h4><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://www.expressjs.com.cn/\" target=\"_blank\" rel=\"noopener\">Node.js 之 Express</a></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"规则记忆\"><a href=\"#规则记忆\" class=\"headerlink\" title=\"规则记忆\"></a>规则记忆</h4><table>\n<thead>\n<tr>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.cnblogs.com/lonelyxmas/p/7807017.html\" target=\"_blank\" rel=\"noopener\">css 优先级顺序</a></td>\n<td><a href=\"http://www.css88.com/book/css/\" target=\"_blank\" rel=\"noopener\">css 速查手册</a></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://fontawesome.com/icons?d=gallery&amp;s=brands\" target=\"_blank\" rel=\"noopener\">fontawesome-icons</a></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"杂项\"><a href=\"#杂项\" class=\"headerlink\" title=\"杂项\"></a>杂项</h4><table>\n<thead>\n<tr>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.cnblogs.com/jerrysion/p/5522673.html\" target=\"_blank\" rel=\"noopener\">为什么Url需要转码</a></td>\n<td><a href=\"https://www.jianshu.com/p/dfbc15d919be\" target=\"_blank\" rel=\"noopener\">Junit如何执行异步方法测试</a></td>\n<td><a href=\"https://mp.weixin.qq.com/s/WVBJqqF6HGGJyzI1hc4fPg\" target=\"_blank\" rel=\"noopener\">面试干货</a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"碎片化记忆\"><a href=\"#碎片化记忆\" class=\"headerlink\" title=\"碎片化记忆\"></a>碎片化记忆</h4><ol>\n<li><p>输出javascript对象的方法</p>\n<pre><code>function showObjProperty(obj) { \n    var propertys=&apos;&apos;; \n    var propertyCounts=0; \n    for(i in obj){ \n        if(obj.i !=null) \n            propertys = propertys +i+&apos;属性：&apos;+obj.i+&apos;\\r\\n&apos;; \n        else \n            propertys = propertys +i+&apos;方法\\r\\n&apos;; \n    } \n    alert(propertys); \n} \n\nejs方式输出：&lt;%- propertys %&gt;\n</code></pre></li>\n<li><p>Hexo blog中的theme.post对象中常用属性</p>\n<pre><code>title          标题\ndate           日期\ncategories    分类\nexcerpt        摘要\ntags           标签\npath           路径\ncontent        内容\n_content       原始内容\n</code></pre></li>\n<li><p>是否</p>\n</li>\n</ol>\n"},{"title":"Android学习资料整理(大杂烩)","date":"2017-06-30T14:12:05.000Z","summery":"收集整体工作学习过程中看到的优秀博客，博文，简书，github开源项目，视频资源，公众号，IT教育网站等","_content":"\n### 博客文章集合\n\n[自定义View ---- 匆忙拥挤repeat]\n\n[自定义View ---- aigestudio]\n\n\n\n\n\n\n\n\n[自定义View ---- 匆忙拥挤repeat]:https://blog.csdn.net/column/details/13796.html\n[自定义View ---- aigestudio]:https://blog.csdn.net/aigestudio","source":"_posts/编程学习资源整理.md","raw":"---\ntitle: Android学习资料整理(大杂烩)\ndate: 2017-06-30 22:12:05\ntags: [Android,Linux,Java,Kotlin,blog,github,edu,book]\nsummery: 收集整体工作学习过程中看到的优秀博客，博文，简书，github开源项目，视频资源，公众号，IT教育网站等\n---\n\n### 博客文章集合\n\n[自定义View ---- 匆忙拥挤repeat]\n\n[自定义View ---- aigestudio]\n\n\n\n\n\n\n\n\n[自定义View ---- 匆忙拥挤repeat]:https://blog.csdn.net/column/details/13796.html\n[自定义View ---- aigestudio]:https://blog.csdn.net/aigestudio","slug":"编程学习资源整理","published":1,"updated":"2018-08-09T09:40:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hh4000mjs6szam4imaj","content":"<h3 id=\"博客文章集合\"><a href=\"#博客文章集合\" class=\"headerlink\" title=\"博客文章集合\"></a>博客文章集合</h3><p><a href=\"https://blog.csdn.net/column/details/13796.html\" target=\"_blank\" rel=\"noopener\">自定义View —- 匆忙拥挤repeat</a></p>\n<p><a href=\"https://blog.csdn.net/aigestudio\" target=\"_blank\" rel=\"noopener\">自定义View —- aigestudio</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"博客文章集合\"><a href=\"#博客文章集合\" class=\"headerlink\" title=\"博客文章集合\"></a>博客文章集合</h3><p><a href=\"https://blog.csdn.net/column/details/13796.html\" target=\"_blank\" rel=\"noopener\">自定义View —- 匆忙拥挤repeat</a></p>\n<p><a href=\"https://blog.csdn.net/aigestudio\" target=\"_blank\" rel=\"noopener\">自定义View —- aigestudio</a></p>\n"},{"title":"Android版本特性及minSDKVersion设置","date":"2018-07-15T11:47:20.000Z","summery":"推荐：minSDKVersion=17; 提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如果想要减小apk大小，则可用考虑只提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。下面内容是详细分析过程。","excerpt":"","_content":"\n* 推荐：minSDKVersion=17 \n* 推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。  \n* 如果想要减小apk大小：推荐：提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。\t\t\n    \n\n\t\t\n\t\t\n### 一、理解minSDKVersion \n\n参考自: [Android dashboards]\n\n> * An integer designating the minimum API Level required for the application to run. \nThe Android system will prevent the user from installing the application if the \nsystem's API Level is lower than the value specified in this attribute. You \nshould always declare this attribute.\n> * 应用程序运行所需要的最小api版本，如果手机的系统版本低于app设置的minSDKVersion，\n那么android系统会阻止app安装。始终应该设置minSDKVersion。\n\n\n### 二、Android系统版本特性\n\n|系统版本号|版本名称sdkVersion|Revision|版本特性|关键特性|\n|-----|-----|-----|----|----|\n||27|1|||\n|8.0|26 Oreo |1|[android-8.0-changes]||\n|7.1|25 Nougat|2|||\n|7.0|24 Nougat|2|[android-7.0-changes]||\n|6.0|23 Marshmallow |3|[android-6.0-changes]|Runtime Permission|\n|5.1|22 Lollipop |2|[android-5.1]||\n|5.0|21 Lollipop |2|[android-5.0-changes]|1.ART、自动Multidex <br> 2.Instant Run <br>3.支持 vector drawables|\n|4.4W|20 KitKat Wear|2|||\n|4.4|19 KitKat |4|[android-4.4]|Android 4.4 (API level 20) and lower doesn't support vector drawables,but can use Support Library.If you want to use vector drawables only,you can use <font color=\"red\">Android Support Library 23.2 or higher,Android Plugin for Gradle 2.0 or higher</font> The <code>VectorDrawableCompat</code> class in the Support Library allows you to support VectorDrawable in <font color=\"red\">Android 2.1 (API level 7) and higher.</font> [android-support-library-232]|\n|4.3|18 Jelly Bean|3|[android-4.3]|1.webp lossless compress & transparent alpha channel support|\n|4.2|17 Jelly Bean |3|[android-4.2]|强制@JavascriptInterface|\n|4.1|16 Jelly Bean |5|[android-4.1]||\n|4.0.3|15 IcecreamSandwich|5|[android-4.0.3]||\n|4.0|14 IcecreamSandwich|4|[android-4.0]|Webp lossy compress [convert images to webp]|\n|3.2|13 HoneyComb|1|[android-3.2]| WebP file format for your images,  <br> when targeting Android 3.2 (API level 13) and higher|\n|3.1|12 HoneyComb|3|[android-3.1]||\n|3.0|11 HoneyComb|2|[android-3.0]||\n|2.3.3|10 Gingerbread|2|[android-2.3.3]||\n|2.3|9 Gingerbread|2|[android-2.3]||\n|2.2|8 Froyo |3|[android-2.2]||\n|2.1|7 Eclair |3|[android-2.1]|...|\n\n\n### 三、Android各系统版本占有率分布\n\n1、实时数据参考：[Android dashboards]    \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-b814708f69f28120.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n2、Android Studio中创建项目时提供参考数据    \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-6a2811470cd8a4ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n### 四、Android现有设备屏幕密度分布\n1、实时数据参考：[Android dashboards]  \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-3c5ac8a7f5a19fc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n### 五、Android屏幕密度及代表分辨率\n\n|密度类型|代表分辨率（px）|屏幕密度（dpi）|换算(px/dp)|比例|\n|----|----|----|----|----|\n| 低密度（ldpi） | 240x320 | 120 |1dp=0.75px|3|\n| 中密度（mdpi） | 320x480 | 160 |1dp=1px|4|\n| 高密度（hdpi） | 480x800 | 240|1dp=1.5px|6|\n| 超高密度<font color=\"red\">（xhdpi） </font>| <font color=\"red\">720x1280</font> | 320|1dp=2px|8|\n| 超超高密度（xxhdpi） | 1080x1920 | 480 |1dp=3px|12|\n\n### 六、OpenGL 版本支持\n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-fb082a2bb4321371.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n### 七、主流App支持minSdkVersion\n\n|应用|Andriod最低版本|minSdkVersion|统计日期|\n|----|----|----|----|\n|携程|4.4.4|<font color=\"red\">19</font>|2018-02-11|\n|支付宝|4.3|<font color=\"red\">18</font>|2018-02-11|\n|微信|4.2.x|<font color=\"red\">17</font>|2018-02-11|\n|ofo|4.1.x|16|2018-02-11|\n|QQ|4.0.3|15|2018-02-11|\n|爱奇艺|4.0.3|15|2018-02-11|\n|美团外卖|4.1.x|16|2018-02-11|\n|滴滴出行|4.0.3|15|2018-02-11|\n|优酷|4.1.x|16|2018-02-11|\n|美图秀秀|4.0.3|15|2018-02-11|\n|快手|4.0.3|15|2018-02-11|\n|抖音|4.1.x|16|2018-02-11|\n|今日头条|4.0.3|15|2018-02-11|\n|作业帮|4.0.3|15|2018-02-11|\n|火山小视频|4.0.3|15|2018-02-11|\n|天猫|4.0.3|15|2018-02-11|\n|淘宝|4.0.3|15|2018-02-11|\n\n### 八、结论\n\n1、设置minSDKVersion=17\n\n>1. Android 4.2及以上版本已经覆盖96%的机型。\n2. 微信采用minSDKVersion=17，最小支持到android 4.2版本，我们有理由设想，使用我们应用的用户，一定会使用微信，所以和微信采用相同minSDKVersion即可。\n3. 支付宝minSDKVersion=18，携程minSDKVersion=19，我们采用17不会有问题。   \n\n\t\n2、图片适配屏幕密度xhdpi或者xxhdpi\n\n\n>1. 大部分的设备属于xhdpi屏幕密度范围,xxhdpi设备也有相当保有量。\n2. 分辨率太低的图片，在高密度设备下会被放大儿变模糊，hdpi中的图片会在xhdpi和xxhdpi设备中变得模糊，所以不采用hdpi来适配。\n3. 分辨率太高的图片，android系统缩放时消耗过多内存，例如xxhdpi中的图片再xhdpi和hdpi设备上，会被缩小，分辨率越高，占用内存越多，所以也不适合使用xxhdpi来适配。\n4. 大部分的设备属于xhdpi屏幕密度范围，我们只提供xhdpi一套图片即可完成图片适配。这样在面对hdpi和xxhdpi的设备时候，性能和显示清晰度都可以做到不错。\n\n<font color=\"#f97352\">推荐：minSDKVersion = 17</font></br>\n<font color=\"#f97352\">推荐：想要缩小apk 体积，则提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。</font>\n<font color=\"#f97352\">官方推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如下图\n</font>\n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-89d993c158f0125b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n### 九、参考资料\n\n[Android dashboards]\n\n[Vector Drawable 中文]\n\n[android-8.0-changes]\n\n[convert images to webp]\n\n[android-support-library-232]\n\n[convert images to webp]:https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\n[Android dashboards]:https://developer.android.com/about/dashboards/index.html\n[android-8.0-changes]:https://developer.android.com/about/versions/oreo/android-8.0-changes.html\n[android-7.0-changes]:https://developer.android.com/about/versions/nougat/android-7.0-changes.html\n[android-6.0-changes]:https://developer.android.com/about/versions/marshmallow/android-6.0-changes.html\n[android-5.1]:https://developer.android.com/about/versions/android-5.1.html\n[android-5.0-changes]:https://developer.android.com/about/versions/android-5.0-changes.html\n[android-4.4]:https://developer.android.com/about/versions/android-4.4.html\n[android-4.3]:https://developer.android.com/about/versions/android-4.3.html\n[android-4.2]:https://developer.android.com/about/versions/android-4.2.html\n[android-4.1]:https://developer.android.com/about/versions/android-4.1.html\n[android-4.0.3]:https://developer.android.com/about/versions/android-4.0.3.html\n[android-4.0]:https://developer.android.com/about/versions/android-4.0.html\n[android-3.2]:https://developer.android.com/about/versions/android-3.2.html\n[android-3.1]:https://developer.android.com/about/versions/android-3.1.html\n[android-3.0]:https://developer.android.com/about/versions/android-3.0.html\n[android-2.3.3]:https://developer.android.com/about/versions/android-2.3.3.html\n[android-2.3]:https://developer.android.com/about/versions/android-2.3.html\n[android-2.2]:https://developer.android.com/about/versions/android-2.2.html\n[android-2.1]:https://developer.android.com/about/versions/android-2.1.html\n[android-support-library-232]:https://android-developers.googleblog.com/2016/02/android-support-library-232.html\n[Vector Drawable 中文]:http://www.jb51.net/article/84613.htm\n\n<script>\n   \n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"90px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"80px\";\n       }\n       if(i==3){\n           myth.style.width = \"160px\";\n       }       \n   }\n      \t\n</script>","source":"_posts/Android版本特性及minSDKVersion设置.md","raw":"---\ntitle: Android版本特性及minSDKVersion设置\ndate: 2018-07-15 19:47:20\ntags:\nsummery: 推荐：minSDKVersion=17; 提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如果想要减小apk大小，则可用考虑只提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。下面内容是详细分析过程。\nexcerpt: 推荐：minSDKVersion=17; 提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如果想要减小apk大小，则可用考虑只提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。下面内容是详细分析过程。\n\n---\n\n* 推荐：minSDKVersion=17 \n* 推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。  \n* 如果想要减小apk大小：推荐：提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。\t\t\n    \n\n\t\t\n\t\t\n### 一、理解minSDKVersion \n\n参考自: [Android dashboards]\n\n> * An integer designating the minimum API Level required for the application to run. \nThe Android system will prevent the user from installing the application if the \nsystem's API Level is lower than the value specified in this attribute. You \nshould always declare this attribute.\n> * 应用程序运行所需要的最小api版本，如果手机的系统版本低于app设置的minSDKVersion，\n那么android系统会阻止app安装。始终应该设置minSDKVersion。\n\n\n### 二、Android系统版本特性\n\n|系统版本号|版本名称sdkVersion|Revision|版本特性|关键特性|\n|-----|-----|-----|----|----|\n||27|1|||\n|8.0|26 Oreo |1|[android-8.0-changes]||\n|7.1|25 Nougat|2|||\n|7.0|24 Nougat|2|[android-7.0-changes]||\n|6.0|23 Marshmallow |3|[android-6.0-changes]|Runtime Permission|\n|5.1|22 Lollipop |2|[android-5.1]||\n|5.0|21 Lollipop |2|[android-5.0-changes]|1.ART、自动Multidex <br> 2.Instant Run <br>3.支持 vector drawables|\n|4.4W|20 KitKat Wear|2|||\n|4.4|19 KitKat |4|[android-4.4]|Android 4.4 (API level 20) and lower doesn't support vector drawables,but can use Support Library.If you want to use vector drawables only,you can use <font color=\"red\">Android Support Library 23.2 or higher,Android Plugin for Gradle 2.0 or higher</font> The <code>VectorDrawableCompat</code> class in the Support Library allows you to support VectorDrawable in <font color=\"red\">Android 2.1 (API level 7) and higher.</font> [android-support-library-232]|\n|4.3|18 Jelly Bean|3|[android-4.3]|1.webp lossless compress & transparent alpha channel support|\n|4.2|17 Jelly Bean |3|[android-4.2]|强制@JavascriptInterface|\n|4.1|16 Jelly Bean |5|[android-4.1]||\n|4.0.3|15 IcecreamSandwich|5|[android-4.0.3]||\n|4.0|14 IcecreamSandwich|4|[android-4.0]|Webp lossy compress [convert images to webp]|\n|3.2|13 HoneyComb|1|[android-3.2]| WebP file format for your images,  <br> when targeting Android 3.2 (API level 13) and higher|\n|3.1|12 HoneyComb|3|[android-3.1]||\n|3.0|11 HoneyComb|2|[android-3.0]||\n|2.3.3|10 Gingerbread|2|[android-2.3.3]||\n|2.3|9 Gingerbread|2|[android-2.3]||\n|2.2|8 Froyo |3|[android-2.2]||\n|2.1|7 Eclair |3|[android-2.1]|...|\n\n\n### 三、Android各系统版本占有率分布\n\n1、实时数据参考：[Android dashboards]    \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-b814708f69f28120.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n2、Android Studio中创建项目时提供参考数据    \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-6a2811470cd8a4ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n### 四、Android现有设备屏幕密度分布\n1、实时数据参考：[Android dashboards]  \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-3c5ac8a7f5a19fc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n### 五、Android屏幕密度及代表分辨率\n\n|密度类型|代表分辨率（px）|屏幕密度（dpi）|换算(px/dp)|比例|\n|----|----|----|----|----|\n| 低密度（ldpi） | 240x320 | 120 |1dp=0.75px|3|\n| 中密度（mdpi） | 320x480 | 160 |1dp=1px|4|\n| 高密度（hdpi） | 480x800 | 240|1dp=1.5px|6|\n| 超高密度<font color=\"red\">（xhdpi） </font>| <font color=\"red\">720x1280</font> | 320|1dp=2px|8|\n| 超超高密度（xxhdpi） | 1080x1920 | 480 |1dp=3px|12|\n\n### 六、OpenGL 版本支持\n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-fb082a2bb4321371.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n### 七、主流App支持minSdkVersion\n\n|应用|Andriod最低版本|minSdkVersion|统计日期|\n|----|----|----|----|\n|携程|4.4.4|<font color=\"red\">19</font>|2018-02-11|\n|支付宝|4.3|<font color=\"red\">18</font>|2018-02-11|\n|微信|4.2.x|<font color=\"red\">17</font>|2018-02-11|\n|ofo|4.1.x|16|2018-02-11|\n|QQ|4.0.3|15|2018-02-11|\n|爱奇艺|4.0.3|15|2018-02-11|\n|美团外卖|4.1.x|16|2018-02-11|\n|滴滴出行|4.0.3|15|2018-02-11|\n|优酷|4.1.x|16|2018-02-11|\n|美图秀秀|4.0.3|15|2018-02-11|\n|快手|4.0.3|15|2018-02-11|\n|抖音|4.1.x|16|2018-02-11|\n|今日头条|4.0.3|15|2018-02-11|\n|作业帮|4.0.3|15|2018-02-11|\n|火山小视频|4.0.3|15|2018-02-11|\n|天猫|4.0.3|15|2018-02-11|\n|淘宝|4.0.3|15|2018-02-11|\n\n### 八、结论\n\n1、设置minSDKVersion=17\n\n>1. Android 4.2及以上版本已经覆盖96%的机型。\n2. 微信采用minSDKVersion=17，最小支持到android 4.2版本，我们有理由设想，使用我们应用的用户，一定会使用微信，所以和微信采用相同minSDKVersion即可。\n3. 支付宝minSDKVersion=18，携程minSDKVersion=19，我们采用17不会有问题。   \n\n\t\n2、图片适配屏幕密度xhdpi或者xxhdpi\n\n\n>1. 大部分的设备属于xhdpi屏幕密度范围,xxhdpi设备也有相当保有量。\n2. 分辨率太低的图片，在高密度设备下会被放大儿变模糊，hdpi中的图片会在xhdpi和xxhdpi设备中变得模糊，所以不采用hdpi来适配。\n3. 分辨率太高的图片，android系统缩放时消耗过多内存，例如xxhdpi中的图片再xhdpi和hdpi设备上，会被缩小，分辨率越高，占用内存越多，所以也不适合使用xxhdpi来适配。\n4. 大部分的设备属于xhdpi屏幕密度范围，我们只提供xhdpi一套图片即可完成图片适配。这样在面对hdpi和xxhdpi的设备时候，性能和显示清晰度都可以做到不错。\n\n<font color=\"#f97352\">推荐：minSDKVersion = 17</font></br>\n<font color=\"#f97352\">推荐：想要缩小apk 体积，则提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。</font>\n<font color=\"#f97352\">官方推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如下图\n</font>\n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-89d993c158f0125b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n### 九、参考资料\n\n[Android dashboards]\n\n[Vector Drawable 中文]\n\n[android-8.0-changes]\n\n[convert images to webp]\n\n[android-support-library-232]\n\n[convert images to webp]:https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\n[Android dashboards]:https://developer.android.com/about/dashboards/index.html\n[android-8.0-changes]:https://developer.android.com/about/versions/oreo/android-8.0-changes.html\n[android-7.0-changes]:https://developer.android.com/about/versions/nougat/android-7.0-changes.html\n[android-6.0-changes]:https://developer.android.com/about/versions/marshmallow/android-6.0-changes.html\n[android-5.1]:https://developer.android.com/about/versions/android-5.1.html\n[android-5.0-changes]:https://developer.android.com/about/versions/android-5.0-changes.html\n[android-4.4]:https://developer.android.com/about/versions/android-4.4.html\n[android-4.3]:https://developer.android.com/about/versions/android-4.3.html\n[android-4.2]:https://developer.android.com/about/versions/android-4.2.html\n[android-4.1]:https://developer.android.com/about/versions/android-4.1.html\n[android-4.0.3]:https://developer.android.com/about/versions/android-4.0.3.html\n[android-4.0]:https://developer.android.com/about/versions/android-4.0.html\n[android-3.2]:https://developer.android.com/about/versions/android-3.2.html\n[android-3.1]:https://developer.android.com/about/versions/android-3.1.html\n[android-3.0]:https://developer.android.com/about/versions/android-3.0.html\n[android-2.3.3]:https://developer.android.com/about/versions/android-2.3.3.html\n[android-2.3]:https://developer.android.com/about/versions/android-2.3.html\n[android-2.2]:https://developer.android.com/about/versions/android-2.2.html\n[android-2.1]:https://developer.android.com/about/versions/android-2.1.html\n[android-support-library-232]:https://android-developers.googleblog.com/2016/02/android-support-library-232.html\n[Vector Drawable 中文]:http://www.jb51.net/article/84613.htm\n\n<script>\n   \n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"90px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"80px\";\n       }\n       if(i==3){\n           myth.style.width = \"160px\";\n       }       \n   }\n      \t\n</script>","slug":"Android版本特性及minSDKVersion设置","published":1,"updated":"2018-07-23T14:53:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hjn005cjs6s4k2uen0y","content":"<ul>\n<li>推荐：minSDKVersion=17 </li>\n<li>推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。  </li>\n<li>如果想要减小apk大小：推荐：提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。        </li>\n</ul>\n<h3 id=\"一、理解minSDKVersion\"><a href=\"#一、理解minSDKVersion\" class=\"headerlink\" title=\"一、理解minSDKVersion\"></a>一、理解minSDKVersion</h3><p>参考自: <a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a></p>\n<blockquote>\n<ul>\n<li>An integer designating the minimum API Level required for the application to run.<br>The Android system will prevent the user from installing the application if the<br>system’s API Level is lower than the value specified in this attribute. You<br>should always declare this attribute.</li>\n<li>应用程序运行所需要的最小api版本，如果手机的系统版本低于app设置的minSDKVersion，<br>那么android系统会阻止app安装。始终应该设置minSDKVersion。</li>\n</ul>\n</blockquote>\n<h3 id=\"二、Android系统版本特性\"><a href=\"#二、Android系统版本特性\" class=\"headerlink\" title=\"二、Android系统版本特性\"></a>二、Android系统版本特性</h3><table>\n<thead>\n<tr>\n<th>系统版本号</th>\n<th>版本名称sdkVersion</th>\n<th>Revision</th>\n<th>版本特性</th>\n<th>关键特性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>27</td>\n<td>1</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>8.0</td>\n<td>26 Oreo</td>\n<td>1</td>\n<td><a href=\"https://developer.android.com/about/versions/oreo/android-8.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-8.0-changes</a></td>\n<td></td>\n</tr>\n<tr>\n<td>7.1</td>\n<td>25 Nougat</td>\n<td>2</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>7.0</td>\n<td>24 Nougat</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/nougat/android-7.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-7.0-changes</a></td>\n<td></td>\n</tr>\n<tr>\n<td>6.0</td>\n<td>23 Marshmallow</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/marshmallow/android-6.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-6.0-changes</a></td>\n<td>Runtime Permission</td>\n</tr>\n<tr>\n<td>5.1</td>\n<td>22 Lollipop</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-5.1.html\" target=\"_blank\" rel=\"noopener\">android-5.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>5.0</td>\n<td>21 Lollipop</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-5.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-5.0-changes</a></td>\n<td>1.ART、自动Multidex <br> 2.Instant Run <br>3.支持 vector drawables</td>\n</tr>\n<tr>\n<td>4.4W</td>\n<td>20 KitKat Wear</td>\n<td>2</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>4.4</td>\n<td>19 KitKat</td>\n<td>4</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.4.html\" target=\"_blank\" rel=\"noopener\">android-4.4</a></td>\n<td>Android 4.4 (API level 20) and lower doesn’t support vector drawables,but can use Support Library.If you want to use vector drawables only,you can use <font color=\"red\">Android Support Library 23.2 or higher,Android Plugin for Gradle 2.0 or higher</font> The <code>VectorDrawableCompat</code> class in the Support Library allows you to support VectorDrawable in <font color=\"red\">Android 2.1 (API level 7) and higher.</font> <a href=\"https://android-developers.googleblog.com/2016/02/android-support-library-232.html\" target=\"_blank\" rel=\"noopener\">android-support-library-232</a></td>\n</tr>\n<tr>\n<td>4.3</td>\n<td>18 Jelly Bean</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.3.html\" target=\"_blank\" rel=\"noopener\">android-4.3</a></td>\n<td>1.webp lossless compress &amp; transparent alpha channel support</td>\n</tr>\n<tr>\n<td>4.2</td>\n<td>17 Jelly Bean</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.2.html\" target=\"_blank\" rel=\"noopener\">android-4.2</a></td>\n<td>强制@JavascriptInterface</td>\n</tr>\n<tr>\n<td>4.1</td>\n<td>16 Jelly Bean</td>\n<td>5</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.1.html\" target=\"_blank\" rel=\"noopener\">android-4.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>4.0.3</td>\n<td>15 IcecreamSandwich</td>\n<td>5</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.0.3.html\" target=\"_blank\" rel=\"noopener\">android-4.0.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>4.0</td>\n<td>14 IcecreamSandwich</td>\n<td>4</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.0.html\" target=\"_blank\" rel=\"noopener\">android-4.0</a></td>\n<td>Webp lossy compress <a href=\"https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\" target=\"_blank\" rel=\"noopener\">convert images to webp</a></td>\n</tr>\n<tr>\n<td>3.2</td>\n<td>13 HoneyComb</td>\n<td>1</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.2.html\" target=\"_blank\" rel=\"noopener\">android-3.2</a></td>\n<td>WebP file format for your images,  <br> when targeting Android 3.2 (API level 13) and higher</td>\n</tr>\n<tr>\n<td>3.1</td>\n<td>12 HoneyComb</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.1.html\" target=\"_blank\" rel=\"noopener\">android-3.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>3.0</td>\n<td>11 HoneyComb</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.0.html\" target=\"_blank\" rel=\"noopener\">android-3.0</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.3.3</td>\n<td>10 Gingerbread</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.3.3.html\" target=\"_blank\" rel=\"noopener\">android-2.3.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.3</td>\n<td>9 Gingerbread</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.3.html\" target=\"_blank\" rel=\"noopener\">android-2.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.2</td>\n<td>8 Froyo</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.2.html\" target=\"_blank\" rel=\"noopener\">android-2.2</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.1</td>\n<td>7 Eclair</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.1.html\" target=\"_blank\" rel=\"noopener\">android-2.1</a></td>\n<td>…</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"三、Android各系统版本占有率分布\"><a href=\"#三、Android各系统版本占有率分布\" class=\"headerlink\" title=\"三、Android各系统版本占有率分布\"></a>三、Android各系统版本占有率分布</h3><p>1、实时数据参考：<a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a>    </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-b814708f69f28120.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<p>2、Android Studio中创建项目时提供参考数据    </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-6a2811470cd8a4ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<h3 id=\"四、Android现有设备屏幕密度分布\"><a href=\"#四、Android现有设备屏幕密度分布\" class=\"headerlink\" title=\"四、Android现有设备屏幕密度分布\"></a>四、Android现有设备屏幕密度分布</h3><p>1、实时数据参考：<a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a>  </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-3c5ac8a7f5a19fc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<h3 id=\"五、Android屏幕密度及代表分辨率\"><a href=\"#五、Android屏幕密度及代表分辨率\" class=\"headerlink\" title=\"五、Android屏幕密度及代表分辨率\"></a>五、Android屏幕密度及代表分辨率</h3><table>\n<thead>\n<tr>\n<th>密度类型</th>\n<th>代表分辨率（px）</th>\n<th>屏幕密度（dpi）</th>\n<th>换算(px/dp)</th>\n<th>比例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>低密度（ldpi）</td>\n<td>240x320</td>\n<td>120</td>\n<td>1dp=0.75px</td>\n<td>3</td>\n</tr>\n<tr>\n<td>中密度（mdpi）</td>\n<td>320x480</td>\n<td>160</td>\n<td>1dp=1px</td>\n<td>4</td>\n</tr>\n<tr>\n<td>高密度（hdpi）</td>\n<td>480x800</td>\n<td>240</td>\n<td>1dp=1.5px</td>\n<td>6</td>\n</tr>\n<tr>\n<td>超高密度<font color=\"red\">（xhdpi） </font></td>\n<td><font color=\"red\">720x1280</font></td>\n<td>320</td>\n<td>1dp=2px</td>\n<td>8</td>\n</tr>\n<tr>\n<td>超超高密度（xxhdpi）</td>\n<td>1080x1920</td>\n<td>480</td>\n<td>1dp=3px</td>\n<td>12</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"六、OpenGL-版本支持\"><a href=\"#六、OpenGL-版本支持\" class=\"headerlink\" title=\"六、OpenGL 版本支持\"></a>六、OpenGL 版本支持</h3><div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-fb082a2bb4321371.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n<h3 id=\"七、主流App支持minSdkVersion\"><a href=\"#七、主流App支持minSdkVersion\" class=\"headerlink\" title=\"七、主流App支持minSdkVersion\"></a>七、主流App支持minSdkVersion</h3><table>\n<thead>\n<tr>\n<th>应用</th>\n<th>Andriod最低版本</th>\n<th>minSdkVersion</th>\n<th>统计日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>携程</td>\n<td>4.4.4</td>\n<td><font color=\"red\">19</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>支付宝</td>\n<td>4.3</td>\n<td><font color=\"red\">18</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>微信</td>\n<td>4.2.x</td>\n<td><font color=\"red\">17</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>ofo</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>QQ</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>爱奇艺</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>美团外卖</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>滴滴出行</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>优酷</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>美图秀秀</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>快手</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>抖音</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>今日头条</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>作业帮</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>火山小视频</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>天猫</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>淘宝</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"八、结论\"><a href=\"#八、结论\" class=\"headerlink\" title=\"八、结论\"></a>八、结论</h3><p>1、设置minSDKVersion=17</p>\n<blockquote>\n<ol>\n<li>Android 4.2及以上版本已经覆盖96%的机型。</li>\n<li>微信采用minSDKVersion=17，最小支持到android 4.2版本，我们有理由设想，使用我们应用的用户，一定会使用微信，所以和微信采用相同minSDKVersion即可。</li>\n<li>支付宝minSDKVersion=18，携程minSDKVersion=19，我们采用17不会有问题。   </li>\n</ol>\n</blockquote>\n<p>2、图片适配屏幕密度xhdpi或者xxhdpi</p>\n<blockquote>\n<ol>\n<li>大部分的设备属于xhdpi屏幕密度范围,xxhdpi设备也有相当保有量。</li>\n<li>分辨率太低的图片，在高密度设备下会被放大儿变模糊，hdpi中的图片会在xhdpi和xxhdpi设备中变得模糊，所以不采用hdpi来适配。</li>\n<li>分辨率太高的图片，android系统缩放时消耗过多内存，例如xxhdpi中的图片再xhdpi和hdpi设备上，会被缩小，分辨率越高，占用内存越多，所以也不适合使用xxhdpi来适配。</li>\n<li>大部分的设备属于xhdpi屏幕密度范围，我们只提供xhdpi一套图片即可完成图片适配。这样在面对hdpi和xxhdpi的设备时候，性能和显示清晰度都可以做到不错。</li>\n</ol>\n</blockquote>\n<font color=\"#f97352\">推荐：minSDKVersion = 17</font><br><br><font color=\"#f97352\">推荐：想要缩小apk 体积，则提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。</font><br><font color=\"#f97352\">官方推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如下图<br></font>\n\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-89d993c158f0125b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n<h3 id=\"九、参考资料\"><a href=\"#九、参考资料\" class=\"headerlink\" title=\"九、参考资料\"></a>九、参考资料</h3><p><a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a></p>\n<p><a href=\"http://www.jb51.net/article/84613.htm\" target=\"_blank\" rel=\"noopener\">Vector Drawable 中文</a></p>\n<p><a href=\"https://developer.android.com/about/versions/oreo/android-8.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-8.0-changes</a></p>\n<p><a href=\"https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\" target=\"_blank\" rel=\"noopener\">convert images to webp</a></p>\n<p><a href=\"https://android-developers.googleblog.com/2016/02/android-support-library-232.html\" target=\"_blank\" rel=\"noopener\">android-support-library-232</a></p>\n<script>\n\n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"90px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"80px\";\n       }\n       if(i==3){\n           myth.style.width = \"160px\";\n       }       \n   }\n\n</script>","site":{"data":{}},"more":"<ul>\n<li>推荐：minSDKVersion=17 </li>\n<li>推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。  </li>\n<li>如果想要减小apk大小：推荐：提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。        </li>\n</ul>\n<h3 id=\"一、理解minSDKVersion\"><a href=\"#一、理解minSDKVersion\" class=\"headerlink\" title=\"一、理解minSDKVersion\"></a>一、理解minSDKVersion</h3><p>参考自: <a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a></p>\n<blockquote>\n<ul>\n<li>An integer designating the minimum API Level required for the application to run.<br>The Android system will prevent the user from installing the application if the<br>system’s API Level is lower than the value specified in this attribute. You<br>should always declare this attribute.</li>\n<li>应用程序运行所需要的最小api版本，如果手机的系统版本低于app设置的minSDKVersion，<br>那么android系统会阻止app安装。始终应该设置minSDKVersion。</li>\n</ul>\n</blockquote>\n<h3 id=\"二、Android系统版本特性\"><a href=\"#二、Android系统版本特性\" class=\"headerlink\" title=\"二、Android系统版本特性\"></a>二、Android系统版本特性</h3><table>\n<thead>\n<tr>\n<th>系统版本号</th>\n<th>版本名称sdkVersion</th>\n<th>Revision</th>\n<th>版本特性</th>\n<th>关键特性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>27</td>\n<td>1</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>8.0</td>\n<td>26 Oreo</td>\n<td>1</td>\n<td><a href=\"https://developer.android.com/about/versions/oreo/android-8.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-8.0-changes</a></td>\n<td></td>\n</tr>\n<tr>\n<td>7.1</td>\n<td>25 Nougat</td>\n<td>2</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>7.0</td>\n<td>24 Nougat</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/nougat/android-7.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-7.0-changes</a></td>\n<td></td>\n</tr>\n<tr>\n<td>6.0</td>\n<td>23 Marshmallow</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/marshmallow/android-6.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-6.0-changes</a></td>\n<td>Runtime Permission</td>\n</tr>\n<tr>\n<td>5.1</td>\n<td>22 Lollipop</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-5.1.html\" target=\"_blank\" rel=\"noopener\">android-5.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>5.0</td>\n<td>21 Lollipop</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-5.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-5.0-changes</a></td>\n<td>1.ART、自动Multidex <br> 2.Instant Run <br>3.支持 vector drawables</td>\n</tr>\n<tr>\n<td>4.4W</td>\n<td>20 KitKat Wear</td>\n<td>2</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>4.4</td>\n<td>19 KitKat</td>\n<td>4</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.4.html\" target=\"_blank\" rel=\"noopener\">android-4.4</a></td>\n<td>Android 4.4 (API level 20) and lower doesn’t support vector drawables,but can use Support Library.If you want to use vector drawables only,you can use <font color=\"red\">Android Support Library 23.2 or higher,Android Plugin for Gradle 2.0 or higher</font> The <code>VectorDrawableCompat</code> class in the Support Library allows you to support VectorDrawable in <font color=\"red\">Android 2.1 (API level 7) and higher.</font> <a href=\"https://android-developers.googleblog.com/2016/02/android-support-library-232.html\" target=\"_blank\" rel=\"noopener\">android-support-library-232</a></td>\n</tr>\n<tr>\n<td>4.3</td>\n<td>18 Jelly Bean</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.3.html\" target=\"_blank\" rel=\"noopener\">android-4.3</a></td>\n<td>1.webp lossless compress &amp; transparent alpha channel support</td>\n</tr>\n<tr>\n<td>4.2</td>\n<td>17 Jelly Bean</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.2.html\" target=\"_blank\" rel=\"noopener\">android-4.2</a></td>\n<td>强制@JavascriptInterface</td>\n</tr>\n<tr>\n<td>4.1</td>\n<td>16 Jelly Bean</td>\n<td>5</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.1.html\" target=\"_blank\" rel=\"noopener\">android-4.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>4.0.3</td>\n<td>15 IcecreamSandwich</td>\n<td>5</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.0.3.html\" target=\"_blank\" rel=\"noopener\">android-4.0.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>4.0</td>\n<td>14 IcecreamSandwich</td>\n<td>4</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.0.html\" target=\"_blank\" rel=\"noopener\">android-4.0</a></td>\n<td>Webp lossy compress <a href=\"https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\" target=\"_blank\" rel=\"noopener\">convert images to webp</a></td>\n</tr>\n<tr>\n<td>3.2</td>\n<td>13 HoneyComb</td>\n<td>1</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.2.html\" target=\"_blank\" rel=\"noopener\">android-3.2</a></td>\n<td>WebP file format for your images,  <br> when targeting Android 3.2 (API level 13) and higher</td>\n</tr>\n<tr>\n<td>3.1</td>\n<td>12 HoneyComb</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.1.html\" target=\"_blank\" rel=\"noopener\">android-3.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>3.0</td>\n<td>11 HoneyComb</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.0.html\" target=\"_blank\" rel=\"noopener\">android-3.0</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.3.3</td>\n<td>10 Gingerbread</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.3.3.html\" target=\"_blank\" rel=\"noopener\">android-2.3.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.3</td>\n<td>9 Gingerbread</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.3.html\" target=\"_blank\" rel=\"noopener\">android-2.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.2</td>\n<td>8 Froyo</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.2.html\" target=\"_blank\" rel=\"noopener\">android-2.2</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.1</td>\n<td>7 Eclair</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.1.html\" target=\"_blank\" rel=\"noopener\">android-2.1</a></td>\n<td>…</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"三、Android各系统版本占有率分布\"><a href=\"#三、Android各系统版本占有率分布\" class=\"headerlink\" title=\"三、Android各系统版本占有率分布\"></a>三、Android各系统版本占有率分布</h3><p>1、实时数据参考：<a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a>    </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-b814708f69f28120.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<p>2、Android Studio中创建项目时提供参考数据    </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-6a2811470cd8a4ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<h3 id=\"四、Android现有设备屏幕密度分布\"><a href=\"#四、Android现有设备屏幕密度分布\" class=\"headerlink\" title=\"四、Android现有设备屏幕密度分布\"></a>四、Android现有设备屏幕密度分布</h3><p>1、实时数据参考：<a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a>  </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-3c5ac8a7f5a19fc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<h3 id=\"五、Android屏幕密度及代表分辨率\"><a href=\"#五、Android屏幕密度及代表分辨率\" class=\"headerlink\" title=\"五、Android屏幕密度及代表分辨率\"></a>五、Android屏幕密度及代表分辨率</h3><table>\n<thead>\n<tr>\n<th>密度类型</th>\n<th>代表分辨率（px）</th>\n<th>屏幕密度（dpi）</th>\n<th>换算(px/dp)</th>\n<th>比例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>低密度（ldpi）</td>\n<td>240x320</td>\n<td>120</td>\n<td>1dp=0.75px</td>\n<td>3</td>\n</tr>\n<tr>\n<td>中密度（mdpi）</td>\n<td>320x480</td>\n<td>160</td>\n<td>1dp=1px</td>\n<td>4</td>\n</tr>\n<tr>\n<td>高密度（hdpi）</td>\n<td>480x800</td>\n<td>240</td>\n<td>1dp=1.5px</td>\n<td>6</td>\n</tr>\n<tr>\n<td>超高密度<font color=\"red\">（xhdpi） </font></td>\n<td><font color=\"red\">720x1280</font></td>\n<td>320</td>\n<td>1dp=2px</td>\n<td>8</td>\n</tr>\n<tr>\n<td>超超高密度（xxhdpi）</td>\n<td>1080x1920</td>\n<td>480</td>\n<td>1dp=3px</td>\n<td>12</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"六、OpenGL-版本支持\"><a href=\"#六、OpenGL-版本支持\" class=\"headerlink\" title=\"六、OpenGL 版本支持\"></a>六、OpenGL 版本支持</h3><div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-fb082a2bb4321371.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n<h3 id=\"七、主流App支持minSdkVersion\"><a href=\"#七、主流App支持minSdkVersion\" class=\"headerlink\" title=\"七、主流App支持minSdkVersion\"></a>七、主流App支持minSdkVersion</h3><table>\n<thead>\n<tr>\n<th>应用</th>\n<th>Andriod最低版本</th>\n<th>minSdkVersion</th>\n<th>统计日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>携程</td>\n<td>4.4.4</td>\n<td><font color=\"red\">19</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>支付宝</td>\n<td>4.3</td>\n<td><font color=\"red\">18</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>微信</td>\n<td>4.2.x</td>\n<td><font color=\"red\">17</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>ofo</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>QQ</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>爱奇艺</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>美团外卖</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>滴滴出行</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>优酷</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>美图秀秀</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>快手</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>抖音</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>今日头条</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>作业帮</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>火山小视频</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>天猫</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>淘宝</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"八、结论\"><a href=\"#八、结论\" class=\"headerlink\" title=\"八、结论\"></a>八、结论</h3><p>1、设置minSDKVersion=17</p>\n<blockquote>\n<ol>\n<li>Android 4.2及以上版本已经覆盖96%的机型。</li>\n<li>微信采用minSDKVersion=17，最小支持到android 4.2版本，我们有理由设想，使用我们应用的用户，一定会使用微信，所以和微信采用相同minSDKVersion即可。</li>\n<li>支付宝minSDKVersion=18，携程minSDKVersion=19，我们采用17不会有问题。   </li>\n</ol>\n</blockquote>\n<p>2、图片适配屏幕密度xhdpi或者xxhdpi</p>\n<blockquote>\n<ol>\n<li>大部分的设备属于xhdpi屏幕密度范围,xxhdpi设备也有相当保有量。</li>\n<li>分辨率太低的图片，在高密度设备下会被放大儿变模糊，hdpi中的图片会在xhdpi和xxhdpi设备中变得模糊，所以不采用hdpi来适配。</li>\n<li>分辨率太高的图片，android系统缩放时消耗过多内存，例如xxhdpi中的图片再xhdpi和hdpi设备上，会被缩小，分辨率越高，占用内存越多，所以也不适合使用xxhdpi来适配。</li>\n<li>大部分的设备属于xhdpi屏幕密度范围，我们只提供xhdpi一套图片即可完成图片适配。这样在面对hdpi和xxhdpi的设备时候，性能和显示清晰度都可以做到不错。</li>\n</ol>\n</blockquote>\n<font color=\"#f97352\">推荐：minSDKVersion = 17</font><br><br><font color=\"#f97352\">推荐：想要缩小apk 体积，则提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。</font><br><font color=\"#f97352\">官方推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如下图<br></font>\n\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-89d993c158f0125b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n<h3 id=\"九、参考资料\"><a href=\"#九、参考资料\" class=\"headerlink\" title=\"九、参考资料\"></a>九、参考资料</h3><p><a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a></p>\n<p><a href=\"http://www.jb51.net/article/84613.htm\" target=\"_blank\" rel=\"noopener\">Vector Drawable 中文</a></p>\n<p><a href=\"https://developer.android.com/about/versions/oreo/android-8.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-8.0-changes</a></p>\n<p><a href=\"https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\" target=\"_blank\" rel=\"noopener\">convert images to webp</a></p>\n<p><a href=\"https://android-developers.googleblog.com/2016/02/android-support-library-232.html\" target=\"_blank\" rel=\"noopener\">android-support-library-232</a></p>\n<script>\n\n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"90px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"80px\";\n       }\n       if(i==3){\n           myth.style.width = \"160px\";\n       }       \n   }\n\n</script>"},{"title":"OkHttp快速入门","date":"2018-08-05T11:13:46.000Z","summery":"从OkHttp官方文档开始，一步步了解OkHttp，分析其源码，二次封装，提供Demo并发布到github，最终以组件的方式发布到仓库，提供gradle支持。","_content":"\n### 概述\n\n>1. 学习OkHttp\n2. OkHttp源码分析\n3. 二次封装OkHttp\n4. 参考github中其他二次封装库\n5. 相关推荐\n\n### Request结构\n\n```\nurl\n\nmethod\n\nheaders\n\nbody \n\n```\n\n### Response结构\n\n```\ncode\n\nheaders\n\nbody\n\n```\n\n### OkHttp 框架基本特性\n\n1. Rewriting Requests: add absent headers like below\n\n>\tContent-Type\n\tContent-Length\n\tTransfer-Encoding\n\tUser-Agent\n\tHost\n\tConnection\n\tAccept-Encoding : 便于response知道客户端能接收什么压缩类型的数据\n\tCookie\n\tIf-Modified-Since 和 If-None-Match ：for cache response\n\n2. Rewriting Responses:\n\t\n\tIf transparent compression was used, OkHttp will drop the corresponding response headers Content-Encoding and Content-Length because they don’t apply to the decompressed response body\n\t\n>\tContent-Encoding\n\tContent-Length\n\n3. Follow-up Requests\n\t\n>\t302 redirect\n\tAuthenticator\n\n\t\n4. Retrying Requests\n\t\n### OkHttp功能组件\n\n|名称|说明|\n|---|----|\n| Calls||\n| Dispatcher ||\n| URL |url说明了是明文(http)传输还是密文传输(https);<br>url并没有说明具有用什么加密算法（cryptographic algorithms）来传输;<br>url也没有说明如何验证服务器端证书（certificates）[干这事儿得： HostnameVerifier];<br>url也没有说明哪一个证书应该被信任. [干这事儿得找：SSLSocketFactory ];<br>url也没有说明是否需要代理服务器（proxy server）;<br>url也没有说明如何验证（authenticate ）代理服务器|\n| Address |Addresses specify a webserver (like github.com) and all of the static configuration necessary to connect to that server。In OkHttp some fields of the address come from the URL (scheme, hostname, port) and the rest come from the OkHttpClient.<br>|\n| Route |Routes supply the dynamic information necessary to actually connect to a webserver. This is the specific IP address to attempt (as discovered by a DNS query), the exact proxy server to use (if a ProxySelector is in use), and which version of TLS to negotiate (for HTTPS connections).There may be many routes for a single address. For example, a webserver that is hosted in multiple datacenters may yield multiple IP addresses in its DNS response.|\n|Connections|When you request a URL with OkHttp, here's what it does:<br><br><b>1</b>.It uses the URL and configured OkHttpClient to create an address. This address specifies how we'll connect to the webserver.<br><br><b>2</b>.It attempts to retrieve a connection with that address from the connection pool.<br><br><b>3</b>.If it doesn't find a connection in the pool, it selects a route to attempt. This usually means making a DNS request to get the server's IP addresses. It then selects a TLS version and proxy server if necessary.<br><br><b>4</b>.If it's a new route, it connects by building either a direct socket connection, a TLS tunnel (for HTTPS over an HTTP proxy), or a direct TLS connection. It does TLS handshakes as necessary.<br><br><b>5</b>.it sends the HTTP request and reads the response.<br><br>If there's a problem with the connection, OkHttp will select another route and try again. This allows OkHttp to recover when a subset of a server's addresses are unreachable. It's also useful when a pooled connection is stale or if the attempted TLS version is unsupported.Once the response has been received, the connection will be returned to the pool so it can be reused for a future request. Connections are evicted from the pool after a period of inactivity.|\n\n### OkHttp基本用法步骤\n\n1. 创建OkHttpClient对象\n \n\t```\n\tOkHttpClient okHttpClient = new OkHttpClient.Builder().build();\n\t```\n2. 创建Request对象\n\t\n\t```\n\tRequest request = new Request.Builder()\n\t        .url(host +\"mobile-server/api/sys/config/v1\")\n\t        .build();\n\t```\n3. 创建Call\n\t\n\t```\n\tCall call = okHttpClient.newCall(request);\n\t```\n4. 同步执行request\n\t\n\t```\n\ttry {\n        Response response = call.execute();\n        String result = response.body().string();\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n\t```\n5. 异步执行request\n\t\n\t```\n\tcall.enqueue(new Callback() {\n        @Override\n        public void onFailure(Call call, IOException e) {\n                e.printStackTrace();\n        }\n\n        @Override\n        public void onResponse(Call call, Response response) throws IOException {\n        \t  if(response.isSuccessful()){\n\t\t\t\tResponseBody body = response.body();\n\t\t\t\tjson = body.string();\n\t\t\t\tSystem.out.println(json);\n        \t  }\n        }\n    });\n\t```\n\t\n### OkHttp UseCase\n\n1. Asynchronous Get\n\n```java\nprivate final OkHttpClient client = new OkHttpClient();\n\n  public void run() throws Exception {\n    Request request = new Request.Builder()\n        .url(\"http://publicobject.com/helloworld.txt\")\n        .build();\n\n    client.newCall(request).enqueue(new Callback() {\n      @Override public void onFailure(Call call, IOException e) {\n        e.printStackTrace();\n      }\n\n      @Override public void onResponse(Call call, Response response) throws IOException {\n        try (ResponseBody responseBody = response.body()) {\n          if (!response.isSuccessful()) throw new IOException(\"Unexpected code \" + response);\n\n          Headers responseHeaders = response.headers();\n          for (int i = 0, size = responseHeaders.size(); i < size; i++) {\n            System.out.println(responseHeaders.name(i) + \": \" + responseHeaders.value(i));\n          }\n\n          System.out.println(responseBody.string());\n        }\n      }\n    });\n  }\n```\n2. Accessing Headers\n\n\tTypically HTTP headers work like a Map<String, String>: each field has one value or none. But some headers permit multiple values, like Guava's Multimap. For example, it's legal and common for an HTTP response to supply multiple Vary headers. OkHttp's APIs attempt to make both cases comfortable\n\t\n\theaders通常是key-value组合，类似一个Map<String,String>，但也允许一个key对应多个value。类似Guava's [Multimap].Okhttp同时支持两种类型。\n\t\n```java\nprivate final OkHttpClient client = new OkHttpClient();\n\n  public void run() throws Exception {\n    Request request = new Request.Builder()\n        .url(\"https://api.github.com/repos/square/okhttp/issues\")\n        .header(\"User-Agent\", \"OkHttp Headers.java\")\n        .addHeader(\"Accept\", \"application/json; q=0.5\")\n        .addHeader(\"Accept\", \"application/vnd.github.v3+json\")\n        .build();\n\n    try (Response response = client.newCall(request).execute()) {\n      if (!response.isSuccessful()) throw new IOException(\"Unexpected code \" + response);\n\n      System.out.println(\"Server: \" + response.header(\"Server\"));\n      System.out.println(\"Date: \" + response.header(\"Date\"));\n      System.out.println(\"Vary: \" + response.headers(\"Vary\"));\n    }\n  }\n```\n\n3. Posting a String\n\n```java\npublic static final MediaType MEDIA_TYPE_MARKDOWN\n      = MediaType.parse(\"text/x-markdown; charset=utf-8\");\n\n  private final OkHttpClient client = new OkHttpClient();\n\n  public void run() throws Exception {\n    String postBody = \"\"\n        + \"Releases\\n\"\n        + \"--------\\n\"\n        + \"\\n\"\n        + \" * _1.0_ May 6, 2013\\n\"\n        + \" * _1.1_ June 15, 2013\\n\"\n        + \" * _1.2_ August 11, 2013\\n\";\n\n    Request request = new Request.Builder()\n        .url(\"https://api.github.com/markdown/raw\")\n        .post(RequestBody.create(MEDIA_TYPE_MARKDOWN, postBody))\n        .build();\n\n    try (Response response = client.newCall(request).execute()) {\n      if (!response.isSuccessful()) throw new IOException(\"Unexpected code \" + response);\n\n      System.out.println(response.body().string());\n    }\n  }\n```\n4. \n\t\n\n### Recipes\n|名称|描述|\n|----|----|\n|string()|The string() method on response body is convenient and efficient for small documents. But if the response body is large (greater than 1 MiB), avoid string() because it will load the entire document into memory. In that case, prefer to process the body as a stream.|\n|header(name,value)|use header(name, value) to set the only occurrence of name to value. If there are existing values, they will be removed before the new value is added|\n|addHeader(name,value)|Use addHeader(name, value) to add a header without removing the headers already present|\n|header(name)|从response中读取name对应的最后一个值，通常他就只有一个值，如果没有值，则返回null|\n|headers(name)|从response中读取name对应的所有值|\n\n### 参考链接\n\n[okhttp square]\n\n[okhttp github]\n\n[okhttp github wiki]\n\n[okhttp github]:https://github.com/square/okhttp\n[okhttp square]:http://square.github.io/okhttp/\n[okhttp github wiki]:https://github.com/square/okhttp/wiki\n[Multimap]:http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimap.html\n\n","source":"_posts/OkHttp入门.md","raw":"---\ntitle: OkHttp快速入门\ndate: 2018-08-05 19:13:46\ntags: [OkHttp,http2,https,cache,IPv4,IPv6]\nsummery: 从OkHttp官方文档开始，一步步了解OkHttp，分析其源码，二次封装，提供Demo并发布到github，最终以组件的方式发布到仓库，提供gradle支持。\n---\n\n### 概述\n\n>1. 学习OkHttp\n2. OkHttp源码分析\n3. 二次封装OkHttp\n4. 参考github中其他二次封装库\n5. 相关推荐\n\n### Request结构\n\n```\nurl\n\nmethod\n\nheaders\n\nbody \n\n```\n\n### Response结构\n\n```\ncode\n\nheaders\n\nbody\n\n```\n\n### OkHttp 框架基本特性\n\n1. Rewriting Requests: add absent headers like below\n\n>\tContent-Type\n\tContent-Length\n\tTransfer-Encoding\n\tUser-Agent\n\tHost\n\tConnection\n\tAccept-Encoding : 便于response知道客户端能接收什么压缩类型的数据\n\tCookie\n\tIf-Modified-Since 和 If-None-Match ：for cache response\n\n2. Rewriting Responses:\n\t\n\tIf transparent compression was used, OkHttp will drop the corresponding response headers Content-Encoding and Content-Length because they don’t apply to the decompressed response body\n\t\n>\tContent-Encoding\n\tContent-Length\n\n3. Follow-up Requests\n\t\n>\t302 redirect\n\tAuthenticator\n\n\t\n4. Retrying Requests\n\t\n### OkHttp功能组件\n\n|名称|说明|\n|---|----|\n| Calls||\n| Dispatcher ||\n| URL |url说明了是明文(http)传输还是密文传输(https);<br>url并没有说明具有用什么加密算法（cryptographic algorithms）来传输;<br>url也没有说明如何验证服务器端证书（certificates）[干这事儿得： HostnameVerifier];<br>url也没有说明哪一个证书应该被信任. [干这事儿得找：SSLSocketFactory ];<br>url也没有说明是否需要代理服务器（proxy server）;<br>url也没有说明如何验证（authenticate ）代理服务器|\n| Address |Addresses specify a webserver (like github.com) and all of the static configuration necessary to connect to that server。In OkHttp some fields of the address come from the URL (scheme, hostname, port) and the rest come from the OkHttpClient.<br>|\n| Route |Routes supply the dynamic information necessary to actually connect to a webserver. This is the specific IP address to attempt (as discovered by a DNS query), the exact proxy server to use (if a ProxySelector is in use), and which version of TLS to negotiate (for HTTPS connections).There may be many routes for a single address. For example, a webserver that is hosted in multiple datacenters may yield multiple IP addresses in its DNS response.|\n|Connections|When you request a URL with OkHttp, here's what it does:<br><br><b>1</b>.It uses the URL and configured OkHttpClient to create an address. This address specifies how we'll connect to the webserver.<br><br><b>2</b>.It attempts to retrieve a connection with that address from the connection pool.<br><br><b>3</b>.If it doesn't find a connection in the pool, it selects a route to attempt. This usually means making a DNS request to get the server's IP addresses. It then selects a TLS version and proxy server if necessary.<br><br><b>4</b>.If it's a new route, it connects by building either a direct socket connection, a TLS tunnel (for HTTPS over an HTTP proxy), or a direct TLS connection. It does TLS handshakes as necessary.<br><br><b>5</b>.it sends the HTTP request and reads the response.<br><br>If there's a problem with the connection, OkHttp will select another route and try again. This allows OkHttp to recover when a subset of a server's addresses are unreachable. It's also useful when a pooled connection is stale or if the attempted TLS version is unsupported.Once the response has been received, the connection will be returned to the pool so it can be reused for a future request. Connections are evicted from the pool after a period of inactivity.|\n\n### OkHttp基本用法步骤\n\n1. 创建OkHttpClient对象\n \n\t```\n\tOkHttpClient okHttpClient = new OkHttpClient.Builder().build();\n\t```\n2. 创建Request对象\n\t\n\t```\n\tRequest request = new Request.Builder()\n\t        .url(host +\"mobile-server/api/sys/config/v1\")\n\t        .build();\n\t```\n3. 创建Call\n\t\n\t```\n\tCall call = okHttpClient.newCall(request);\n\t```\n4. 同步执行request\n\t\n\t```\n\ttry {\n        Response response = call.execute();\n        String result = response.body().string();\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n\t```\n5. 异步执行request\n\t\n\t```\n\tcall.enqueue(new Callback() {\n        @Override\n        public void onFailure(Call call, IOException e) {\n                e.printStackTrace();\n        }\n\n        @Override\n        public void onResponse(Call call, Response response) throws IOException {\n        \t  if(response.isSuccessful()){\n\t\t\t\tResponseBody body = response.body();\n\t\t\t\tjson = body.string();\n\t\t\t\tSystem.out.println(json);\n        \t  }\n        }\n    });\n\t```\n\t\n### OkHttp UseCase\n\n1. Asynchronous Get\n\n```java\nprivate final OkHttpClient client = new OkHttpClient();\n\n  public void run() throws Exception {\n    Request request = new Request.Builder()\n        .url(\"http://publicobject.com/helloworld.txt\")\n        .build();\n\n    client.newCall(request).enqueue(new Callback() {\n      @Override public void onFailure(Call call, IOException e) {\n        e.printStackTrace();\n      }\n\n      @Override public void onResponse(Call call, Response response) throws IOException {\n        try (ResponseBody responseBody = response.body()) {\n          if (!response.isSuccessful()) throw new IOException(\"Unexpected code \" + response);\n\n          Headers responseHeaders = response.headers();\n          for (int i = 0, size = responseHeaders.size(); i < size; i++) {\n            System.out.println(responseHeaders.name(i) + \": \" + responseHeaders.value(i));\n          }\n\n          System.out.println(responseBody.string());\n        }\n      }\n    });\n  }\n```\n2. Accessing Headers\n\n\tTypically HTTP headers work like a Map<String, String>: each field has one value or none. But some headers permit multiple values, like Guava's Multimap. For example, it's legal and common for an HTTP response to supply multiple Vary headers. OkHttp's APIs attempt to make both cases comfortable\n\t\n\theaders通常是key-value组合，类似一个Map<String,String>，但也允许一个key对应多个value。类似Guava's [Multimap].Okhttp同时支持两种类型。\n\t\n```java\nprivate final OkHttpClient client = new OkHttpClient();\n\n  public void run() throws Exception {\n    Request request = new Request.Builder()\n        .url(\"https://api.github.com/repos/square/okhttp/issues\")\n        .header(\"User-Agent\", \"OkHttp Headers.java\")\n        .addHeader(\"Accept\", \"application/json; q=0.5\")\n        .addHeader(\"Accept\", \"application/vnd.github.v3+json\")\n        .build();\n\n    try (Response response = client.newCall(request).execute()) {\n      if (!response.isSuccessful()) throw new IOException(\"Unexpected code \" + response);\n\n      System.out.println(\"Server: \" + response.header(\"Server\"));\n      System.out.println(\"Date: \" + response.header(\"Date\"));\n      System.out.println(\"Vary: \" + response.headers(\"Vary\"));\n    }\n  }\n```\n\n3. Posting a String\n\n```java\npublic static final MediaType MEDIA_TYPE_MARKDOWN\n      = MediaType.parse(\"text/x-markdown; charset=utf-8\");\n\n  private final OkHttpClient client = new OkHttpClient();\n\n  public void run() throws Exception {\n    String postBody = \"\"\n        + \"Releases\\n\"\n        + \"--------\\n\"\n        + \"\\n\"\n        + \" * _1.0_ May 6, 2013\\n\"\n        + \" * _1.1_ June 15, 2013\\n\"\n        + \" * _1.2_ August 11, 2013\\n\";\n\n    Request request = new Request.Builder()\n        .url(\"https://api.github.com/markdown/raw\")\n        .post(RequestBody.create(MEDIA_TYPE_MARKDOWN, postBody))\n        .build();\n\n    try (Response response = client.newCall(request).execute()) {\n      if (!response.isSuccessful()) throw new IOException(\"Unexpected code \" + response);\n\n      System.out.println(response.body().string());\n    }\n  }\n```\n4. \n\t\n\n### Recipes\n|名称|描述|\n|----|----|\n|string()|The string() method on response body is convenient and efficient for small documents. But if the response body is large (greater than 1 MiB), avoid string() because it will load the entire document into memory. In that case, prefer to process the body as a stream.|\n|header(name,value)|use header(name, value) to set the only occurrence of name to value. If there are existing values, they will be removed before the new value is added|\n|addHeader(name,value)|Use addHeader(name, value) to add a header without removing the headers already present|\n|header(name)|从response中读取name对应的最后一个值，通常他就只有一个值，如果没有值，则返回null|\n|headers(name)|从response中读取name对应的所有值|\n\n### 参考链接\n\n[okhttp square]\n\n[okhttp github]\n\n[okhttp github wiki]\n\n[okhttp github]:https://github.com/square/okhttp\n[okhttp square]:http://square.github.io/okhttp/\n[okhttp github wiki]:https://github.com/square/okhttp/wiki\n[Multimap]:http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimap.html\n\n","slug":"OkHttp入门","published":1,"updated":"2018-08-17T07:01:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hjo005djs6srcqv1xdg","content":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><blockquote>\n<ol>\n<li>学习OkHttp</li>\n<li>OkHttp源码分析</li>\n<li>二次封装OkHttp</li>\n<li>参考github中其他二次封装库</li>\n<li>相关推荐</li>\n</ol>\n</blockquote>\n<h3 id=\"Request结构\"><a href=\"#Request结构\" class=\"headerlink\" title=\"Request结构\"></a>Request结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url</span><br><span class=\"line\"></span><br><span class=\"line\">method</span><br><span class=\"line\"></span><br><span class=\"line\">headers</span><br><span class=\"line\"></span><br><span class=\"line\">body</span><br></pre></td></tr></table></figure>\n<h3 id=\"Response结构\"><a href=\"#Response结构\" class=\"headerlink\" title=\"Response结构\"></a>Response结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code</span><br><span class=\"line\"></span><br><span class=\"line\">headers</span><br><span class=\"line\"></span><br><span class=\"line\">body</span><br></pre></td></tr></table></figure>\n<h3 id=\"OkHttp-框架基本特性\"><a href=\"#OkHttp-框架基本特性\" class=\"headerlink\" title=\"OkHttp 框架基本特性\"></a>OkHttp 框架基本特性</h3><ol>\n<li>Rewriting Requests: add absent headers like below</li>\n</ol>\n<blockquote>\n<p>   Content-Type<br>    Content-Length<br>    Transfer-Encoding<br>    User-Agent<br>    Host<br>    Connection<br>    Accept-Encoding : 便于response知道客户端能接收什么压缩类型的数据<br>    Cookie<br>    If-Modified-Since 和 If-None-Match ：for cache response</p>\n</blockquote>\n<ol start=\"2\">\n<li><p>Rewriting Responses:</p>\n<p> If transparent compression was used, OkHttp will drop the corresponding response headers Content-Encoding and Content-Length because they don’t apply to the decompressed response body</p>\n</li>\n</ol>\n<blockquote>\n<p>   Content-Encoding<br>    Content-Length</p>\n</blockquote>\n<ol start=\"3\">\n<li>Follow-up Requests</li>\n</ol>\n<blockquote>\n<p>   302 redirect<br>    Authenticator</p>\n</blockquote>\n<ol start=\"4\">\n<li>Retrying Requests</li>\n</ol>\n<h3 id=\"OkHttp功能组件\"><a href=\"#OkHttp功能组件\" class=\"headerlink\" title=\"OkHttp功能组件\"></a>OkHttp功能组件</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Calls</td>\n<td></td>\n</tr>\n<tr>\n<td>Dispatcher</td>\n<td></td>\n</tr>\n<tr>\n<td>URL</td>\n<td>url说明了是明文(http)传输还是密文传输(https);<br>url并没有说明具有用什么加密算法（cryptographic algorithms）来传输;<br>url也没有说明如何验证服务器端证书（certificates）[干这事儿得： HostnameVerifier];<br>url也没有说明哪一个证书应该被信任. [干这事儿得找：SSLSocketFactory ];<br>url也没有说明是否需要代理服务器（proxy server）;<br>url也没有说明如何验证（authenticate ）代理服务器</td>\n</tr>\n<tr>\n<td>Address</td>\n<td>Addresses specify a webserver (like github.com) and all of the static configuration necessary to connect to that server。In OkHttp some fields of the address come from the URL (scheme, hostname, port) and the rest come from the OkHttpClient.<br></td>\n</tr>\n<tr>\n<td>Route</td>\n<td>Routes supply the dynamic information necessary to actually connect to a webserver. This is the specific IP address to attempt (as discovered by a DNS query), the exact proxy server to use (if a ProxySelector is in use), and which version of TLS to negotiate (for HTTPS connections).There may be many routes for a single address. For example, a webserver that is hosted in multiple datacenters may yield multiple IP addresses in its DNS response.</td>\n</tr>\n<tr>\n<td>Connections</td>\n<td>When you request a URL with OkHttp, here’s what it does:<br><br><b>1</b>.It uses the URL and configured OkHttpClient to create an address. This address specifies how we’ll connect to the webserver.<br><br><b>2</b>.It attempts to retrieve a connection with that address from the connection pool.<br><br><b>3</b>.If it doesn’t find a connection in the pool, it selects a route to attempt. This usually means making a DNS request to get the server’s IP addresses. It then selects a TLS version and proxy server if necessary.<br><br><b>4</b>.If it’s a new route, it connects by building either a direct socket connection, a TLS tunnel (for HTTPS over an HTTP proxy), or a direct TLS connection. It does TLS handshakes as necessary.<br><br><b>5</b>.it sends the HTTP request and reads the response.<br><br>If there’s a problem with the connection, OkHttp will select another route and try again. This allows OkHttp to recover when a subset of a server’s addresses are unreachable. It’s also useful when a pooled connection is stale or if the attempted TLS version is unsupported.Once the response has been received, the connection will be returned to the pool so it can be reused for a future request. Connections are evicted from the pool after a period of inactivity.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"OkHttp基本用法步骤\"><a href=\"#OkHttp基本用法步骤\" class=\"headerlink\" title=\"OkHttp基本用法步骤\"></a>OkHttp基本用法步骤</h3><ol>\n<li><p>创建OkHttpClient对象</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OkHttpClient okHttpClient = new OkHttpClient.Builder().build();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建Request对象</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Request request = new Request.Builder()</span><br><span class=\"line\">        .url(host +&quot;mobile-server/api/sys/config/v1&quot;)</span><br><span class=\"line\">        .build();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建Call</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Call call = okHttpClient.newCall(request);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>同步执行request</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">try &#123;</span><br><span class=\"line\">       Response response = call.execute();</span><br><span class=\"line\">       String result = response.body().string();</span><br><span class=\"line\">   &#125; catch (IOException e) &#123;</span><br><span class=\"line\">       e.printStackTrace();</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>异步执行request</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call.enqueue(new Callback() &#123;</span><br><span class=\"line\">       @Override</span><br><span class=\"line\">       public void onFailure(Call call, IOException e) &#123;</span><br><span class=\"line\">               e.printStackTrace();</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       @Override</span><br><span class=\"line\">       public void onResponse(Call call, Response response) throws IOException &#123;</span><br><span class=\"line\">       \t  if(response.isSuccessful())&#123;</span><br><span class=\"line\">\t\t\tResponseBody body = response.body();</span><br><span class=\"line\">\t\t\tjson = body.string();</span><br><span class=\"line\">\t\t\tSystem.out.println(json);</span><br><span class=\"line\">       \t  &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"OkHttp-UseCase\"><a href=\"#OkHttp-UseCase\" class=\"headerlink\" title=\"OkHttp UseCase\"></a>OkHttp UseCase</h3><ol>\n<li>Asynchronous Get</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">        .url(<span class=\"string\">\"http://publicobject.com/helloworld.txt\"</span>)</span><br><span class=\"line\">        .build();</span><br><span class=\"line\"></span><br><span class=\"line\">    client.newCall(request).enqueue(<span class=\"keyword\">new</span> Callback() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onFailure</span><span class=\"params\">(Call call, IOException e)</span> </span>&#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResponse</span><span class=\"params\">(Call call, Response response)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (ResponseBody responseBody = response.body()) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (!response.isSuccessful()) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IOException(<span class=\"string\">\"Unexpected code \"</span> + response);</span><br><span class=\"line\"></span><br><span class=\"line\">          Headers responseHeaders = response.headers();</span><br><span class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, size = responseHeaders.size(); i &lt; size; i++) &#123;</span><br><span class=\"line\">            System.out.println(responseHeaders.name(i) + <span class=\"string\">\": \"</span> + responseHeaders.value(i));</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          System.out.println(responseBody.string());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>Accessing Headers</p>\n<p> Typically HTTP headers work like a Map&lt;String, String&gt;: each field has one value or none. But some headers permit multiple values, like Guava’s Multimap. For example, it’s legal and common for an HTTP response to supply multiple Vary headers. OkHttp’s APIs attempt to make both cases comfortable</p>\n<p> headers通常是key-value组合，类似一个Map&lt;String,String&gt;，但也允许一个key对应多个value。类似Guava’s <a href=\"http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimap.html\" target=\"_blank\" rel=\"noopener\">Multimap</a>.Okhttp同时支持两种类型。</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">        .url(<span class=\"string\">\"https://api.github.com/repos/square/okhttp/issues\"</span>)</span><br><span class=\"line\">        .header(<span class=\"string\">\"User-Agent\"</span>, <span class=\"string\">\"OkHttp Headers.java\"</span>)</span><br><span class=\"line\">        .addHeader(<span class=\"string\">\"Accept\"</span>, <span class=\"string\">\"application/json; q=0.5\"</span>)</span><br><span class=\"line\">        .addHeader(<span class=\"string\">\"Accept\"</span>, <span class=\"string\">\"application/vnd.github.v3+json\"</span>)</span><br><span class=\"line\">        .build();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> (Response response = client.newCall(request).execute()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!response.isSuccessful()) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IOException(<span class=\"string\">\"Unexpected code \"</span> + response);</span><br><span class=\"line\"></span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Server: \"</span> + response.header(<span class=\"string\">\"Server\"</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Date: \"</span> + response.header(<span class=\"string\">\"Date\"</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Vary: \"</span> + response.headers(<span class=\"string\">\"Vary\"</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>Posting a String</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> MediaType MEDIA_TYPE_MARKDOWN</span><br><span class=\"line\">      = MediaType.parse(<span class=\"string\">\"text/x-markdown; charset=utf-8\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    String postBody = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        + <span class=\"string\">\"Releases\\n\"</span></span><br><span class=\"line\">        + <span class=\"string\">\"--------\\n\"</span></span><br><span class=\"line\">        + <span class=\"string\">\"\\n\"</span></span><br><span class=\"line\">        + <span class=\"string\">\" * _1.0_ May 6, 2013\\n\"</span></span><br><span class=\"line\">        + <span class=\"string\">\" * _1.1_ June 15, 2013\\n\"</span></span><br><span class=\"line\">        + <span class=\"string\">\" * _1.2_ August 11, 2013\\n\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">        .url(<span class=\"string\">\"https://api.github.com/markdown/raw\"</span>)</span><br><span class=\"line\">        .post(RequestBody.create(MEDIA_TYPE_MARKDOWN, postBody))</span><br><span class=\"line\">        .build();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> (Response response = client.newCall(request).execute()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!response.isSuccessful()) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IOException(<span class=\"string\">\"Unexpected code \"</span> + response);</span><br><span class=\"line\"></span><br><span class=\"line\">      System.out.println(response.body().string());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li></li>\n</ol>\n<h3 id=\"Recipes\"><a href=\"#Recipes\" class=\"headerlink\" title=\"Recipes\"></a>Recipes</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>string()</td>\n<td>The string() method on response body is convenient and efficient for small documents. But if the response body is large (greater than 1 MiB), avoid string() because it will load the entire document into memory. In that case, prefer to process the body as a stream.</td>\n</tr>\n<tr>\n<td>header(name,value)</td>\n<td>use header(name, value) to set the only occurrence of name to value. If there are existing values, they will be removed before the new value is added</td>\n</tr>\n<tr>\n<td>addHeader(name,value)</td>\n<td>Use addHeader(name, value) to add a header without removing the headers already present</td>\n</tr>\n<tr>\n<td>header(name)</td>\n<td>从response中读取name对应的最后一个值，通常他就只有一个值，如果没有值，则返回null</td>\n</tr>\n<tr>\n<td>headers(name)</td>\n<td>从response中读取name对应的所有值</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><p><a href=\"http://square.github.io/okhttp/\" target=\"_blank\" rel=\"noopener\">okhttp square</a></p>\n<p><a href=\"https://github.com/square/okhttp\" target=\"_blank\" rel=\"noopener\">okhttp github</a></p>\n<p><a href=\"https://github.com/square/okhttp/wiki\" target=\"_blank\" rel=\"noopener\">okhttp github wiki</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><blockquote>\n<ol>\n<li>学习OkHttp</li>\n<li>OkHttp源码分析</li>\n<li>二次封装OkHttp</li>\n<li>参考github中其他二次封装库</li>\n<li>相关推荐</li>\n</ol>\n</blockquote>\n<h3 id=\"Request结构\"><a href=\"#Request结构\" class=\"headerlink\" title=\"Request结构\"></a>Request结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url</span><br><span class=\"line\"></span><br><span class=\"line\">method</span><br><span class=\"line\"></span><br><span class=\"line\">headers</span><br><span class=\"line\"></span><br><span class=\"line\">body</span><br></pre></td></tr></table></figure>\n<h3 id=\"Response结构\"><a href=\"#Response结构\" class=\"headerlink\" title=\"Response结构\"></a>Response结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code</span><br><span class=\"line\"></span><br><span class=\"line\">headers</span><br><span class=\"line\"></span><br><span class=\"line\">body</span><br></pre></td></tr></table></figure>\n<h3 id=\"OkHttp-框架基本特性\"><a href=\"#OkHttp-框架基本特性\" class=\"headerlink\" title=\"OkHttp 框架基本特性\"></a>OkHttp 框架基本特性</h3><ol>\n<li>Rewriting Requests: add absent headers like below</li>\n</ol>\n<blockquote>\n<p>   Content-Type<br>    Content-Length<br>    Transfer-Encoding<br>    User-Agent<br>    Host<br>    Connection<br>    Accept-Encoding : 便于response知道客户端能接收什么压缩类型的数据<br>    Cookie<br>    If-Modified-Since 和 If-None-Match ：for cache response</p>\n</blockquote>\n<ol start=\"2\">\n<li><p>Rewriting Responses:</p>\n<p> If transparent compression was used, OkHttp will drop the corresponding response headers Content-Encoding and Content-Length because they don’t apply to the decompressed response body</p>\n</li>\n</ol>\n<blockquote>\n<p>   Content-Encoding<br>    Content-Length</p>\n</blockquote>\n<ol start=\"3\">\n<li>Follow-up Requests</li>\n</ol>\n<blockquote>\n<p>   302 redirect<br>    Authenticator</p>\n</blockquote>\n<ol start=\"4\">\n<li>Retrying Requests</li>\n</ol>\n<h3 id=\"OkHttp功能组件\"><a href=\"#OkHttp功能组件\" class=\"headerlink\" title=\"OkHttp功能组件\"></a>OkHttp功能组件</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Calls</td>\n<td></td>\n</tr>\n<tr>\n<td>Dispatcher</td>\n<td></td>\n</tr>\n<tr>\n<td>URL</td>\n<td>url说明了是明文(http)传输还是密文传输(https);<br>url并没有说明具有用什么加密算法（cryptographic algorithms）来传输;<br>url也没有说明如何验证服务器端证书（certificates）[干这事儿得： HostnameVerifier];<br>url也没有说明哪一个证书应该被信任. [干这事儿得找：SSLSocketFactory ];<br>url也没有说明是否需要代理服务器（proxy server）;<br>url也没有说明如何验证（authenticate ）代理服务器</td>\n</tr>\n<tr>\n<td>Address</td>\n<td>Addresses specify a webserver (like github.com) and all of the static configuration necessary to connect to that server。In OkHttp some fields of the address come from the URL (scheme, hostname, port) and the rest come from the OkHttpClient.<br></td>\n</tr>\n<tr>\n<td>Route</td>\n<td>Routes supply the dynamic information necessary to actually connect to a webserver. This is the specific IP address to attempt (as discovered by a DNS query), the exact proxy server to use (if a ProxySelector is in use), and which version of TLS to negotiate (for HTTPS connections).There may be many routes for a single address. For example, a webserver that is hosted in multiple datacenters may yield multiple IP addresses in its DNS response.</td>\n</tr>\n<tr>\n<td>Connections</td>\n<td>When you request a URL with OkHttp, here’s what it does:<br><br><b>1</b>.It uses the URL and configured OkHttpClient to create an address. This address specifies how we’ll connect to the webserver.<br><br><b>2</b>.It attempts to retrieve a connection with that address from the connection pool.<br><br><b>3</b>.If it doesn’t find a connection in the pool, it selects a route to attempt. This usually means making a DNS request to get the server’s IP addresses. It then selects a TLS version and proxy server if necessary.<br><br><b>4</b>.If it’s a new route, it connects by building either a direct socket connection, a TLS tunnel (for HTTPS over an HTTP proxy), or a direct TLS connection. It does TLS handshakes as necessary.<br><br><b>5</b>.it sends the HTTP request and reads the response.<br><br>If there’s a problem with the connection, OkHttp will select another route and try again. This allows OkHttp to recover when a subset of a server’s addresses are unreachable. It’s also useful when a pooled connection is stale or if the attempted TLS version is unsupported.Once the response has been received, the connection will be returned to the pool so it can be reused for a future request. Connections are evicted from the pool after a period of inactivity.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"OkHttp基本用法步骤\"><a href=\"#OkHttp基本用法步骤\" class=\"headerlink\" title=\"OkHttp基本用法步骤\"></a>OkHttp基本用法步骤</h3><ol>\n<li><p>创建OkHttpClient对象</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OkHttpClient okHttpClient = new OkHttpClient.Builder().build();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建Request对象</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Request request = new Request.Builder()</span><br><span class=\"line\">        .url(host +&quot;mobile-server/api/sys/config/v1&quot;)</span><br><span class=\"line\">        .build();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建Call</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Call call = okHttpClient.newCall(request);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>同步执行request</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">try &#123;</span><br><span class=\"line\">       Response response = call.execute();</span><br><span class=\"line\">       String result = response.body().string();</span><br><span class=\"line\">   &#125; catch (IOException e) &#123;</span><br><span class=\"line\">       e.printStackTrace();</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>异步执行request</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call.enqueue(new Callback() &#123;</span><br><span class=\"line\">       @Override</span><br><span class=\"line\">       public void onFailure(Call call, IOException e) &#123;</span><br><span class=\"line\">               e.printStackTrace();</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       @Override</span><br><span class=\"line\">       public void onResponse(Call call, Response response) throws IOException &#123;</span><br><span class=\"line\">       \t  if(response.isSuccessful())&#123;</span><br><span class=\"line\">\t\t\tResponseBody body = response.body();</span><br><span class=\"line\">\t\t\tjson = body.string();</span><br><span class=\"line\">\t\t\tSystem.out.println(json);</span><br><span class=\"line\">       \t  &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"OkHttp-UseCase\"><a href=\"#OkHttp-UseCase\" class=\"headerlink\" title=\"OkHttp UseCase\"></a>OkHttp UseCase</h3><ol>\n<li>Asynchronous Get</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">        .url(<span class=\"string\">\"http://publicobject.com/helloworld.txt\"</span>)</span><br><span class=\"line\">        .build();</span><br><span class=\"line\"></span><br><span class=\"line\">    client.newCall(request).enqueue(<span class=\"keyword\">new</span> Callback() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onFailure</span><span class=\"params\">(Call call, IOException e)</span> </span>&#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResponse</span><span class=\"params\">(Call call, Response response)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (ResponseBody responseBody = response.body()) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (!response.isSuccessful()) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IOException(<span class=\"string\">\"Unexpected code \"</span> + response);</span><br><span class=\"line\"></span><br><span class=\"line\">          Headers responseHeaders = response.headers();</span><br><span class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, size = responseHeaders.size(); i &lt; size; i++) &#123;</span><br><span class=\"line\">            System.out.println(responseHeaders.name(i) + <span class=\"string\">\": \"</span> + responseHeaders.value(i));</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          System.out.println(responseBody.string());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>Accessing Headers</p>\n<p> Typically HTTP headers work like a Map&lt;String, String&gt;: each field has one value or none. But some headers permit multiple values, like Guava’s Multimap. For example, it’s legal and common for an HTTP response to supply multiple Vary headers. OkHttp’s APIs attempt to make both cases comfortable</p>\n<p> headers通常是key-value组合，类似一个Map&lt;String,String&gt;，但也允许一个key对应多个value。类似Guava’s <a href=\"http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimap.html\" target=\"_blank\" rel=\"noopener\">Multimap</a>.Okhttp同时支持两种类型。</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">        .url(<span class=\"string\">\"https://api.github.com/repos/square/okhttp/issues\"</span>)</span><br><span class=\"line\">        .header(<span class=\"string\">\"User-Agent\"</span>, <span class=\"string\">\"OkHttp Headers.java\"</span>)</span><br><span class=\"line\">        .addHeader(<span class=\"string\">\"Accept\"</span>, <span class=\"string\">\"application/json; q=0.5\"</span>)</span><br><span class=\"line\">        .addHeader(<span class=\"string\">\"Accept\"</span>, <span class=\"string\">\"application/vnd.github.v3+json\"</span>)</span><br><span class=\"line\">        .build();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> (Response response = client.newCall(request).execute()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!response.isSuccessful()) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IOException(<span class=\"string\">\"Unexpected code \"</span> + response);</span><br><span class=\"line\"></span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Server: \"</span> + response.header(<span class=\"string\">\"Server\"</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Date: \"</span> + response.header(<span class=\"string\">\"Date\"</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Vary: \"</span> + response.headers(<span class=\"string\">\"Vary\"</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>Posting a String</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> MediaType MEDIA_TYPE_MARKDOWN</span><br><span class=\"line\">      = MediaType.parse(<span class=\"string\">\"text/x-markdown; charset=utf-8\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    String postBody = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        + <span class=\"string\">\"Releases\\n\"</span></span><br><span class=\"line\">        + <span class=\"string\">\"--------\\n\"</span></span><br><span class=\"line\">        + <span class=\"string\">\"\\n\"</span></span><br><span class=\"line\">        + <span class=\"string\">\" * _1.0_ May 6, 2013\\n\"</span></span><br><span class=\"line\">        + <span class=\"string\">\" * _1.1_ June 15, 2013\\n\"</span></span><br><span class=\"line\">        + <span class=\"string\">\" * _1.2_ August 11, 2013\\n\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">        .url(<span class=\"string\">\"https://api.github.com/markdown/raw\"</span>)</span><br><span class=\"line\">        .post(RequestBody.create(MEDIA_TYPE_MARKDOWN, postBody))</span><br><span class=\"line\">        .build();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> (Response response = client.newCall(request).execute()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!response.isSuccessful()) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IOException(<span class=\"string\">\"Unexpected code \"</span> + response);</span><br><span class=\"line\"></span><br><span class=\"line\">      System.out.println(response.body().string());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li></li>\n</ol>\n<h3 id=\"Recipes\"><a href=\"#Recipes\" class=\"headerlink\" title=\"Recipes\"></a>Recipes</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>string()</td>\n<td>The string() method on response body is convenient and efficient for small documents. But if the response body is large (greater than 1 MiB), avoid string() because it will load the entire document into memory. In that case, prefer to process the body as a stream.</td>\n</tr>\n<tr>\n<td>header(name,value)</td>\n<td>use header(name, value) to set the only occurrence of name to value. If there are existing values, they will be removed before the new value is added</td>\n</tr>\n<tr>\n<td>addHeader(name,value)</td>\n<td>Use addHeader(name, value) to add a header without removing the headers already present</td>\n</tr>\n<tr>\n<td>header(name)</td>\n<td>从response中读取name对应的最后一个值，通常他就只有一个值，如果没有值，则返回null</td>\n</tr>\n<tr>\n<td>headers(name)</td>\n<td>从response中读取name对应的所有值</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><p><a href=\"http://square.github.io/okhttp/\" target=\"_blank\" rel=\"noopener\">okhttp square</a></p>\n<p><a href=\"https://github.com/square/okhttp\" target=\"_blank\" rel=\"noopener\">okhttp github</a></p>\n<p><a href=\"https://github.com/square/okhttp/wiki\" target=\"_blank\" rel=\"noopener\">okhttp github wiki</a></p>\n"},{"title":"使用markdown撰写博客：博客模板","date":"2018-07-12T14:47:20.000Z","summery":"这里应该写该文章的摘要，一般在160以内，多余的字会显示成... 并且该内容将在主页的文章列表中显示。","_content":"\n* 推荐：minSDKVersion=17 \n* 推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。  \n* 如果想要减小apk大小：推荐：提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。\t\t\n    \n\n\t\t\n\t\t\n### 一、理解minSDKVersion \n\n参考自: [Android dashboards]\n\n> * An integer designating the minimum API Level required for the application to run. \nThe Android system will prevent the user from installing the application if the \nsystem's API Level is lower than the value specified in this attribute. You \nshould always declare this attribute.\n> * 应用程序运行所需要的最小api版本，如果手机的系统版本低于app设置的minSDKVersion，\n那么android系统会阻止app安装。始终应该设置minSDKVersion。\n\n\n### 二、Android系统版本特性\n\n|系统版本号|版本名称sdkVersion|Revision|版本特性|关键特性|\n|-----|-----|-----|----|----|\n||27|1|||\n|8.0|26 Oreo |1|[android-8.0-changes]||\n|7.1|25 Nougat|2|||\n|7.0|24 Nougat|2|[android-7.0-changes]||\n|6.0|23 Marshmallow |3|[android-6.0-changes]|Runtime Permission|\n|5.1|22 Lollipop |2|[android-5.1]||\n|5.0|21 Lollipop |2|[android-5.0-changes]|1.ART、自动Multidex <br> 2.Instant Run <br>3.支持 vector drawables|\n|4.4W|20 KitKat Wear|2|||\n|4.4|19 KitKat |4|[android-4.4]|Android 4.4 (API level 20) and lower doesn't support vector drawables,but can use Support Library.If you want to use vector drawables only,you can use <font color=\"red\">Android Support Library 23.2 or higher,Android Plugin for Gradle 2.0 or higher</font> The <code>VectorDrawableCompat</code> class in the Support Library allows you to support VectorDrawable in <font color=\"red\">Android 2.1 (API level 7) and higher.</font> [android-support-library-232]|\n|4.3|18 Jelly Bean|3|[android-4.3]|1.webp lossless compress & transparent alpha channel support|\n|4.2|17 Jelly Bean |3|[android-4.2]|强制@JavascriptInterface|\n|4.1|16 Jelly Bean |5|[android-4.1]||\n|4.0.3|15 IcecreamSandwich|5|[android-4.0.3]||\n|4.0|14 IcecreamSandwich|4|[android-4.0]|Webp lossy compress [convert images to webp]|\n|3.2|13 HoneyComb|1|[android-3.2]| WebP file format for your images,  <br> when targeting Android 3.2 (API level 13) and higher|\n|3.1|12 HoneyComb|3|[android-3.1]||\n|3.0|11 HoneyComb|2|[android-3.0]||\n|2.3.3|10 Gingerbread|2|[android-2.3.3]||\n|2.3|9 Gingerbread|2|[android-2.3]||\n|2.2|8 Froyo |3|[android-2.2]||\n|2.1|7 Eclair |3|[android-2.1]|...|\n\n\n### 三、Android各系统版本占有率分布\n\n1、实时数据参考：[Android dashboards]    \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-b814708f69f28120.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n2、Android Studio中创建项目时提供参考数据    \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-6a2811470cd8a4ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n### 四、Android现有设备屏幕密度分布\n1、实时数据参考：[Android dashboards]  \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-3c5ac8a7f5a19fc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n### 五、Android屏幕密度及代表分辨率\n\n|密度类型|代表分辨率（px）|屏幕密度（dpi）|换算(px/dp)|比例|\n|----|----|----|----|----|\n| 低密度（ldpi） | 240x320 | 120 |1dp=0.75px|3|\n| 中密度（mdpi） | 320x480 | 160 |1dp=1px|4|\n| 高密度（hdpi） | 480x800 | 240|1dp=1.5px|6|\n| 超高密度<font color=\"red\">（xhdpi） </font>| <font color=\"red\">720x1280</font> | 320|1dp=2px|8|\n| 超超高密度（xxhdpi） | 1080x1920 | 480 |1dp=3px|12|\n\n### 六、OpenGL 版本支持\n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-fb082a2bb4321371.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n### 七、主流App支持minSdkVersion\n\n|应用|Andriod最低版本|minSdkVersion|统计日期|\n|----|----|----|----|\n|携程|4.4.4|<font color=\"red\">19</font>|2018-02-11|\n|支付宝|4.3|<font color=\"red\">18</font>|2018-02-11|\n|微信|4.2.x|<font color=\"red\">17</font>|2018-02-11|\n|ofo|4.1.x|16|2018-02-11|\n|QQ|4.0.3|15|2018-02-11|\n|爱奇艺|4.0.3|15|2018-02-11|\n|美团外卖|4.1.x|16|2018-02-11|\n|滴滴出行|4.0.3|15|2018-02-11|\n|优酷|4.1.x|16|2018-02-11|\n|美图秀秀|4.0.3|15|2018-02-11|\n|快手|4.0.3|15|2018-02-11|\n|抖音|4.1.x|16|2018-02-11|\n|今日头条|4.0.3|15|2018-02-11|\n|作业帮|4.0.3|15|2018-02-11|\n|火山小视频|4.0.3|15|2018-02-11|\n|天猫|4.0.3|15|2018-02-11|\n|淘宝|4.0.3|15|2018-02-11|\n\n### 八、结论\n\n1、设置minSDKVersion=17\n\n>1. Android 4.2及以上版本已经覆盖96%的机型。\n2. 微信采用minSDKVersion=17，最小支持到android 4.2版本，我们有理由设想，使用我们应用的用户，一定会使用微信，所以和微信采用相同minSDKVersion即可。\n3. 支付宝minSDKVersion=18，携程minSDKVersion=19，我们采用17不会有问题。   \n\n\t\n2、图片适配屏幕密度xhdpi或者xxhdpi\n\n\n>1. 大部分的设备属于xhdpi屏幕密度范围,xxhdpi设备也有相当保有量。\n2. 分辨率太低的图片，在高密度设备下会被放大儿变模糊，hdpi中的图片会在xhdpi和xxhdpi设备中变得模糊，所以不采用hdpi来适配。\n3. 分辨率太高的图片，android系统缩放时消耗过多内存，例如xxhdpi中的图片再xhdpi和hdpi设备上，会被缩小，分辨率越高，占用内存越多，所以也不适合使用xxhdpi来适配。\n4. 大部分的设备属于xhdpi屏幕密度范围，我们只提供xhdpi一套图片即可完成图片适配。这样在面对hdpi和xxhdpi的设备时候，性能和显示清晰度都可以做到不错。\n\n<font color=\"#f97352\">推荐：minSDKVersion = 17</font></br>\n<font color=\"#f97352\">推荐：想要缩小apk 体积，则提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。</font>\n<font color=\"#f97352\">官方推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如下图\n</font>\n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-89d993c158f0125b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n### 九、参考资料\n\n[Android dashboards]\n\n[Vector Drawable 中文]\n\n[android-8.0-changes]\n\n[convert images to webp]\n\n[android-support-library-232]\n\n[convert images to webp]:https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\n[Android dashboards]:https://developer.android.com/about/dashboards/index.html\n[android-8.0-changes]:https://developer.android.com/about/versions/oreo/android-8.0-changes.html\n[android-7.0-changes]:https://developer.android.com/about/versions/nougat/android-7.0-changes.html\n[android-6.0-changes]:https://developer.android.com/about/versions/marshmallow/android-6.0-changes.html\n[android-5.1]:https://developer.android.com/about/versions/android-5.1.html\n[android-5.0-changes]:https://developer.android.com/about/versions/android-5.0-changes.html\n[android-4.4]:https://developer.android.com/about/versions/android-4.4.html\n[android-4.3]:https://developer.android.com/about/versions/android-4.3.html\n[android-4.2]:https://developer.android.com/about/versions/android-4.2.html\n[android-4.1]:https://developer.android.com/about/versions/android-4.1.html\n[android-4.0.3]:https://developer.android.com/about/versions/android-4.0.3.html\n[android-4.0]:https://developer.android.com/about/versions/android-4.0.html\n[android-3.2]:https://developer.android.com/about/versions/android-3.2.html\n[android-3.1]:https://developer.android.com/about/versions/android-3.1.html\n[android-3.0]:https://developer.android.com/about/versions/android-3.0.html\n[android-2.3.3]:https://developer.android.com/about/versions/android-2.3.3.html\n[android-2.3]:https://developer.android.com/about/versions/android-2.3.html\n[android-2.2]:https://developer.android.com/about/versions/android-2.2.html\n[android-2.1]:https://developer.android.com/about/versions/android-2.1.html\n[android-support-library-232]:https://android-developers.googleblog.com/2016/02/android-support-library-232.html\n[Vector Drawable 中文]:http://www.jb51.net/article/84613.htm\n\n<script>\n   \n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"90px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"80px\";\n       }\n       if(i==3){\n           myth.style.width = \"160px\";\n       }       \n   }\n      \t\n</script>","source":"_posts/markdown-blog-template.md","raw":"---\ntitle: 使用markdown撰写博客：博客模板\ndate: 2018-07-12 22:47:20\ntags:\nsummery: 这里应该写该文章的摘要，一般在160以内，多余的字会显示成... 并且该内容将在主页的文章列表中显示。\n\n---\n\n* 推荐：minSDKVersion=17 \n* 推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。  \n* 如果想要减小apk大小：推荐：提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。\t\t\n    \n\n\t\t\n\t\t\n### 一、理解minSDKVersion \n\n参考自: [Android dashboards]\n\n> * An integer designating the minimum API Level required for the application to run. \nThe Android system will prevent the user from installing the application if the \nsystem's API Level is lower than the value specified in this attribute. You \nshould always declare this attribute.\n> * 应用程序运行所需要的最小api版本，如果手机的系统版本低于app设置的minSDKVersion，\n那么android系统会阻止app安装。始终应该设置minSDKVersion。\n\n\n### 二、Android系统版本特性\n\n|系统版本号|版本名称sdkVersion|Revision|版本特性|关键特性|\n|-----|-----|-----|----|----|\n||27|1|||\n|8.0|26 Oreo |1|[android-8.0-changes]||\n|7.1|25 Nougat|2|||\n|7.0|24 Nougat|2|[android-7.0-changes]||\n|6.0|23 Marshmallow |3|[android-6.0-changes]|Runtime Permission|\n|5.1|22 Lollipop |2|[android-5.1]||\n|5.0|21 Lollipop |2|[android-5.0-changes]|1.ART、自动Multidex <br> 2.Instant Run <br>3.支持 vector drawables|\n|4.4W|20 KitKat Wear|2|||\n|4.4|19 KitKat |4|[android-4.4]|Android 4.4 (API level 20) and lower doesn't support vector drawables,but can use Support Library.If you want to use vector drawables only,you can use <font color=\"red\">Android Support Library 23.2 or higher,Android Plugin for Gradle 2.0 or higher</font> The <code>VectorDrawableCompat</code> class in the Support Library allows you to support VectorDrawable in <font color=\"red\">Android 2.1 (API level 7) and higher.</font> [android-support-library-232]|\n|4.3|18 Jelly Bean|3|[android-4.3]|1.webp lossless compress & transparent alpha channel support|\n|4.2|17 Jelly Bean |3|[android-4.2]|强制@JavascriptInterface|\n|4.1|16 Jelly Bean |5|[android-4.1]||\n|4.0.3|15 IcecreamSandwich|5|[android-4.0.3]||\n|4.0|14 IcecreamSandwich|4|[android-4.0]|Webp lossy compress [convert images to webp]|\n|3.2|13 HoneyComb|1|[android-3.2]| WebP file format for your images,  <br> when targeting Android 3.2 (API level 13) and higher|\n|3.1|12 HoneyComb|3|[android-3.1]||\n|3.0|11 HoneyComb|2|[android-3.0]||\n|2.3.3|10 Gingerbread|2|[android-2.3.3]||\n|2.3|9 Gingerbread|2|[android-2.3]||\n|2.2|8 Froyo |3|[android-2.2]||\n|2.1|7 Eclair |3|[android-2.1]|...|\n\n\n### 三、Android各系统版本占有率分布\n\n1、实时数据参考：[Android dashboards]    \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-b814708f69f28120.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n2、Android Studio中创建项目时提供参考数据    \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-6a2811470cd8a4ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n### 四、Android现有设备屏幕密度分布\n1、实时数据参考：[Android dashboards]  \n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-3c5ac8a7f5a19fc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n\n### 五、Android屏幕密度及代表分辨率\n\n|密度类型|代表分辨率（px）|屏幕密度（dpi）|换算(px/dp)|比例|\n|----|----|----|----|----|\n| 低密度（ldpi） | 240x320 | 120 |1dp=0.75px|3|\n| 中密度（mdpi） | 320x480 | 160 |1dp=1px|4|\n| 高密度（hdpi） | 480x800 | 240|1dp=1.5px|6|\n| 超高密度<font color=\"red\">（xhdpi） </font>| <font color=\"red\">720x1280</font> | 320|1dp=2px|8|\n| 超超高密度（xxhdpi） | 1080x1920 | 480 |1dp=3px|12|\n\n### 六、OpenGL 版本支持\n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-fb082a2bb4321371.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n### 七、主流App支持minSdkVersion\n\n|应用|Andriod最低版本|minSdkVersion|统计日期|\n|----|----|----|----|\n|携程|4.4.4|<font color=\"red\">19</font>|2018-02-11|\n|支付宝|4.3|<font color=\"red\">18</font>|2018-02-11|\n|微信|4.2.x|<font color=\"red\">17</font>|2018-02-11|\n|ofo|4.1.x|16|2018-02-11|\n|QQ|4.0.3|15|2018-02-11|\n|爱奇艺|4.0.3|15|2018-02-11|\n|美团外卖|4.1.x|16|2018-02-11|\n|滴滴出行|4.0.3|15|2018-02-11|\n|优酷|4.1.x|16|2018-02-11|\n|美图秀秀|4.0.3|15|2018-02-11|\n|快手|4.0.3|15|2018-02-11|\n|抖音|4.1.x|16|2018-02-11|\n|今日头条|4.0.3|15|2018-02-11|\n|作业帮|4.0.3|15|2018-02-11|\n|火山小视频|4.0.3|15|2018-02-11|\n|天猫|4.0.3|15|2018-02-11|\n|淘宝|4.0.3|15|2018-02-11|\n\n### 八、结论\n\n1、设置minSDKVersion=17\n\n>1. Android 4.2及以上版本已经覆盖96%的机型。\n2. 微信采用minSDKVersion=17，最小支持到android 4.2版本，我们有理由设想，使用我们应用的用户，一定会使用微信，所以和微信采用相同minSDKVersion即可。\n3. 支付宝minSDKVersion=18，携程minSDKVersion=19，我们采用17不会有问题。   \n\n\t\n2、图片适配屏幕密度xhdpi或者xxhdpi\n\n\n>1. 大部分的设备属于xhdpi屏幕密度范围,xxhdpi设备也有相当保有量。\n2. 分辨率太低的图片，在高密度设备下会被放大儿变模糊，hdpi中的图片会在xhdpi和xxhdpi设备中变得模糊，所以不采用hdpi来适配。\n3. 分辨率太高的图片，android系统缩放时消耗过多内存，例如xxhdpi中的图片再xhdpi和hdpi设备上，会被缩小，分辨率越高，占用内存越多，所以也不适合使用xxhdpi来适配。\n4. 大部分的设备属于xhdpi屏幕密度范围，我们只提供xhdpi一套图片即可完成图片适配。这样在面对hdpi和xxhdpi的设备时候，性能和显示清晰度都可以做到不错。\n\n<font color=\"#f97352\">推荐：minSDKVersion = 17</font></br>\n<font color=\"#f97352\">推荐：想要缩小apk 体积，则提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。</font>\n<font color=\"#f97352\">官方推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如下图\n</font>\n\n<div align=\"center\">\n<img src=\"http://upload-images.jianshu.io/upload_images/6322932-89d993c158f0125b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\" />\n</div>\n\n### 九、参考资料\n\n[Android dashboards]\n\n[Vector Drawable 中文]\n\n[android-8.0-changes]\n\n[convert images to webp]\n\n[android-support-library-232]\n\n[convert images to webp]:https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\n[Android dashboards]:https://developer.android.com/about/dashboards/index.html\n[android-8.0-changes]:https://developer.android.com/about/versions/oreo/android-8.0-changes.html\n[android-7.0-changes]:https://developer.android.com/about/versions/nougat/android-7.0-changes.html\n[android-6.0-changes]:https://developer.android.com/about/versions/marshmallow/android-6.0-changes.html\n[android-5.1]:https://developer.android.com/about/versions/android-5.1.html\n[android-5.0-changes]:https://developer.android.com/about/versions/android-5.0-changes.html\n[android-4.4]:https://developer.android.com/about/versions/android-4.4.html\n[android-4.3]:https://developer.android.com/about/versions/android-4.3.html\n[android-4.2]:https://developer.android.com/about/versions/android-4.2.html\n[android-4.1]:https://developer.android.com/about/versions/android-4.1.html\n[android-4.0.3]:https://developer.android.com/about/versions/android-4.0.3.html\n[android-4.0]:https://developer.android.com/about/versions/android-4.0.html\n[android-3.2]:https://developer.android.com/about/versions/android-3.2.html\n[android-3.1]:https://developer.android.com/about/versions/android-3.1.html\n[android-3.0]:https://developer.android.com/about/versions/android-3.0.html\n[android-2.3.3]:https://developer.android.com/about/versions/android-2.3.3.html\n[android-2.3]:https://developer.android.com/about/versions/android-2.3.html\n[android-2.2]:https://developer.android.com/about/versions/android-2.2.html\n[android-2.1]:https://developer.android.com/about/versions/android-2.1.html\n[android-support-library-232]:https://android-developers.googleblog.com/2016/02/android-support-library-232.html\n[Vector Drawable 中文]:http://www.jb51.net/article/84613.htm\n\n<script>\n   \n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"90px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"80px\";\n       }\n       if(i==3){\n           myth.style.width = \"160px\";\n       }       \n   }\n      \t\n</script>","slug":"markdown-blog-template","published":1,"updated":"2018-07-23T14:59:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hjp005ejs6ss6zaaahy","content":"<ul>\n<li>推荐：minSDKVersion=17 </li>\n<li>推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。  </li>\n<li>如果想要减小apk大小：推荐：提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。        </li>\n</ul>\n<h3 id=\"一、理解minSDKVersion\"><a href=\"#一、理解minSDKVersion\" class=\"headerlink\" title=\"一、理解minSDKVersion\"></a>一、理解minSDKVersion</h3><p>参考自: <a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a></p>\n<blockquote>\n<ul>\n<li>An integer designating the minimum API Level required for the application to run.<br>The Android system will prevent the user from installing the application if the<br>system’s API Level is lower than the value specified in this attribute. You<br>should always declare this attribute.</li>\n<li>应用程序运行所需要的最小api版本，如果手机的系统版本低于app设置的minSDKVersion，<br>那么android系统会阻止app安装。始终应该设置minSDKVersion。</li>\n</ul>\n</blockquote>\n<h3 id=\"二、Android系统版本特性\"><a href=\"#二、Android系统版本特性\" class=\"headerlink\" title=\"二、Android系统版本特性\"></a>二、Android系统版本特性</h3><table>\n<thead>\n<tr>\n<th>系统版本号</th>\n<th>版本名称sdkVersion</th>\n<th>Revision</th>\n<th>版本特性</th>\n<th>关键特性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>27</td>\n<td>1</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>8.0</td>\n<td>26 Oreo</td>\n<td>1</td>\n<td><a href=\"https://developer.android.com/about/versions/oreo/android-8.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-8.0-changes</a></td>\n<td></td>\n</tr>\n<tr>\n<td>7.1</td>\n<td>25 Nougat</td>\n<td>2</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>7.0</td>\n<td>24 Nougat</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/nougat/android-7.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-7.0-changes</a></td>\n<td></td>\n</tr>\n<tr>\n<td>6.0</td>\n<td>23 Marshmallow</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/marshmallow/android-6.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-6.0-changes</a></td>\n<td>Runtime Permission</td>\n</tr>\n<tr>\n<td>5.1</td>\n<td>22 Lollipop</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-5.1.html\" target=\"_blank\" rel=\"noopener\">android-5.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>5.0</td>\n<td>21 Lollipop</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-5.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-5.0-changes</a></td>\n<td>1.ART、自动Multidex <br> 2.Instant Run <br>3.支持 vector drawables</td>\n</tr>\n<tr>\n<td>4.4W</td>\n<td>20 KitKat Wear</td>\n<td>2</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>4.4</td>\n<td>19 KitKat</td>\n<td>4</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.4.html\" target=\"_blank\" rel=\"noopener\">android-4.4</a></td>\n<td>Android 4.4 (API level 20) and lower doesn’t support vector drawables,but can use Support Library.If you want to use vector drawables only,you can use <font color=\"red\">Android Support Library 23.2 or higher,Android Plugin for Gradle 2.0 or higher</font> The <code>VectorDrawableCompat</code> class in the Support Library allows you to support VectorDrawable in <font color=\"red\">Android 2.1 (API level 7) and higher.</font> <a href=\"https://android-developers.googleblog.com/2016/02/android-support-library-232.html\" target=\"_blank\" rel=\"noopener\">android-support-library-232</a></td>\n</tr>\n<tr>\n<td>4.3</td>\n<td>18 Jelly Bean</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.3.html\" target=\"_blank\" rel=\"noopener\">android-4.3</a></td>\n<td>1.webp lossless compress &amp; transparent alpha channel support</td>\n</tr>\n<tr>\n<td>4.2</td>\n<td>17 Jelly Bean</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.2.html\" target=\"_blank\" rel=\"noopener\">android-4.2</a></td>\n<td>强制@JavascriptInterface</td>\n</tr>\n<tr>\n<td>4.1</td>\n<td>16 Jelly Bean</td>\n<td>5</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.1.html\" target=\"_blank\" rel=\"noopener\">android-4.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>4.0.3</td>\n<td>15 IcecreamSandwich</td>\n<td>5</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.0.3.html\" target=\"_blank\" rel=\"noopener\">android-4.0.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>4.0</td>\n<td>14 IcecreamSandwich</td>\n<td>4</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.0.html\" target=\"_blank\" rel=\"noopener\">android-4.0</a></td>\n<td>Webp lossy compress <a href=\"https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\" target=\"_blank\" rel=\"noopener\">convert images to webp</a></td>\n</tr>\n<tr>\n<td>3.2</td>\n<td>13 HoneyComb</td>\n<td>1</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.2.html\" target=\"_blank\" rel=\"noopener\">android-3.2</a></td>\n<td>WebP file format for your images,  <br> when targeting Android 3.2 (API level 13) and higher</td>\n</tr>\n<tr>\n<td>3.1</td>\n<td>12 HoneyComb</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.1.html\" target=\"_blank\" rel=\"noopener\">android-3.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>3.0</td>\n<td>11 HoneyComb</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.0.html\" target=\"_blank\" rel=\"noopener\">android-3.0</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.3.3</td>\n<td>10 Gingerbread</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.3.3.html\" target=\"_blank\" rel=\"noopener\">android-2.3.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.3</td>\n<td>9 Gingerbread</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.3.html\" target=\"_blank\" rel=\"noopener\">android-2.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.2</td>\n<td>8 Froyo</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.2.html\" target=\"_blank\" rel=\"noopener\">android-2.2</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.1</td>\n<td>7 Eclair</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.1.html\" target=\"_blank\" rel=\"noopener\">android-2.1</a></td>\n<td>…</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"三、Android各系统版本占有率分布\"><a href=\"#三、Android各系统版本占有率分布\" class=\"headerlink\" title=\"三、Android各系统版本占有率分布\"></a>三、Android各系统版本占有率分布</h3><p>1、实时数据参考：<a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a>    </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-b814708f69f28120.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<p>2、Android Studio中创建项目时提供参考数据    </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-6a2811470cd8a4ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<h3 id=\"四、Android现有设备屏幕密度分布\"><a href=\"#四、Android现有设备屏幕密度分布\" class=\"headerlink\" title=\"四、Android现有设备屏幕密度分布\"></a>四、Android现有设备屏幕密度分布</h3><p>1、实时数据参考：<a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a>  </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-3c5ac8a7f5a19fc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<h3 id=\"五、Android屏幕密度及代表分辨率\"><a href=\"#五、Android屏幕密度及代表分辨率\" class=\"headerlink\" title=\"五、Android屏幕密度及代表分辨率\"></a>五、Android屏幕密度及代表分辨率</h3><table>\n<thead>\n<tr>\n<th>密度类型</th>\n<th>代表分辨率（px）</th>\n<th>屏幕密度（dpi）</th>\n<th>换算(px/dp)</th>\n<th>比例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>低密度（ldpi）</td>\n<td>240x320</td>\n<td>120</td>\n<td>1dp=0.75px</td>\n<td>3</td>\n</tr>\n<tr>\n<td>中密度（mdpi）</td>\n<td>320x480</td>\n<td>160</td>\n<td>1dp=1px</td>\n<td>4</td>\n</tr>\n<tr>\n<td>高密度（hdpi）</td>\n<td>480x800</td>\n<td>240</td>\n<td>1dp=1.5px</td>\n<td>6</td>\n</tr>\n<tr>\n<td>超高密度<font color=\"red\">（xhdpi） </font></td>\n<td><font color=\"red\">720x1280</font></td>\n<td>320</td>\n<td>1dp=2px</td>\n<td>8</td>\n</tr>\n<tr>\n<td>超超高密度（xxhdpi）</td>\n<td>1080x1920</td>\n<td>480</td>\n<td>1dp=3px</td>\n<td>12</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"六、OpenGL-版本支持\"><a href=\"#六、OpenGL-版本支持\" class=\"headerlink\" title=\"六、OpenGL 版本支持\"></a>六、OpenGL 版本支持</h3><div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-fb082a2bb4321371.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n<h3 id=\"七、主流App支持minSdkVersion\"><a href=\"#七、主流App支持minSdkVersion\" class=\"headerlink\" title=\"七、主流App支持minSdkVersion\"></a>七、主流App支持minSdkVersion</h3><table>\n<thead>\n<tr>\n<th>应用</th>\n<th>Andriod最低版本</th>\n<th>minSdkVersion</th>\n<th>统计日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>携程</td>\n<td>4.4.4</td>\n<td><font color=\"red\">19</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>支付宝</td>\n<td>4.3</td>\n<td><font color=\"red\">18</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>微信</td>\n<td>4.2.x</td>\n<td><font color=\"red\">17</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>ofo</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>QQ</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>爱奇艺</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>美团外卖</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>滴滴出行</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>优酷</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>美图秀秀</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>快手</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>抖音</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>今日头条</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>作业帮</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>火山小视频</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>天猫</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>淘宝</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"八、结论\"><a href=\"#八、结论\" class=\"headerlink\" title=\"八、结论\"></a>八、结论</h3><p>1、设置minSDKVersion=17</p>\n<blockquote>\n<ol>\n<li>Android 4.2及以上版本已经覆盖96%的机型。</li>\n<li>微信采用minSDKVersion=17，最小支持到android 4.2版本，我们有理由设想，使用我们应用的用户，一定会使用微信，所以和微信采用相同minSDKVersion即可。</li>\n<li>支付宝minSDKVersion=18，携程minSDKVersion=19，我们采用17不会有问题。   </li>\n</ol>\n</blockquote>\n<p>2、图片适配屏幕密度xhdpi或者xxhdpi</p>\n<blockquote>\n<ol>\n<li>大部分的设备属于xhdpi屏幕密度范围,xxhdpi设备也有相当保有量。</li>\n<li>分辨率太低的图片，在高密度设备下会被放大儿变模糊，hdpi中的图片会在xhdpi和xxhdpi设备中变得模糊，所以不采用hdpi来适配。</li>\n<li>分辨率太高的图片，android系统缩放时消耗过多内存，例如xxhdpi中的图片再xhdpi和hdpi设备上，会被缩小，分辨率越高，占用内存越多，所以也不适合使用xxhdpi来适配。</li>\n<li>大部分的设备属于xhdpi屏幕密度范围，我们只提供xhdpi一套图片即可完成图片适配。这样在面对hdpi和xxhdpi的设备时候，性能和显示清晰度都可以做到不错。</li>\n</ol>\n</blockquote>\n<font color=\"#f97352\">推荐：minSDKVersion = 17</font><br><br><font color=\"#f97352\">推荐：想要缩小apk 体积，则提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。</font><br><font color=\"#f97352\">官方推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如下图<br></font>\n\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-89d993c158f0125b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n<h3 id=\"九、参考资料\"><a href=\"#九、参考资料\" class=\"headerlink\" title=\"九、参考资料\"></a>九、参考资料</h3><p><a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a></p>\n<p><a href=\"http://www.jb51.net/article/84613.htm\" target=\"_blank\" rel=\"noopener\">Vector Drawable 中文</a></p>\n<p><a href=\"https://developer.android.com/about/versions/oreo/android-8.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-8.0-changes</a></p>\n<p><a href=\"https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\" target=\"_blank\" rel=\"noopener\">convert images to webp</a></p>\n<p><a href=\"https://android-developers.googleblog.com/2016/02/android-support-library-232.html\" target=\"_blank\" rel=\"noopener\">android-support-library-232</a></p>\n<script>\n\n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"90px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"80px\";\n       }\n       if(i==3){\n           myth.style.width = \"160px\";\n       }       \n   }\n\n</script>","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>推荐：minSDKVersion=17 </li>\n<li>推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。  </li>\n<li>如果想要减小apk大小：推荐：提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。        </li>\n</ul>\n<h3 id=\"一、理解minSDKVersion\"><a href=\"#一、理解minSDKVersion\" class=\"headerlink\" title=\"一、理解minSDKVersion\"></a>一、理解minSDKVersion</h3><p>参考自: <a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a></p>\n<blockquote>\n<ul>\n<li>An integer designating the minimum API Level required for the application to run.<br>The Android system will prevent the user from installing the application if the<br>system’s API Level is lower than the value specified in this attribute. You<br>should always declare this attribute.</li>\n<li>应用程序运行所需要的最小api版本，如果手机的系统版本低于app设置的minSDKVersion，<br>那么android系统会阻止app安装。始终应该设置minSDKVersion。</li>\n</ul>\n</blockquote>\n<h3 id=\"二、Android系统版本特性\"><a href=\"#二、Android系统版本特性\" class=\"headerlink\" title=\"二、Android系统版本特性\"></a>二、Android系统版本特性</h3><table>\n<thead>\n<tr>\n<th>系统版本号</th>\n<th>版本名称sdkVersion</th>\n<th>Revision</th>\n<th>版本特性</th>\n<th>关键特性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>27</td>\n<td>1</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>8.0</td>\n<td>26 Oreo</td>\n<td>1</td>\n<td><a href=\"https://developer.android.com/about/versions/oreo/android-8.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-8.0-changes</a></td>\n<td></td>\n</tr>\n<tr>\n<td>7.1</td>\n<td>25 Nougat</td>\n<td>2</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>7.0</td>\n<td>24 Nougat</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/nougat/android-7.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-7.0-changes</a></td>\n<td></td>\n</tr>\n<tr>\n<td>6.0</td>\n<td>23 Marshmallow</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/marshmallow/android-6.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-6.0-changes</a></td>\n<td>Runtime Permission</td>\n</tr>\n<tr>\n<td>5.1</td>\n<td>22 Lollipop</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-5.1.html\" target=\"_blank\" rel=\"noopener\">android-5.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>5.0</td>\n<td>21 Lollipop</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-5.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-5.0-changes</a></td>\n<td>1.ART、自动Multidex <br> 2.Instant Run <br>3.支持 vector drawables</td>\n</tr>\n<tr>\n<td>4.4W</td>\n<td>20 KitKat Wear</td>\n<td>2</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>4.4</td>\n<td>19 KitKat</td>\n<td>4</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.4.html\" target=\"_blank\" rel=\"noopener\">android-4.4</a></td>\n<td>Android 4.4 (API level 20) and lower doesn’t support vector drawables,but can use Support Library.If you want to use vector drawables only,you can use <font color=\"red\">Android Support Library 23.2 or higher,Android Plugin for Gradle 2.0 or higher</font> The <code>VectorDrawableCompat</code> class in the Support Library allows you to support VectorDrawable in <font color=\"red\">Android 2.1 (API level 7) and higher.</font> <a href=\"https://android-developers.googleblog.com/2016/02/android-support-library-232.html\" target=\"_blank\" rel=\"noopener\">android-support-library-232</a></td>\n</tr>\n<tr>\n<td>4.3</td>\n<td>18 Jelly Bean</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.3.html\" target=\"_blank\" rel=\"noopener\">android-4.3</a></td>\n<td>1.webp lossless compress &amp; transparent alpha channel support</td>\n</tr>\n<tr>\n<td>4.2</td>\n<td>17 Jelly Bean</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.2.html\" target=\"_blank\" rel=\"noopener\">android-4.2</a></td>\n<td>强制@JavascriptInterface</td>\n</tr>\n<tr>\n<td>4.1</td>\n<td>16 Jelly Bean</td>\n<td>5</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.1.html\" target=\"_blank\" rel=\"noopener\">android-4.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>4.0.3</td>\n<td>15 IcecreamSandwich</td>\n<td>5</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.0.3.html\" target=\"_blank\" rel=\"noopener\">android-4.0.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>4.0</td>\n<td>14 IcecreamSandwich</td>\n<td>4</td>\n<td><a href=\"https://developer.android.com/about/versions/android-4.0.html\" target=\"_blank\" rel=\"noopener\">android-4.0</a></td>\n<td>Webp lossy compress <a href=\"https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\" target=\"_blank\" rel=\"noopener\">convert images to webp</a></td>\n</tr>\n<tr>\n<td>3.2</td>\n<td>13 HoneyComb</td>\n<td>1</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.2.html\" target=\"_blank\" rel=\"noopener\">android-3.2</a></td>\n<td>WebP file format for your images,  <br> when targeting Android 3.2 (API level 13) and higher</td>\n</tr>\n<tr>\n<td>3.1</td>\n<td>12 HoneyComb</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.1.html\" target=\"_blank\" rel=\"noopener\">android-3.1</a></td>\n<td></td>\n</tr>\n<tr>\n<td>3.0</td>\n<td>11 HoneyComb</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-3.0.html\" target=\"_blank\" rel=\"noopener\">android-3.0</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.3.3</td>\n<td>10 Gingerbread</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.3.3.html\" target=\"_blank\" rel=\"noopener\">android-2.3.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.3</td>\n<td>9 Gingerbread</td>\n<td>2</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.3.html\" target=\"_blank\" rel=\"noopener\">android-2.3</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.2</td>\n<td>8 Froyo</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.2.html\" target=\"_blank\" rel=\"noopener\">android-2.2</a></td>\n<td></td>\n</tr>\n<tr>\n<td>2.1</td>\n<td>7 Eclair</td>\n<td>3</td>\n<td><a href=\"https://developer.android.com/about/versions/android-2.1.html\" target=\"_blank\" rel=\"noopener\">android-2.1</a></td>\n<td>…</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"三、Android各系统版本占有率分布\"><a href=\"#三、Android各系统版本占有率分布\" class=\"headerlink\" title=\"三、Android各系统版本占有率分布\"></a>三、Android各系统版本占有率分布</h3><p>1、实时数据参考：<a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a>    </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-b814708f69f28120.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<p>2、Android Studio中创建项目时提供参考数据    </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-6a2811470cd8a4ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<h3 id=\"四、Android现有设备屏幕密度分布\"><a href=\"#四、Android现有设备屏幕密度分布\" class=\"headerlink\" title=\"四、Android现有设备屏幕密度分布\"></a>四、Android现有设备屏幕密度分布</h3><p>1、实时数据参考：<a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a>  </p>\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-3c5ac8a7f5a19fc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n\n<h3 id=\"五、Android屏幕密度及代表分辨率\"><a href=\"#五、Android屏幕密度及代表分辨率\" class=\"headerlink\" title=\"五、Android屏幕密度及代表分辨率\"></a>五、Android屏幕密度及代表分辨率</h3><table>\n<thead>\n<tr>\n<th>密度类型</th>\n<th>代表分辨率（px）</th>\n<th>屏幕密度（dpi）</th>\n<th>换算(px/dp)</th>\n<th>比例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>低密度（ldpi）</td>\n<td>240x320</td>\n<td>120</td>\n<td>1dp=0.75px</td>\n<td>3</td>\n</tr>\n<tr>\n<td>中密度（mdpi）</td>\n<td>320x480</td>\n<td>160</td>\n<td>1dp=1px</td>\n<td>4</td>\n</tr>\n<tr>\n<td>高密度（hdpi）</td>\n<td>480x800</td>\n<td>240</td>\n<td>1dp=1.5px</td>\n<td>6</td>\n</tr>\n<tr>\n<td>超高密度<font color=\"red\">（xhdpi） </font></td>\n<td><font color=\"red\">720x1280</font></td>\n<td>320</td>\n<td>1dp=2px</td>\n<td>8</td>\n</tr>\n<tr>\n<td>超超高密度（xxhdpi）</td>\n<td>1080x1920</td>\n<td>480</td>\n<td>1dp=3px</td>\n<td>12</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"六、OpenGL-版本支持\"><a href=\"#六、OpenGL-版本支持\" class=\"headerlink\" title=\"六、OpenGL 版本支持\"></a>六、OpenGL 版本支持</h3><div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-fb082a2bb4321371.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n<h3 id=\"七、主流App支持minSdkVersion\"><a href=\"#七、主流App支持minSdkVersion\" class=\"headerlink\" title=\"七、主流App支持minSdkVersion\"></a>七、主流App支持minSdkVersion</h3><table>\n<thead>\n<tr>\n<th>应用</th>\n<th>Andriod最低版本</th>\n<th>minSdkVersion</th>\n<th>统计日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>携程</td>\n<td>4.4.4</td>\n<td><font color=\"red\">19</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>支付宝</td>\n<td>4.3</td>\n<td><font color=\"red\">18</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>微信</td>\n<td>4.2.x</td>\n<td><font color=\"red\">17</font></td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>ofo</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>QQ</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>爱奇艺</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>美团外卖</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>滴滴出行</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>优酷</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>美图秀秀</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>快手</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>抖音</td>\n<td>4.1.x</td>\n<td>16</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>今日头条</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>作业帮</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>火山小视频</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>天猫</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n<tr>\n<td>淘宝</td>\n<td>4.0.3</td>\n<td>15</td>\n<td>2018-02-11</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"八、结论\"><a href=\"#八、结论\" class=\"headerlink\" title=\"八、结论\"></a>八、结论</h3><p>1、设置minSDKVersion=17</p>\n<blockquote>\n<ol>\n<li>Android 4.2及以上版本已经覆盖96%的机型。</li>\n<li>微信采用minSDKVersion=17，最小支持到android 4.2版本，我们有理由设想，使用我们应用的用户，一定会使用微信，所以和微信采用相同minSDKVersion即可。</li>\n<li>支付宝minSDKVersion=18，携程minSDKVersion=19，我们采用17不会有问题。   </li>\n</ol>\n</blockquote>\n<p>2、图片适配屏幕密度xhdpi或者xxhdpi</p>\n<blockquote>\n<ol>\n<li>大部分的设备属于xhdpi屏幕密度范围,xxhdpi设备也有相当保有量。</li>\n<li>分辨率太低的图片，在高密度设备下会被放大儿变模糊，hdpi中的图片会在xhdpi和xxhdpi设备中变得模糊，所以不采用hdpi来适配。</li>\n<li>分辨率太高的图片，android系统缩放时消耗过多内存，例如xxhdpi中的图片再xhdpi和hdpi设备上，会被缩小，分辨率越高，占用内存越多，所以也不适合使用xxhdpi来适配。</li>\n<li>大部分的设备属于xhdpi屏幕密度范围，我们只提供xhdpi一套图片即可完成图片适配。这样在面对hdpi和xxhdpi的设备时候，性能和显示清晰度都可以做到不错。</li>\n</ol>\n</blockquote>\n<font color=\"#f97352\">推荐：minSDKVersion = 17</font><br><br><font color=\"#f97352\">推荐：想要缩小apk 体积，则提供一套 xhdpi （UI设计按：720x1080设计）图片来做大部分图片缩放适配。</font><br><font color=\"#f97352\">官方推荐：提供一套 xxhdpi （UI设计按：1080x1920设计）图片来做大部分图片缩放适配。如下图<br></font>\n\n<div align=\"center\"><br><img src=\"http://upload-images.jianshu.io/upload_images/6322932-89d993c158f0125b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" width=\"90%\"><br></div>\n\n<h3 id=\"九、参考资料\"><a href=\"#九、参考资料\" class=\"headerlink\" title=\"九、参考资料\"></a>九、参考资料</h3><p><a href=\"https://developer.android.com/about/dashboards/index.html\" target=\"_blank\" rel=\"noopener\">Android dashboards</a></p>\n<p><a href=\"http://www.jb51.net/article/84613.htm\" target=\"_blank\" rel=\"noopener\">Vector Drawable 中文</a></p>\n<p><a href=\"https://developer.android.com/about/versions/oreo/android-8.0-changes.html\" target=\"_blank\" rel=\"noopener\">android-8.0-changes</a></p>\n<p><a href=\"https://developer.android.com/studio/write/convert-webp.html#convert_images_to_webp\" target=\"_blank\" rel=\"noopener\">convert images to webp</a></p>\n<p><a href=\"https://android-developers.googleblog.com/2016/02/android-support-library-232.html\" target=\"_blank\" rel=\"noopener\">android-support-library-232</a></p>\n<script>\n\n   var ths = document.getElementsByTagName(\"th\");\n   for(var i=0;i<ths.length;i++){\n       var myth = ths[i];\n       if(i==0){//文档中的第一个th的宽度\n           myth.style.width = \"90px\";\n       }\n       if(i==1){\n           myth.style.width = \"150px\";\n       }\n       if(i==2){\n           myth.style.width = \"80px\";\n       }\n       if(i==3){\n           myth.style.width = \"160px\";\n       }       \n   }\n\n</script>"},{"title":"myeclipse、maven、struts2、Jetty创建mobile-server项目，为移动端开发提供后台服务。","date":"2018-08-04T15:41:56.000Z","summery":"在myeclipse中使用Group Id = org.apache.maven.archetypes Artifact Id = maven-archetype-webapp创建简单的webapp项目，添加Servlet支持，添加struts2支持，添加jetty plugin支持，一步步搭建简单的Struts服务器端项目，供以后学习使用。例如：OkHttp","_content":"### 一、参考文档及源码下载\n\n[maven webapp目录结构]\n\n[Maven权威指南笔记]\n\n[一步一步创建Maven多module项目]\n\n源代码下载地址：[mobile-server]\n\n### 二、maven webapp目录结构\n```\n├── pom.xml\n└── src\n    ├── main\n    │   ├── java\n    │   │   └── mygroup\n    │   │       ├── controller\n    │   │       │   ├── HomeController.java\n    │   │       │   └── PersonController.java\n    │   │       ├── dao\n    │   │       │   └── PersonDao.java\n    │   │       └── model\n    │   │           └── Person.java\n    │   ├── resources\n    │   │   ├── db.properties\n    │   │   ├── log4j.xml\n    │   │   ├── struts.xml\n    │   │   └── META-INF\n    │   │       └── persistence.xml\n    │   └── webapp\n    │       ├── index.jsp\n    │       ├── META-INF\n    │       │   ├── context.xml\n    │       │   └── MANIFEST.MF\n    │       ├── resources\n    │       │   └── css\n    │       │       └── screen.css\n    │       └── WEB-INF\n    │           ├── spring\n    │           │   ├── app\n    │           │   │   ├── controllers.xml\n    │           │   │   └── servlet-context.xml\n    │           │   ├── db.xml\n    │           │   └── root-context.xml\n    │           ├── views\n    │           │   ├── edit.jsp\n    │           │   ├── home.jsp\n    │           │   └── list.jsp\n    │           └── web.xml\n    └── test\n        ├── java\n        │   └── mygroup\n        │       ├── controller\n        │       │   ├── DataInitializer.java\n        │       │   ├── HomeControllerTest.java\n        │       │   └── PersonControllerTest.java\n        │       └── dao\n        │           └── PersonDaoTest.java\n        └── resources\n            ├── db.properties\n            ├── log4j.xml\n            ├── test-context.xml\n            └── test-db.xml\n```\n\n### 三、Eclipse中使用maven-archetype-webapp创建maven web项目\n\n>File-->New-->Project-->maven Project-->选择maven-archetype-webapp-->填写Group Id、Artifact Id、packageName等信息后-->完成\n\n### 四、定义webapp的contextPath\n\n在pom.xml文件中<build>下增加如下内容,其中mobile-server就是我们定义的contextPath\n\n```\n<finalName>mobile-server</finalName>\n```\n\n### 五、添加Servlet支持\n\npom.xml文件中添加：\n\n```\n<dependency>\n  <groupId>javax</groupId>\n  <artifactId>javaee-api</artifactId>\n  <version>7.0</version>\n  <scope>provided</scope>\n</dependency>\n```\n\n### 六、修改index.jsp\n\n在src/main/webapp下添加/修改 index.jsp，内容如下：\n\n```\n<!DOCTYPE html>\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Basic Struts 2 Application - Welcome</title>\n  </head>\n  <body>\n    <h1>Welcome To Struts 2!</h1>\n  </body>\n</html>\n```\n\n### 七、添加Jetty maven plugin\npom.xml文件中添加如下内容：\n\n```\n<plugin>\n    <groupId>org.eclipse.jetty</groupId>\n    <artifactId>jetty-maven-plugin</artifactId>\n    <version>9.4.7.v20170914</version>\n    <configuration>\n        <webApp>\n            <contextPath>/${project.build.finalName}</contextPath>\n        </webApp>\n        <stopKey>CTRL+C</stopKey>\n        <stopPort>8999</stopPort>\n        <scanIntervalSeconds>10</scanIntervalSeconds>\n        <scanTargets>\n            <scanTarget>src/main/webapp/WEB-INF/web.xml</scanTarget>\n        </scanTargets>\n    </configuration>\n</plugin>\n```\n运行 mvn jetty:run，然后输入: <http://localhost:8080/mobile-server/index.jsp> 访问页面,页面显示：Welcome To Struts 2! 则配置成功。\n\n### 八、添加Struts2和Log4j支持\n\n1. 在\\<properties\\>下添加struts2和log4j的版本属性\n\n```\n<properties>\n\t<struts2.version>2.5.14.1</struts2.version>\n\t<log4j2.version>2.10.0</log4j2.version>\n</properties>\n```\n\n2. 在src/main/resources下创建log4j2.xml\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration>\n    <Appenders>\n        <Console name=\"STDOUT\" target=\"SYSTEM_OUT\">\n            <PatternLayout pattern=\"%d %-5p [%t] %C{2} (%F:%L) - %m%n\"/>\n        </Console>\n    </Appenders>\n    <Loggers>\n        <Logger name=\"com.opensymphony.xwork2\" level=\"debug\"/>\n        <Logger name=\"org.apache.struts2\" level=\"debug\"/>\n        <Root level=\"warn\">\n            <AppenderRef ref=\"STDOUT\"/>\n        </Root>\n    </Loggers>\n</Configuration>\n```\n\n3. 配置dependencies\n\n```\n</dependencies>\n\t<dependency>\n\t    <groupId>org.apache.struts</groupId>\n\t    <artifactId>struts2-core</artifactId>\n\t    <!-- <version>${struts2.version}</version> -->\n\t</dependency>\n\t<dependency>\n\t    <groupId>org.apache.logging.log4j</groupId>\n\t    <artifactId>log4j-core</artifactId>\n\t     <!--<version>${log4j2.version}</version> -->\n\t</dependency>\n\t<dependency>\n\t    <groupId>org.apache.logging.log4j</groupId>\n\t    <artifactId>log4j-api</artifactId>\n\t     <!-- <version>${log4j2.version}</version> -->\n\t</dependency>\n</dependencies>\n```\n\n4. 增加dependencyManagement配置\n\ndependencyManagement用于在parent pom中统一管理module的版本version。如下，当child module中依赖struts时候，只需要在dependencies中加入 groupId和artifactId即可，version会自动从parent pom中继承。\n\n```\n<dependencyManagement>\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.struts</groupId>\n\t\t\t<artifactId>struts2-bom</artifactId>\n\t\t\t<version>${struts2.version}</version>\n\t\t\t<type>pom</type>\n\t\t\t<scope>import</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t<artifactId>log4j-bom</artifactId>\n\t\t\t<version>${log4j2.version}</version>\n\t\t\t<scope>import</scope>\n\t\t\t<type>pom</type>\n\t\t</dependency>\n\t</dependencies>\n</dependencyManagement>\n```\n\n5. 修改web.xml文件\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app id=\"WebApp_ID\" version=\"2.4\"\n\txmlns=\"http://java.sun.com/xml/ns/j2ee\" \n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\">\n\t<display-name>Basic Struts2</display-name>\n\t<welcome-file-list>\n\t\t<welcome-file>index</welcome-file>\n\t</welcome-file-list>\n\n\t<filter>\n\t\t<filter-name>struts2</filter-name>\n\t\t<filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>\n\t</filter>\n\n\t<filter-mapping>\n\t\t<filter-name>struts2</filter-name>\n\t\t<url-pattern>/*</url-pattern>\n\t</filter-mapping>\n\n</web-app>\n```\n\n6. 在src/main/resources下创建struts.xml文件\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE struts PUBLIC\n    \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\"\n    \"http://struts.apache.org/dtds/struts-2.5.dtd\">\n\n<struts>\n\n    <constant name=\"struts.devMode\" value=\"true\" />\n\n    <package name=\"basicstruts2\" extends=\"struts-default\">\n        <action name=\"index\">\n            <result>/index.jsp</result>\n        </action>\n    </package>\n\n</struts>\n```\n7. 执行 mvn jetty:run 然后访问<http://localhost:8080/mobile-server/index.action>出现和之前<http://localhost:8080/mobile-server/index.jsp>一样的界面，则说明struts2配置成功。\n\n### 九、添加gson支持\n\n为了方便的构建JSON字符串，模拟接口请求返回，引入Gson。\n\n```\n<dependency>\n  <groupId>com.google.code.gson</groupId>\n  <artifactId>gson</artifactId>\n  <version>2.8.5</version>\n</dependency>\n```\n\n### 十、根据maven webapp目录结构，补全必要的目录\n\n创建相关代码资源目录和package, (创建代码目录时，需要先创建普通目录，然后用eclipse转化成代码目录：build path -> use as source folder)\n\n```\nsrc/test/java\nsrc/test/resource\nsrc/main/webapp/resources\nsrc/main/webapp/java\n\ncom.farubaba.mobile.server.action\ncom.farubaba.mobile.server.service\ncom.farubaba.mobile.server.dao\ncom.farubaba.mobile.server.modle\n```\n\n### 十一、编写login.jsp、LoginAction、LoginService、LoginDao并配置\n\n1. pom.xml添加jstl支持\n\n```\n<dependency>\n    <groupId>jstl</groupId>\n    <artifactId>jstl</artifactId>\n    <version>1.2</version>\n</dependency>\n```\n1. index.jsp中添加访问login.action的超链接\n\n```html\n <ol>\n    <li>通过 login.action 访问 (没有给userName和password参数) : <a href=\"<s:url action='login'/>\">[mobile-server/WEB-INF/resources/jsp/login.jsp]</a></li>\n </ol>\n    \n```\n2. 在login.jsp中使用带参数的login.action\n\n```\n<!DOCTYPE html>\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\n<%@ page import=\"com.google.gson.GsonBuilder\"%>\n<%@ page import=\"com.google.gson.Gson\" %>\n<%@ page import=\"com.farubaba.mobile.server.model.User\" %>\n<%@ taglib prefix=\"s\" uri=\"/struts-tags\" %>\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n\n\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\nString pageName = pageContext.getPage().getClass().getSimpleName();\n%>\n\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <title>Hello World! Struts2</title>\n    <style type=\"text/css\">\n    \t.button{\n    \t\twidth:300px;\n    \t\theight:30px;\n    \t\ttext-size:26pt;\n    \t\ttext-align:center;\n    \t\tbackground-color:#2bbc8a;\n    \t}\n    </style>\n  </head>\n  <body>  \t\n  \t<h2>\n  \t\t<%= pageName.replace(\"_002d\", \"-\").replace(\"_\", \".\") %> :\t\t\n  \t</h2>\n  \t<h4>查看地址栏Url，如果没有给userName和password参数，则并不会返回User对象，下面也不会有值显示：</h4>\n  \t<h4>JSON String User: [jsonUser] = <s:property value=\"jsonUser\" /></h4>\n  \t<h4>Object User: [user] = <s:property value=\"user\" /></h4>\n  \t<p>getServletName = <%= getServletName() %></p>\n  \t<p>getServletInfo = <%= getServletInfo() %></p>\n  \t<p>getServletContext.getAttribute() = <%= getServletContext().getAttribute(\"jsonUser\") %></p> \n    <!--\n    定义url action 和 param \n     -->\n     <s:url var=\"loginWithNoParam\" action=\"login\"></s:url>\n   \t\n   \t<s:url var=\"login\" action=\"login\">\n   \t\t<s:param name=\"userName\">farubaba</s:param>\n   \t\t<s:param name=\"password\">123456</s:param>\n   \t</s:url>\n   \t \n   \t<s:url var=\"userlogin\" action=\"userLogin\" >\n   \t\t<s:param name=\"userName\">farubaba</s:param>\n   \t\t<s:param name=\"password\">123456</s:param>\n   \t</s:url>\n   \t\n   \t<s:url var=\"userlogin\" action=\"userLogin\" >\n   \t\t<s:param name=\"userName\">farubaba</s:param>\n   \t\t<s:param name=\"password\">123456</s:param>\n   \t</s:url>\n   \t\n    <ul>\n    \t<li>没有登陆参数，调用 <a href=\"${loginWithNoParam}\">login.action -> return null String</a></li>\n    \t<li>提供正确登录参数，调用 <a href=\"${login}\">login.action -> return JSON String User</a></li>\n    \t<li>提供正确登录参数，调用<a href=\"${userlogin}\">userLogin.action -> return Object User </a></li>\n    \t<li>\n    \t使用form表单提交登录：(输入：<font color=\"red\">farubaba</font> 和 <font color=\"red\">123456</font> 可登录成功!登录成功后，JSON String User 和 Object User其中之一会有值)\n\t    <s:form action=\"login\">\n\t\t \t<s:textfield name=\"userName\" label=\"Your name\" />\n\t\t \t<s:textfield name=\"password\" label=\"Your password\" />\n\t\t \t<s:submit value=\"登录\" cssClass=\"button\" />\n\t\t</s:form>\n    \t</li>\n    </ul>\n    <p><p><p><s:include value=\"../../road-map.jsp\"></s:include>\n   \n  </body>\n</html>\n```\n### 十二、服务器端编程细节摘要\n\n|功能|解决方案|\n|----|----|\n|读取request中postbody|1.使用request.getInputStream()|\n|struts action中读写文件|1.获得文件路径：String path = ServletActionContext.getServletContext().getRealPath(\"/resources/files/test.md\");<br>生成绝对路径如：/environment/git-repo/mobile-server/src/main/webapp/resources/files/test.md|\n\n### 十三、编写服务端Action、Service、Dao，完整的代码已上传至github [mobile-server]\n\n### 十四、错误修正\n\n1. 可能出现/struts-tags 找不到的错误。\n\n\t\tmyeclipse Can not find the tag library descriptor for \"/struts- tags\"\n\t\n\t\t右键project-->build path-->Configure build path-->order and export\n\t\t勾选Maven dependencies ， 点击应用。\n2. web.xml web-app dtd版本错误\n\n\t\tOne or more constraints have not been satisfied. Apache Struts (2.x) 2.1 req\n\nweb.xml中替换如下内容：\n\n\t<!-- <!DOCTYPE web-app PUBLIC\n\t \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n\t \"http://java.sun.com/dtd/web-app_2_3.dtd\" > -->\n\n替换为：\n\n\t<web-app \n\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txmlns=\"http://java.sun.com/xml/ns/javaee\"\n\t\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n\t\tversion=\"3.0\" id=\"WebApp_1536392245753\">\n\t\t\n3. child module does not exist\n\n<div align=\"center\">\n\t<img src=\"/images/14、maven-child-module-not-exist.png\" width=\"90%\" />\n</div>\n\n4. 去掉webapp项目创建时自带的后缀: Maven Webapp , 例如 api-feature Maven Webapp 修改成 api-feature\n\t<div align=\"center\">\n\t<img src=\"/images/15、remove-maven-webapp-default-sufix-MavenWebapp\" width=\"90%\" />\n</div>\n\t\n\t\n\n[maven webapp目录结构]:https://www.cnblogs.com/plxx/p/5256979.html\n[Maven权威指南笔记]:Maven权威指南笔记.md\n[mobile-server]:https://github.com/Farubaba/mobile-server.git\n[一步一步创建Maven多module项目]:https://blog.csdn.net/luoxiang183/article/details/76215635\n\n\n\n","source":"_posts/myeclipse、maven、struts2创建server项目.md","raw":"---\ntitle: myeclipse、maven、struts2、Jetty创建mobile-server项目，为移动端开发提供后台服务。\ndate: 2018-08-04 23:41:56\ntags: [myeclipse,Maven,struts2,Jetty,HTTPS, SSL, TLS, Http2,mobile-server,server]\nsummery: 在myeclipse中使用Group Id = org.apache.maven.archetypes Artifact Id = maven-archetype-webapp创建简单的webapp项目，添加Servlet支持，添加struts2支持，添加jetty plugin支持，一步步搭建简单的Struts服务器端项目，供以后学习使用。例如：OkHttp\n---\n### 一、参考文档及源码下载\n\n[maven webapp目录结构]\n\n[Maven权威指南笔记]\n\n[一步一步创建Maven多module项目]\n\n源代码下载地址：[mobile-server]\n\n### 二、maven webapp目录结构\n```\n├── pom.xml\n└── src\n    ├── main\n    │   ├── java\n    │   │   └── mygroup\n    │   │       ├── controller\n    │   │       │   ├── HomeController.java\n    │   │       │   └── PersonController.java\n    │   │       ├── dao\n    │   │       │   └── PersonDao.java\n    │   │       └── model\n    │   │           └── Person.java\n    │   ├── resources\n    │   │   ├── db.properties\n    │   │   ├── log4j.xml\n    │   │   ├── struts.xml\n    │   │   └── META-INF\n    │   │       └── persistence.xml\n    │   └── webapp\n    │       ├── index.jsp\n    │       ├── META-INF\n    │       │   ├── context.xml\n    │       │   └── MANIFEST.MF\n    │       ├── resources\n    │       │   └── css\n    │       │       └── screen.css\n    │       └── WEB-INF\n    │           ├── spring\n    │           │   ├── app\n    │           │   │   ├── controllers.xml\n    │           │   │   └── servlet-context.xml\n    │           │   ├── db.xml\n    │           │   └── root-context.xml\n    │           ├── views\n    │           │   ├── edit.jsp\n    │           │   ├── home.jsp\n    │           │   └── list.jsp\n    │           └── web.xml\n    └── test\n        ├── java\n        │   └── mygroup\n        │       ├── controller\n        │       │   ├── DataInitializer.java\n        │       │   ├── HomeControllerTest.java\n        │       │   └── PersonControllerTest.java\n        │       └── dao\n        │           └── PersonDaoTest.java\n        └── resources\n            ├── db.properties\n            ├── log4j.xml\n            ├── test-context.xml\n            └── test-db.xml\n```\n\n### 三、Eclipse中使用maven-archetype-webapp创建maven web项目\n\n>File-->New-->Project-->maven Project-->选择maven-archetype-webapp-->填写Group Id、Artifact Id、packageName等信息后-->完成\n\n### 四、定义webapp的contextPath\n\n在pom.xml文件中<build>下增加如下内容,其中mobile-server就是我们定义的contextPath\n\n```\n<finalName>mobile-server</finalName>\n```\n\n### 五、添加Servlet支持\n\npom.xml文件中添加：\n\n```\n<dependency>\n  <groupId>javax</groupId>\n  <artifactId>javaee-api</artifactId>\n  <version>7.0</version>\n  <scope>provided</scope>\n</dependency>\n```\n\n### 六、修改index.jsp\n\n在src/main/webapp下添加/修改 index.jsp，内容如下：\n\n```\n<!DOCTYPE html>\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Basic Struts 2 Application - Welcome</title>\n  </head>\n  <body>\n    <h1>Welcome To Struts 2!</h1>\n  </body>\n</html>\n```\n\n### 七、添加Jetty maven plugin\npom.xml文件中添加如下内容：\n\n```\n<plugin>\n    <groupId>org.eclipse.jetty</groupId>\n    <artifactId>jetty-maven-plugin</artifactId>\n    <version>9.4.7.v20170914</version>\n    <configuration>\n        <webApp>\n            <contextPath>/${project.build.finalName}</contextPath>\n        </webApp>\n        <stopKey>CTRL+C</stopKey>\n        <stopPort>8999</stopPort>\n        <scanIntervalSeconds>10</scanIntervalSeconds>\n        <scanTargets>\n            <scanTarget>src/main/webapp/WEB-INF/web.xml</scanTarget>\n        </scanTargets>\n    </configuration>\n</plugin>\n```\n运行 mvn jetty:run，然后输入: <http://localhost:8080/mobile-server/index.jsp> 访问页面,页面显示：Welcome To Struts 2! 则配置成功。\n\n### 八、添加Struts2和Log4j支持\n\n1. 在\\<properties\\>下添加struts2和log4j的版本属性\n\n```\n<properties>\n\t<struts2.version>2.5.14.1</struts2.version>\n\t<log4j2.version>2.10.0</log4j2.version>\n</properties>\n```\n\n2. 在src/main/resources下创建log4j2.xml\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration>\n    <Appenders>\n        <Console name=\"STDOUT\" target=\"SYSTEM_OUT\">\n            <PatternLayout pattern=\"%d %-5p [%t] %C{2} (%F:%L) - %m%n\"/>\n        </Console>\n    </Appenders>\n    <Loggers>\n        <Logger name=\"com.opensymphony.xwork2\" level=\"debug\"/>\n        <Logger name=\"org.apache.struts2\" level=\"debug\"/>\n        <Root level=\"warn\">\n            <AppenderRef ref=\"STDOUT\"/>\n        </Root>\n    </Loggers>\n</Configuration>\n```\n\n3. 配置dependencies\n\n```\n</dependencies>\n\t<dependency>\n\t    <groupId>org.apache.struts</groupId>\n\t    <artifactId>struts2-core</artifactId>\n\t    <!-- <version>${struts2.version}</version> -->\n\t</dependency>\n\t<dependency>\n\t    <groupId>org.apache.logging.log4j</groupId>\n\t    <artifactId>log4j-core</artifactId>\n\t     <!--<version>${log4j2.version}</version> -->\n\t</dependency>\n\t<dependency>\n\t    <groupId>org.apache.logging.log4j</groupId>\n\t    <artifactId>log4j-api</artifactId>\n\t     <!-- <version>${log4j2.version}</version> -->\n\t</dependency>\n</dependencies>\n```\n\n4. 增加dependencyManagement配置\n\ndependencyManagement用于在parent pom中统一管理module的版本version。如下，当child module中依赖struts时候，只需要在dependencies中加入 groupId和artifactId即可，version会自动从parent pom中继承。\n\n```\n<dependencyManagement>\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.struts</groupId>\n\t\t\t<artifactId>struts2-bom</artifactId>\n\t\t\t<version>${struts2.version}</version>\n\t\t\t<type>pom</type>\n\t\t\t<scope>import</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t<artifactId>log4j-bom</artifactId>\n\t\t\t<version>${log4j2.version}</version>\n\t\t\t<scope>import</scope>\n\t\t\t<type>pom</type>\n\t\t</dependency>\n\t</dependencies>\n</dependencyManagement>\n```\n\n5. 修改web.xml文件\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app id=\"WebApp_ID\" version=\"2.4\"\n\txmlns=\"http://java.sun.com/xml/ns/j2ee\" \n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\">\n\t<display-name>Basic Struts2</display-name>\n\t<welcome-file-list>\n\t\t<welcome-file>index</welcome-file>\n\t</welcome-file-list>\n\n\t<filter>\n\t\t<filter-name>struts2</filter-name>\n\t\t<filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>\n\t</filter>\n\n\t<filter-mapping>\n\t\t<filter-name>struts2</filter-name>\n\t\t<url-pattern>/*</url-pattern>\n\t</filter-mapping>\n\n</web-app>\n```\n\n6. 在src/main/resources下创建struts.xml文件\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE struts PUBLIC\n    \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\"\n    \"http://struts.apache.org/dtds/struts-2.5.dtd\">\n\n<struts>\n\n    <constant name=\"struts.devMode\" value=\"true\" />\n\n    <package name=\"basicstruts2\" extends=\"struts-default\">\n        <action name=\"index\">\n            <result>/index.jsp</result>\n        </action>\n    </package>\n\n</struts>\n```\n7. 执行 mvn jetty:run 然后访问<http://localhost:8080/mobile-server/index.action>出现和之前<http://localhost:8080/mobile-server/index.jsp>一样的界面，则说明struts2配置成功。\n\n### 九、添加gson支持\n\n为了方便的构建JSON字符串，模拟接口请求返回，引入Gson。\n\n```\n<dependency>\n  <groupId>com.google.code.gson</groupId>\n  <artifactId>gson</artifactId>\n  <version>2.8.5</version>\n</dependency>\n```\n\n### 十、根据maven webapp目录结构，补全必要的目录\n\n创建相关代码资源目录和package, (创建代码目录时，需要先创建普通目录，然后用eclipse转化成代码目录：build path -> use as source folder)\n\n```\nsrc/test/java\nsrc/test/resource\nsrc/main/webapp/resources\nsrc/main/webapp/java\n\ncom.farubaba.mobile.server.action\ncom.farubaba.mobile.server.service\ncom.farubaba.mobile.server.dao\ncom.farubaba.mobile.server.modle\n```\n\n### 十一、编写login.jsp、LoginAction、LoginService、LoginDao并配置\n\n1. pom.xml添加jstl支持\n\n```\n<dependency>\n    <groupId>jstl</groupId>\n    <artifactId>jstl</artifactId>\n    <version>1.2</version>\n</dependency>\n```\n1. index.jsp中添加访问login.action的超链接\n\n```html\n <ol>\n    <li>通过 login.action 访问 (没有给userName和password参数) : <a href=\"<s:url action='login'/>\">[mobile-server/WEB-INF/resources/jsp/login.jsp]</a></li>\n </ol>\n    \n```\n2. 在login.jsp中使用带参数的login.action\n\n```\n<!DOCTYPE html>\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\n<%@ page import=\"com.google.gson.GsonBuilder\"%>\n<%@ page import=\"com.google.gson.Gson\" %>\n<%@ page import=\"com.farubaba.mobile.server.model.User\" %>\n<%@ taglib prefix=\"s\" uri=\"/struts-tags\" %>\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n\n\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\nString pageName = pageContext.getPage().getClass().getSimpleName();\n%>\n\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <title>Hello World! Struts2</title>\n    <style type=\"text/css\">\n    \t.button{\n    \t\twidth:300px;\n    \t\theight:30px;\n    \t\ttext-size:26pt;\n    \t\ttext-align:center;\n    \t\tbackground-color:#2bbc8a;\n    \t}\n    </style>\n  </head>\n  <body>  \t\n  \t<h2>\n  \t\t<%= pageName.replace(\"_002d\", \"-\").replace(\"_\", \".\") %> :\t\t\n  \t</h2>\n  \t<h4>查看地址栏Url，如果没有给userName和password参数，则并不会返回User对象，下面也不会有值显示：</h4>\n  \t<h4>JSON String User: [jsonUser] = <s:property value=\"jsonUser\" /></h4>\n  \t<h4>Object User: [user] = <s:property value=\"user\" /></h4>\n  \t<p>getServletName = <%= getServletName() %></p>\n  \t<p>getServletInfo = <%= getServletInfo() %></p>\n  \t<p>getServletContext.getAttribute() = <%= getServletContext().getAttribute(\"jsonUser\") %></p> \n    <!--\n    定义url action 和 param \n     -->\n     <s:url var=\"loginWithNoParam\" action=\"login\"></s:url>\n   \t\n   \t<s:url var=\"login\" action=\"login\">\n   \t\t<s:param name=\"userName\">farubaba</s:param>\n   \t\t<s:param name=\"password\">123456</s:param>\n   \t</s:url>\n   \t \n   \t<s:url var=\"userlogin\" action=\"userLogin\" >\n   \t\t<s:param name=\"userName\">farubaba</s:param>\n   \t\t<s:param name=\"password\">123456</s:param>\n   \t</s:url>\n   \t\n   \t<s:url var=\"userlogin\" action=\"userLogin\" >\n   \t\t<s:param name=\"userName\">farubaba</s:param>\n   \t\t<s:param name=\"password\">123456</s:param>\n   \t</s:url>\n   \t\n    <ul>\n    \t<li>没有登陆参数，调用 <a href=\"${loginWithNoParam}\">login.action -> return null String</a></li>\n    \t<li>提供正确登录参数，调用 <a href=\"${login}\">login.action -> return JSON String User</a></li>\n    \t<li>提供正确登录参数，调用<a href=\"${userlogin}\">userLogin.action -> return Object User </a></li>\n    \t<li>\n    \t使用form表单提交登录：(输入：<font color=\"red\">farubaba</font> 和 <font color=\"red\">123456</font> 可登录成功!登录成功后，JSON String User 和 Object User其中之一会有值)\n\t    <s:form action=\"login\">\n\t\t \t<s:textfield name=\"userName\" label=\"Your name\" />\n\t\t \t<s:textfield name=\"password\" label=\"Your password\" />\n\t\t \t<s:submit value=\"登录\" cssClass=\"button\" />\n\t\t</s:form>\n    \t</li>\n    </ul>\n    <p><p><p><s:include value=\"../../road-map.jsp\"></s:include>\n   \n  </body>\n</html>\n```\n### 十二、服务器端编程细节摘要\n\n|功能|解决方案|\n|----|----|\n|读取request中postbody|1.使用request.getInputStream()|\n|struts action中读写文件|1.获得文件路径：String path = ServletActionContext.getServletContext().getRealPath(\"/resources/files/test.md\");<br>生成绝对路径如：/environment/git-repo/mobile-server/src/main/webapp/resources/files/test.md|\n\n### 十三、编写服务端Action、Service、Dao，完整的代码已上传至github [mobile-server]\n\n### 十四、错误修正\n\n1. 可能出现/struts-tags 找不到的错误。\n\n\t\tmyeclipse Can not find the tag library descriptor for \"/struts- tags\"\n\t\n\t\t右键project-->build path-->Configure build path-->order and export\n\t\t勾选Maven dependencies ， 点击应用。\n2. web.xml web-app dtd版本错误\n\n\t\tOne or more constraints have not been satisfied. Apache Struts (2.x) 2.1 req\n\nweb.xml中替换如下内容：\n\n\t<!-- <!DOCTYPE web-app PUBLIC\n\t \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n\t \"http://java.sun.com/dtd/web-app_2_3.dtd\" > -->\n\n替换为：\n\n\t<web-app \n\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txmlns=\"http://java.sun.com/xml/ns/javaee\"\n\t\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n\t\tversion=\"3.0\" id=\"WebApp_1536392245753\">\n\t\t\n3. child module does not exist\n\n<div align=\"center\">\n\t<img src=\"/images/14、maven-child-module-not-exist.png\" width=\"90%\" />\n</div>\n\n4. 去掉webapp项目创建时自带的后缀: Maven Webapp , 例如 api-feature Maven Webapp 修改成 api-feature\n\t<div align=\"center\">\n\t<img src=\"/images/15、remove-maven-webapp-default-sufix-MavenWebapp\" width=\"90%\" />\n</div>\n\t\n\t\n\n[maven webapp目录结构]:https://www.cnblogs.com/plxx/p/5256979.html\n[Maven权威指南笔记]:Maven权威指南笔记.md\n[mobile-server]:https://github.com/Farubaba/mobile-server.git\n[一步一步创建Maven多module项目]:https://blog.csdn.net/luoxiang183/article/details/76215635\n\n\n\n","slug":"myeclipse、maven、struts2创建server项目","published":1,"updated":"2018-09-09T06:38:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hjr005gjs6spu4lx4i1","content":"<h3 id=\"一、参考文档及源码下载\"><a href=\"#一、参考文档及源码下载\" class=\"headerlink\" title=\"一、参考文档及源码下载\"></a>一、参考文档及源码下载</h3><p><a href=\"https://www.cnblogs.com/plxx/p/5256979.html\" target=\"_blank\" rel=\"noopener\">maven webapp目录结构</a></p>\n<p><a href=\"Maven权威指南笔记.md\">Maven权威指南笔记</a></p>\n<p><a href=\"https://blog.csdn.net/luoxiang183/article/details/76215635\" target=\"_blank\" rel=\"noopener\">一步一步创建Maven多module项目</a></p>\n<p>源代码下载地址：<a href=\"https://github.com/Farubaba/mobile-server.git\" target=\"_blank\" rel=\"noopener\">mobile-server</a></p>\n<h3 id=\"二、maven-webapp目录结构\"><a href=\"#二、maven-webapp目录结构\" class=\"headerlink\" title=\"二、maven webapp目录结构\"></a>二、maven webapp目录结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── pom.xml</span><br><span class=\"line\">└── src</span><br><span class=\"line\">    ├── main</span><br><span class=\"line\">    │   ├── java</span><br><span class=\"line\">    │   │   └── mygroup</span><br><span class=\"line\">    │   │       ├── controller</span><br><span class=\"line\">    │   │       │   ├── HomeController.java</span><br><span class=\"line\">    │   │       │   └── PersonController.java</span><br><span class=\"line\">    │   │       ├── dao</span><br><span class=\"line\">    │   │       │   └── PersonDao.java</span><br><span class=\"line\">    │   │       └── model</span><br><span class=\"line\">    │   │           └── Person.java</span><br><span class=\"line\">    │   ├── resources</span><br><span class=\"line\">    │   │   ├── db.properties</span><br><span class=\"line\">    │   │   ├── log4j.xml</span><br><span class=\"line\">    │   │   ├── struts.xml</span><br><span class=\"line\">    │   │   └── META-INF</span><br><span class=\"line\">    │   │       └── persistence.xml</span><br><span class=\"line\">    │   └── webapp</span><br><span class=\"line\">    │       ├── index.jsp</span><br><span class=\"line\">    │       ├── META-INF</span><br><span class=\"line\">    │       │   ├── context.xml</span><br><span class=\"line\">    │       │   └── MANIFEST.MF</span><br><span class=\"line\">    │       ├── resources</span><br><span class=\"line\">    │       │   └── css</span><br><span class=\"line\">    │       │       └── screen.css</span><br><span class=\"line\">    │       └── WEB-INF</span><br><span class=\"line\">    │           ├── spring</span><br><span class=\"line\">    │           │   ├── app</span><br><span class=\"line\">    │           │   │   ├── controllers.xml</span><br><span class=\"line\">    │           │   │   └── servlet-context.xml</span><br><span class=\"line\">    │           │   ├── db.xml</span><br><span class=\"line\">    │           │   └── root-context.xml</span><br><span class=\"line\">    │           ├── views</span><br><span class=\"line\">    │           │   ├── edit.jsp</span><br><span class=\"line\">    │           │   ├── home.jsp</span><br><span class=\"line\">    │           │   └── list.jsp</span><br><span class=\"line\">    │           └── web.xml</span><br><span class=\"line\">    └── test</span><br><span class=\"line\">        ├── java</span><br><span class=\"line\">        │   └── mygroup</span><br><span class=\"line\">        │       ├── controller</span><br><span class=\"line\">        │       │   ├── DataInitializer.java</span><br><span class=\"line\">        │       │   ├── HomeControllerTest.java</span><br><span class=\"line\">        │       │   └── PersonControllerTest.java</span><br><span class=\"line\">        │       └── dao</span><br><span class=\"line\">        │           └── PersonDaoTest.java</span><br><span class=\"line\">        └── resources</span><br><span class=\"line\">            ├── db.properties</span><br><span class=\"line\">            ├── log4j.xml</span><br><span class=\"line\">            ├── test-context.xml</span><br><span class=\"line\">            └── test-db.xml</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、Eclipse中使用maven-archetype-webapp创建maven-web项目\"><a href=\"#三、Eclipse中使用maven-archetype-webapp创建maven-web项目\" class=\"headerlink\" title=\"三、Eclipse中使用maven-archetype-webapp创建maven web项目\"></a>三、Eclipse中使用maven-archetype-webapp创建maven web项目</h3><blockquote>\n<p>File–&gt;New–&gt;Project–&gt;maven Project–&gt;选择maven-archetype-webapp–&gt;填写Group Id、Artifact Id、packageName等信息后–&gt;完成</p>\n</blockquote>\n<h3 id=\"四、定义webapp的contextPath\"><a href=\"#四、定义webapp的contextPath\" class=\"headerlink\" title=\"四、定义webapp的contextPath\"></a>四、定义webapp的contextPath</h3><p>在pom.xml文件中<build>下增加如下内容,其中mobile-server就是我们定义的contextPath</build></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;finalName&gt;mobile-server&lt;/finalName&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"五、添加Servlet支持\"><a href=\"#五、添加Servlet支持\" class=\"headerlink\" title=\"五、添加Servlet支持\"></a>五、添加Servlet支持</h3><p>pom.xml文件中添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;javax&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;javaee-api&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;7.0&lt;/version&gt;</span><br><span class=\"line\">  &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"六、修改index-jsp\"><a href=\"#六、修改index-jsp\" class=\"headerlink\" title=\"六、修改index.jsp\"></a>六、修改index.jsp</h3><p>在src/main/webapp下添加/修改 index.jsp，内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot; pageEncoding=&quot;UTF-8&quot; %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Basic Struts 2 Application - Welcome&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;h1&gt;Welcome To Struts 2!&lt;/h1&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"七、添加Jetty-maven-plugin\"><a href=\"#七、添加Jetty-maven-plugin\" class=\"headerlink\" title=\"七、添加Jetty maven plugin\"></a>七、添加Jetty maven plugin</h3><p>pom.xml文件中添加如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;plugin&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;jetty-maven-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;9.4.7.v20170914&lt;/version&gt;</span><br><span class=\"line\">    &lt;configuration&gt;</span><br><span class=\"line\">        &lt;webApp&gt;</span><br><span class=\"line\">            &lt;contextPath&gt;/$&#123;project.build.finalName&#125;&lt;/contextPath&gt;</span><br><span class=\"line\">        &lt;/webApp&gt;</span><br><span class=\"line\">        &lt;stopKey&gt;CTRL+C&lt;/stopKey&gt;</span><br><span class=\"line\">        &lt;stopPort&gt;8999&lt;/stopPort&gt;</span><br><span class=\"line\">        &lt;scanIntervalSeconds&gt;10&lt;/scanIntervalSeconds&gt;</span><br><span class=\"line\">        &lt;scanTargets&gt;</span><br><span class=\"line\">            &lt;scanTarget&gt;src/main/webapp/WEB-INF/web.xml&lt;/scanTarget&gt;</span><br><span class=\"line\">        &lt;/scanTargets&gt;</span><br><span class=\"line\">    &lt;/configuration&gt;</span><br><span class=\"line\">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure>\n<p>运行 mvn jetty:run，然后输入: <a href=\"http://localhost:8080/mobile-server/index.jsp\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/mobile-server/index.jsp</a> 访问页面,页面显示：Welcome To Struts 2! 则配置成功。</p>\n<h3 id=\"八、添加Struts2和Log4j支持\"><a href=\"#八、添加Struts2和Log4j支持\" class=\"headerlink\" title=\"八、添加Struts2和Log4j支持\"></a>八、添加Struts2和Log4j支持</h3><ol>\n<li>在\\&lt;properties>下添加struts2和log4j的版本属性</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;properties&gt;</span><br><span class=\"line\">\t&lt;struts2.version&gt;2.5.14.1&lt;/struts2.version&gt;</span><br><span class=\"line\">\t&lt;log4j2.version&gt;2.10.0&lt;/log4j2.version&gt;</span><br><span class=\"line\">&lt;/properties&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在src/main/resources下创建log4j2.xml</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;Configuration&gt;</span><br><span class=\"line\">    &lt;Appenders&gt;</span><br><span class=\"line\">        &lt;Console name=&quot;STDOUT&quot; target=&quot;SYSTEM_OUT&quot;&gt;</span><br><span class=\"line\">            &lt;PatternLayout pattern=&quot;%d %-5p [%t] %C&#123;2&#125; (%F:%L) - %m%n&quot;/&gt;</span><br><span class=\"line\">        &lt;/Console&gt;</span><br><span class=\"line\">    &lt;/Appenders&gt;</span><br><span class=\"line\">    &lt;Loggers&gt;</span><br><span class=\"line\">        &lt;Logger name=&quot;com.opensymphony.xwork2&quot; level=&quot;debug&quot;/&gt;</span><br><span class=\"line\">        &lt;Logger name=&quot;org.apache.struts2&quot; level=&quot;debug&quot;/&gt;</span><br><span class=\"line\">        &lt;Root level=&quot;warn&quot;&gt;</span><br><span class=\"line\">            &lt;AppenderRef ref=&quot;STDOUT&quot;/&gt;</span><br><span class=\"line\">        &lt;/Root&gt;</span><br><span class=\"line\">    &lt;/Loggers&gt;</span><br><span class=\"line\">&lt;/Configuration&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>配置dependencies</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;/dependencies&gt;</span><br><span class=\"line\">\t&lt;dependency&gt;</span><br><span class=\"line\">\t    &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;</span><br><span class=\"line\">\t    &lt;artifactId&gt;struts2-core&lt;/artifactId&gt;</span><br><span class=\"line\">\t    &lt;!-- &lt;version&gt;$&#123;struts2.version&#125;&lt;/version&gt; --&gt;</span><br><span class=\"line\">\t&lt;/dependency&gt;</span><br><span class=\"line\">\t&lt;dependency&gt;</span><br><span class=\"line\">\t    &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class=\"line\">\t    &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;</span><br><span class=\"line\">\t     &lt;!--&lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt; --&gt;</span><br><span class=\"line\">\t&lt;/dependency&gt;</span><br><span class=\"line\">\t&lt;dependency&gt;</span><br><span class=\"line\">\t    &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class=\"line\">\t    &lt;artifactId&gt;log4j-api&lt;/artifactId&gt;</span><br><span class=\"line\">\t     &lt;!-- &lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt; --&gt;</span><br><span class=\"line\">\t&lt;/dependency&gt;</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>增加dependencyManagement配置</li>\n</ol>\n<p>dependencyManagement用于在parent pom中统一管理module的版本version。如下，当child module中依赖struts时候，只需要在dependencies中加入 groupId和artifactId即可，version会自动从parent pom中继承。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencyManagement&gt;</span><br><span class=\"line\">\t&lt;dependencies&gt;</span><br><span class=\"line\">\t\t&lt;dependency&gt;</span><br><span class=\"line\">\t\t\t&lt;groupId&gt;org.apache.struts&lt;/groupId&gt;</span><br><span class=\"line\">\t\t\t&lt;artifactId&gt;struts2-bom&lt;/artifactId&gt;</span><br><span class=\"line\">\t\t\t&lt;version&gt;$&#123;struts2.version&#125;&lt;/version&gt;</span><br><span class=\"line\">\t\t\t&lt;type&gt;pom&lt;/type&gt;</span><br><span class=\"line\">\t\t\t&lt;scope&gt;import&lt;/scope&gt;</span><br><span class=\"line\">\t\t&lt;/dependency&gt;</span><br><span class=\"line\">\t\t&lt;dependency&gt;</span><br><span class=\"line\">\t\t\t&lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class=\"line\">\t\t\t&lt;artifactId&gt;log4j-bom&lt;/artifactId&gt;</span><br><span class=\"line\">\t\t\t&lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt;</span><br><span class=\"line\">\t\t\t&lt;scope&gt;import&lt;/scope&gt;</span><br><span class=\"line\">\t\t\t&lt;type&gt;pom&lt;/type&gt;</span><br><span class=\"line\">\t\t&lt;/dependency&gt;</span><br><span class=\"line\">\t&lt;/dependencies&gt;</span><br><span class=\"line\">&lt;/dependencyManagement&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>修改web.xml文件</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;web-app id=&quot;WebApp_ID&quot; version=&quot;2.4&quot;</span><br><span class=\"line\">\txmlns=&quot;http://java.sun.com/xml/ns/j2ee&quot; </span><br><span class=\"line\">\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class=\"line\">\txsi:schemaLocation=&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;&gt;</span><br><span class=\"line\">\t&lt;display-name&gt;Basic Struts2&lt;/display-name&gt;</span><br><span class=\"line\">\t&lt;welcome-file-list&gt;</span><br><span class=\"line\">\t\t&lt;welcome-file&gt;index&lt;/welcome-file&gt;</span><br><span class=\"line\">\t&lt;/welcome-file-list&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;filter&gt;</span><br><span class=\"line\">\t\t&lt;filter-name&gt;struts2&lt;/filter-name&gt;</span><br><span class=\"line\">\t\t&lt;filter-class&gt;org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt;</span><br><span class=\"line\">\t&lt;/filter&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;filter-mapping&gt;</span><br><span class=\"line\">\t\t&lt;filter-name&gt;struts2&lt;/filter-name&gt;</span><br><span class=\"line\">\t\t&lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class=\"line\">\t&lt;/filter-mapping&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>在src/main/resources下创建struts.xml文件</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE struts PUBLIC</span><br><span class=\"line\">    &quot;-//Apache Software Foundation//DTD Struts Configuration 2.5//EN&quot;</span><br><span class=\"line\">    &quot;http://struts.apache.org/dtds/struts-2.5.dtd&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;struts&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;constant name=&quot;struts.devMode&quot; value=&quot;true&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;package name=&quot;basicstruts2&quot; extends=&quot;struts-default&quot;&gt;</span><br><span class=\"line\">        &lt;action name=&quot;index&quot;&gt;</span><br><span class=\"line\">            &lt;result&gt;/index.jsp&lt;/result&gt;</span><br><span class=\"line\">        &lt;/action&gt;</span><br><span class=\"line\">    &lt;/package&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/struts&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>执行 mvn jetty:run 然后访问<a href=\"http://localhost:8080/mobile-server/index.action\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/mobile-server/index.action</a>出现和之前<a href=\"http://localhost:8080/mobile-server/index.jsp\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/mobile-server/index.jsp</a>一样的界面，则说明struts2配置成功。</li>\n</ol>\n<h3 id=\"九、添加gson支持\"><a href=\"#九、添加gson支持\" class=\"headerlink\" title=\"九、添加gson支持\"></a>九、添加gson支持</h3><p>为了方便的构建JSON字符串，模拟接口请求返回，引入Gson。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;gson&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;2.8.5&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"十、根据maven-webapp目录结构，补全必要的目录\"><a href=\"#十、根据maven-webapp目录结构，补全必要的目录\" class=\"headerlink\" title=\"十、根据maven webapp目录结构，补全必要的目录\"></a>十、根据maven webapp目录结构，补全必要的目录</h3><p>创建相关代码资源目录和package, (创建代码目录时，需要先创建普通目录，然后用eclipse转化成代码目录：build path -&gt; use as source folder)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/test/java</span><br><span class=\"line\">src/test/resource</span><br><span class=\"line\">src/main/webapp/resources</span><br><span class=\"line\">src/main/webapp/java</span><br><span class=\"line\"></span><br><span class=\"line\">com.farubaba.mobile.server.action</span><br><span class=\"line\">com.farubaba.mobile.server.service</span><br><span class=\"line\">com.farubaba.mobile.server.dao</span><br><span class=\"line\">com.farubaba.mobile.server.modle</span><br></pre></td></tr></table></figure>\n<h3 id=\"十一、编写login-jsp、LoginAction、LoginService、LoginDao并配置\"><a href=\"#十一、编写login-jsp、LoginAction、LoginService、LoginDao并配置\" class=\"headerlink\" title=\"十一、编写login.jsp、LoginAction、LoginService、LoginDao并配置\"></a>十一、编写login.jsp、LoginAction、LoginService、LoginDao并配置</h3><ol>\n<li>pom.xml添加jstl支持</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;jstl&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.2&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>index.jsp中添加访问login.action的超链接</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>通过 login.action 访问 (没有给userName和password参数) : <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&lt;s:url action='login'/&gt;\"</span>&gt;</span>[mobile-server/WEB-INF/resources/jsp/login.jsp]<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在login.jsp中使用带参数的login.action</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot; pageEncoding=&quot;UTF-8&quot; %&gt;</span><br><span class=\"line\">&lt;%@ page import=&quot;com.google.gson.GsonBuilder&quot;%&gt;</span><br><span class=\"line\">&lt;%@ page import=&quot;com.google.gson.Gson&quot; %&gt;</span><br><span class=\"line\">&lt;%@ page import=&quot;com.farubaba.mobile.server.model.User&quot; %&gt;</span><br><span class=\"line\">&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot; %&gt;</span><br><span class=\"line\">&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class=\"line\">String pageName = pageContext.getPage().getClass().getSimpleName();</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Hello World! Struts2&lt;/title&gt;</span><br><span class=\"line\">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">    \t.button&#123;</span><br><span class=\"line\">    \t\twidth:300px;</span><br><span class=\"line\">    \t\theight:30px;</span><br><span class=\"line\">    \t\ttext-size:26pt;</span><br><span class=\"line\">    \t\ttext-align:center;</span><br><span class=\"line\">    \t\tbackground-color:#2bbc8a;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;  \t</span><br><span class=\"line\">  \t&lt;h2&gt;</span><br><span class=\"line\">  \t\t&lt;%= pageName.replace(&quot;_002d&quot;, &quot;-&quot;).replace(&quot;_&quot;, &quot;.&quot;) %&gt; :\t\t</span><br><span class=\"line\">  \t&lt;/h2&gt;</span><br><span class=\"line\">  \t&lt;h4&gt;查看地址栏Url，如果没有给userName和password参数，则并不会返回User对象，下面也不会有值显示：&lt;/h4&gt;</span><br><span class=\"line\">  \t&lt;h4&gt;JSON String User: [jsonUser] = &lt;s:property value=&quot;jsonUser&quot; /&gt;&lt;/h4&gt;</span><br><span class=\"line\">  \t&lt;h4&gt;Object User: [user] = &lt;s:property value=&quot;user&quot; /&gt;&lt;/h4&gt;</span><br><span class=\"line\">  \t&lt;p&gt;getServletName = &lt;%= getServletName() %&gt;&lt;/p&gt;</span><br><span class=\"line\">  \t&lt;p&gt;getServletInfo = &lt;%= getServletInfo() %&gt;&lt;/p&gt;</span><br><span class=\"line\">  \t&lt;p&gt;getServletContext.getAttribute() = &lt;%= getServletContext().getAttribute(&quot;jsonUser&quot;) %&gt;&lt;/p&gt; </span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">    定义url action 和 param </span><br><span class=\"line\">     --&gt;</span><br><span class=\"line\">     &lt;s:url var=&quot;loginWithNoParam&quot; action=&quot;login&quot;&gt;&lt;/s:url&gt;</span><br><span class=\"line\">   \t</span><br><span class=\"line\">   \t&lt;s:url var=&quot;login&quot; action=&quot;login&quot;&gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;userName&quot;&gt;farubaba&lt;/s:param&gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;password&quot;&gt;123456&lt;/s:param&gt;</span><br><span class=\"line\">   \t&lt;/s:url&gt;</span><br><span class=\"line\">   \t </span><br><span class=\"line\">   \t&lt;s:url var=&quot;userlogin&quot; action=&quot;userLogin&quot; &gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;userName&quot;&gt;farubaba&lt;/s:param&gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;password&quot;&gt;123456&lt;/s:param&gt;</span><br><span class=\"line\">   \t&lt;/s:url&gt;</span><br><span class=\"line\">   \t</span><br><span class=\"line\">   \t&lt;s:url var=&quot;userlogin&quot; action=&quot;userLogin&quot; &gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;userName&quot;&gt;farubaba&lt;/s:param&gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;password&quot;&gt;123456&lt;/s:param&gt;</span><br><span class=\"line\">   \t&lt;/s:url&gt;</span><br><span class=\"line\">   \t</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">    \t&lt;li&gt;没有登陆参数，调用 &lt;a href=&quot;$&#123;loginWithNoParam&#125;&quot;&gt;login.action -&gt; return null String&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    \t&lt;li&gt;提供正确登录参数，调用 &lt;a href=&quot;$&#123;login&#125;&quot;&gt;login.action -&gt; return JSON String User&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    \t&lt;li&gt;提供正确登录参数，调用&lt;a href=&quot;$&#123;userlogin&#125;&quot;&gt;userLogin.action -&gt; return Object User &lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    \t&lt;li&gt;</span><br><span class=\"line\">    \t使用form表单提交登录：(输入：&lt;font color=&quot;red&quot;&gt;farubaba&lt;/font&gt; 和 &lt;font color=&quot;red&quot;&gt;123456&lt;/font&gt; 可登录成功!登录成功后，JSON String User 和 Object User其中之一会有值)</span><br><span class=\"line\">\t    &lt;s:form action=&quot;login&quot;&gt;</span><br><span class=\"line\">\t\t \t&lt;s:textfield name=&quot;userName&quot; label=&quot;Your name&quot; /&gt;</span><br><span class=\"line\">\t\t \t&lt;s:textfield name=&quot;password&quot; label=&quot;Your password&quot; /&gt;</span><br><span class=\"line\">\t\t \t&lt;s:submit value=&quot;登录&quot; cssClass=&quot;button&quot; /&gt;</span><br><span class=\"line\">\t\t&lt;/s:form&gt;</span><br><span class=\"line\">    \t&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">    &lt;p&gt;&lt;p&gt;&lt;p&gt;&lt;s:include value=&quot;../../road-map.jsp&quot;&gt;&lt;/s:include&gt;</span><br><span class=\"line\">   </span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"十二、服务器端编程细节摘要\"><a href=\"#十二、服务器端编程细节摘要\" class=\"headerlink\" title=\"十二、服务器端编程细节摘要\"></a>十二、服务器端编程细节摘要</h3><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>解决方案</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>读取request中postbody</td>\n<td>1.使用request.getInputStream()</td>\n</tr>\n<tr>\n<td>struts action中读写文件</td>\n<td>1.获得文件路径：String path = ServletActionContext.getServletContext().getRealPath(“/resources/files/test.md”);<br>生成绝对路径如：/environment/git-repo/mobile-server/src/main/webapp/resources/files/test.md</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"十三、编写服务端Action、Service、Dao，完整的代码已上传至github-mobile-server\"><a href=\"#十三、编写服务端Action、Service、Dao，完整的代码已上传至github-mobile-server\" class=\"headerlink\" title=\"十三、编写服务端Action、Service、Dao，完整的代码已上传至github mobile-server\"></a>十三、编写服务端Action、Service、Dao，完整的代码已上传至github <a href=\"https://github.com/Farubaba/mobile-server.git\" target=\"_blank\" rel=\"noopener\">mobile-server</a></h3><h3 id=\"十四、错误修正\"><a href=\"#十四、错误修正\" class=\"headerlink\" title=\"十四、错误修正\"></a>十四、错误修正</h3><ol>\n<li><p>可能出现/struts-tags 找不到的错误。</p>\n<pre><code>myeclipse Can not find the tag library descriptor for &quot;/struts- tags&quot;\n\n右键project--&gt;build path--&gt;Configure build path--&gt;order and export\n勾选Maven dependencies ， 点击应用。\n</code></pre></li>\n<li><p>web.xml web-app dtd版本错误</p>\n<pre><code>One or more constraints have not been satisfied. Apache Struts (2.x) 2.1 req\n</code></pre></li>\n</ol>\n<p>web.xml中替换如下内容：</p>\n<pre><code>&lt;!-- &lt;!DOCTYPE web-app PUBLIC\n &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;\n &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt; --&gt;\n</code></pre><p>替换为：</p>\n<pre><code>&lt;web-app \n    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n    xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;\n    xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;\n    version=&quot;3.0&quot; id=&quot;WebApp_1536392245753&quot;&gt;\n</code></pre><ol start=\"3\">\n<li>child module does not exist</li>\n</ol>\n<div align=\"center\"><br>    <img src=\"/images/14、maven-child-module-not-exist.png\" width=\"90%\"><br></div>\n\n<ol start=\"4\">\n<li>去掉webapp项目创建时自带的后缀: Maven Webapp , 例如 api-feature Maven Webapp 修改成 api-feature <div align=\"center\"><br> <img src=\"/images/15、remove-maven-webapp-default-sufix-MavenWebapp\" width=\"90%\"><br></div>\n\n\n\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、参考文档及源码下载\"><a href=\"#一、参考文档及源码下载\" class=\"headerlink\" title=\"一、参考文档及源码下载\"></a>一、参考文档及源码下载</h3><p><a href=\"https://www.cnblogs.com/plxx/p/5256979.html\" target=\"_blank\" rel=\"noopener\">maven webapp目录结构</a></p>\n<p><a href=\"Maven权威指南笔记.md\">Maven权威指南笔记</a></p>\n<p><a href=\"https://blog.csdn.net/luoxiang183/article/details/76215635\" target=\"_blank\" rel=\"noopener\">一步一步创建Maven多module项目</a></p>\n<p>源代码下载地址：<a href=\"https://github.com/Farubaba/mobile-server.git\" target=\"_blank\" rel=\"noopener\">mobile-server</a></p>\n<h3 id=\"二、maven-webapp目录结构\"><a href=\"#二、maven-webapp目录结构\" class=\"headerlink\" title=\"二、maven webapp目录结构\"></a>二、maven webapp目录结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── pom.xml</span><br><span class=\"line\">└── src</span><br><span class=\"line\">    ├── main</span><br><span class=\"line\">    │   ├── java</span><br><span class=\"line\">    │   │   └── mygroup</span><br><span class=\"line\">    │   │       ├── controller</span><br><span class=\"line\">    │   │       │   ├── HomeController.java</span><br><span class=\"line\">    │   │       │   └── PersonController.java</span><br><span class=\"line\">    │   │       ├── dao</span><br><span class=\"line\">    │   │       │   └── PersonDao.java</span><br><span class=\"line\">    │   │       └── model</span><br><span class=\"line\">    │   │           └── Person.java</span><br><span class=\"line\">    │   ├── resources</span><br><span class=\"line\">    │   │   ├── db.properties</span><br><span class=\"line\">    │   │   ├── log4j.xml</span><br><span class=\"line\">    │   │   ├── struts.xml</span><br><span class=\"line\">    │   │   └── META-INF</span><br><span class=\"line\">    │   │       └── persistence.xml</span><br><span class=\"line\">    │   └── webapp</span><br><span class=\"line\">    │       ├── index.jsp</span><br><span class=\"line\">    │       ├── META-INF</span><br><span class=\"line\">    │       │   ├── context.xml</span><br><span class=\"line\">    │       │   └── MANIFEST.MF</span><br><span class=\"line\">    │       ├── resources</span><br><span class=\"line\">    │       │   └── css</span><br><span class=\"line\">    │       │       └── screen.css</span><br><span class=\"line\">    │       └── WEB-INF</span><br><span class=\"line\">    │           ├── spring</span><br><span class=\"line\">    │           │   ├── app</span><br><span class=\"line\">    │           │   │   ├── controllers.xml</span><br><span class=\"line\">    │           │   │   └── servlet-context.xml</span><br><span class=\"line\">    │           │   ├── db.xml</span><br><span class=\"line\">    │           │   └── root-context.xml</span><br><span class=\"line\">    │           ├── views</span><br><span class=\"line\">    │           │   ├── edit.jsp</span><br><span class=\"line\">    │           │   ├── home.jsp</span><br><span class=\"line\">    │           │   └── list.jsp</span><br><span class=\"line\">    │           └── web.xml</span><br><span class=\"line\">    └── test</span><br><span class=\"line\">        ├── java</span><br><span class=\"line\">        │   └── mygroup</span><br><span class=\"line\">        │       ├── controller</span><br><span class=\"line\">        │       │   ├── DataInitializer.java</span><br><span class=\"line\">        │       │   ├── HomeControllerTest.java</span><br><span class=\"line\">        │       │   └── PersonControllerTest.java</span><br><span class=\"line\">        │       └── dao</span><br><span class=\"line\">        │           └── PersonDaoTest.java</span><br><span class=\"line\">        └── resources</span><br><span class=\"line\">            ├── db.properties</span><br><span class=\"line\">            ├── log4j.xml</span><br><span class=\"line\">            ├── test-context.xml</span><br><span class=\"line\">            └── test-db.xml</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、Eclipse中使用maven-archetype-webapp创建maven-web项目\"><a href=\"#三、Eclipse中使用maven-archetype-webapp创建maven-web项目\" class=\"headerlink\" title=\"三、Eclipse中使用maven-archetype-webapp创建maven web项目\"></a>三、Eclipse中使用maven-archetype-webapp创建maven web项目</h3><blockquote>\n<p>File–&gt;New–&gt;Project–&gt;maven Project–&gt;选择maven-archetype-webapp–&gt;填写Group Id、Artifact Id、packageName等信息后–&gt;完成</p>\n</blockquote>\n<h3 id=\"四、定义webapp的contextPath\"><a href=\"#四、定义webapp的contextPath\" class=\"headerlink\" title=\"四、定义webapp的contextPath\"></a>四、定义webapp的contextPath</h3><p>在pom.xml文件中<build>下增加如下内容,其中mobile-server就是我们定义的contextPath</build></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;finalName&gt;mobile-server&lt;/finalName&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"五、添加Servlet支持\"><a href=\"#五、添加Servlet支持\" class=\"headerlink\" title=\"五、添加Servlet支持\"></a>五、添加Servlet支持</h3><p>pom.xml文件中添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;javax&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;javaee-api&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;7.0&lt;/version&gt;</span><br><span class=\"line\">  &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"六、修改index-jsp\"><a href=\"#六、修改index-jsp\" class=\"headerlink\" title=\"六、修改index.jsp\"></a>六、修改index.jsp</h3><p>在src/main/webapp下添加/修改 index.jsp，内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot; pageEncoding=&quot;UTF-8&quot; %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Basic Struts 2 Application - Welcome&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;h1&gt;Welcome To Struts 2!&lt;/h1&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"七、添加Jetty-maven-plugin\"><a href=\"#七、添加Jetty-maven-plugin\" class=\"headerlink\" title=\"七、添加Jetty maven plugin\"></a>七、添加Jetty maven plugin</h3><p>pom.xml文件中添加如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;plugin&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;jetty-maven-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;9.4.7.v20170914&lt;/version&gt;</span><br><span class=\"line\">    &lt;configuration&gt;</span><br><span class=\"line\">        &lt;webApp&gt;</span><br><span class=\"line\">            &lt;contextPath&gt;/$&#123;project.build.finalName&#125;&lt;/contextPath&gt;</span><br><span class=\"line\">        &lt;/webApp&gt;</span><br><span class=\"line\">        &lt;stopKey&gt;CTRL+C&lt;/stopKey&gt;</span><br><span class=\"line\">        &lt;stopPort&gt;8999&lt;/stopPort&gt;</span><br><span class=\"line\">        &lt;scanIntervalSeconds&gt;10&lt;/scanIntervalSeconds&gt;</span><br><span class=\"line\">        &lt;scanTargets&gt;</span><br><span class=\"line\">            &lt;scanTarget&gt;src/main/webapp/WEB-INF/web.xml&lt;/scanTarget&gt;</span><br><span class=\"line\">        &lt;/scanTargets&gt;</span><br><span class=\"line\">    &lt;/configuration&gt;</span><br><span class=\"line\">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure>\n<p>运行 mvn jetty:run，然后输入: <a href=\"http://localhost:8080/mobile-server/index.jsp\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/mobile-server/index.jsp</a> 访问页面,页面显示：Welcome To Struts 2! 则配置成功。</p>\n<h3 id=\"八、添加Struts2和Log4j支持\"><a href=\"#八、添加Struts2和Log4j支持\" class=\"headerlink\" title=\"八、添加Struts2和Log4j支持\"></a>八、添加Struts2和Log4j支持</h3><ol>\n<li>在\\&lt;properties>下添加struts2和log4j的版本属性</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;properties&gt;</span><br><span class=\"line\">\t&lt;struts2.version&gt;2.5.14.1&lt;/struts2.version&gt;</span><br><span class=\"line\">\t&lt;log4j2.version&gt;2.10.0&lt;/log4j2.version&gt;</span><br><span class=\"line\">&lt;/properties&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在src/main/resources下创建log4j2.xml</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;Configuration&gt;</span><br><span class=\"line\">    &lt;Appenders&gt;</span><br><span class=\"line\">        &lt;Console name=&quot;STDOUT&quot; target=&quot;SYSTEM_OUT&quot;&gt;</span><br><span class=\"line\">            &lt;PatternLayout pattern=&quot;%d %-5p [%t] %C&#123;2&#125; (%F:%L) - %m%n&quot;/&gt;</span><br><span class=\"line\">        &lt;/Console&gt;</span><br><span class=\"line\">    &lt;/Appenders&gt;</span><br><span class=\"line\">    &lt;Loggers&gt;</span><br><span class=\"line\">        &lt;Logger name=&quot;com.opensymphony.xwork2&quot; level=&quot;debug&quot;/&gt;</span><br><span class=\"line\">        &lt;Logger name=&quot;org.apache.struts2&quot; level=&quot;debug&quot;/&gt;</span><br><span class=\"line\">        &lt;Root level=&quot;warn&quot;&gt;</span><br><span class=\"line\">            &lt;AppenderRef ref=&quot;STDOUT&quot;/&gt;</span><br><span class=\"line\">        &lt;/Root&gt;</span><br><span class=\"line\">    &lt;/Loggers&gt;</span><br><span class=\"line\">&lt;/Configuration&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>配置dependencies</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;/dependencies&gt;</span><br><span class=\"line\">\t&lt;dependency&gt;</span><br><span class=\"line\">\t    &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;</span><br><span class=\"line\">\t    &lt;artifactId&gt;struts2-core&lt;/artifactId&gt;</span><br><span class=\"line\">\t    &lt;!-- &lt;version&gt;$&#123;struts2.version&#125;&lt;/version&gt; --&gt;</span><br><span class=\"line\">\t&lt;/dependency&gt;</span><br><span class=\"line\">\t&lt;dependency&gt;</span><br><span class=\"line\">\t    &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class=\"line\">\t    &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;</span><br><span class=\"line\">\t     &lt;!--&lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt; --&gt;</span><br><span class=\"line\">\t&lt;/dependency&gt;</span><br><span class=\"line\">\t&lt;dependency&gt;</span><br><span class=\"line\">\t    &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class=\"line\">\t    &lt;artifactId&gt;log4j-api&lt;/artifactId&gt;</span><br><span class=\"line\">\t     &lt;!-- &lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt; --&gt;</span><br><span class=\"line\">\t&lt;/dependency&gt;</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>增加dependencyManagement配置</li>\n</ol>\n<p>dependencyManagement用于在parent pom中统一管理module的版本version。如下，当child module中依赖struts时候，只需要在dependencies中加入 groupId和artifactId即可，version会自动从parent pom中继承。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencyManagement&gt;</span><br><span class=\"line\">\t&lt;dependencies&gt;</span><br><span class=\"line\">\t\t&lt;dependency&gt;</span><br><span class=\"line\">\t\t\t&lt;groupId&gt;org.apache.struts&lt;/groupId&gt;</span><br><span class=\"line\">\t\t\t&lt;artifactId&gt;struts2-bom&lt;/artifactId&gt;</span><br><span class=\"line\">\t\t\t&lt;version&gt;$&#123;struts2.version&#125;&lt;/version&gt;</span><br><span class=\"line\">\t\t\t&lt;type&gt;pom&lt;/type&gt;</span><br><span class=\"line\">\t\t\t&lt;scope&gt;import&lt;/scope&gt;</span><br><span class=\"line\">\t\t&lt;/dependency&gt;</span><br><span class=\"line\">\t\t&lt;dependency&gt;</span><br><span class=\"line\">\t\t\t&lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class=\"line\">\t\t\t&lt;artifactId&gt;log4j-bom&lt;/artifactId&gt;</span><br><span class=\"line\">\t\t\t&lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt;</span><br><span class=\"line\">\t\t\t&lt;scope&gt;import&lt;/scope&gt;</span><br><span class=\"line\">\t\t\t&lt;type&gt;pom&lt;/type&gt;</span><br><span class=\"line\">\t\t&lt;/dependency&gt;</span><br><span class=\"line\">\t&lt;/dependencies&gt;</span><br><span class=\"line\">&lt;/dependencyManagement&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>修改web.xml文件</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;web-app id=&quot;WebApp_ID&quot; version=&quot;2.4&quot;</span><br><span class=\"line\">\txmlns=&quot;http://java.sun.com/xml/ns/j2ee&quot; </span><br><span class=\"line\">\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class=\"line\">\txsi:schemaLocation=&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;&gt;</span><br><span class=\"line\">\t&lt;display-name&gt;Basic Struts2&lt;/display-name&gt;</span><br><span class=\"line\">\t&lt;welcome-file-list&gt;</span><br><span class=\"line\">\t\t&lt;welcome-file&gt;index&lt;/welcome-file&gt;</span><br><span class=\"line\">\t&lt;/welcome-file-list&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;filter&gt;</span><br><span class=\"line\">\t\t&lt;filter-name&gt;struts2&lt;/filter-name&gt;</span><br><span class=\"line\">\t\t&lt;filter-class&gt;org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt;</span><br><span class=\"line\">\t&lt;/filter&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;filter-mapping&gt;</span><br><span class=\"line\">\t\t&lt;filter-name&gt;struts2&lt;/filter-name&gt;</span><br><span class=\"line\">\t\t&lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class=\"line\">\t&lt;/filter-mapping&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>在src/main/resources下创建struts.xml文件</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE struts PUBLIC</span><br><span class=\"line\">    &quot;-//Apache Software Foundation//DTD Struts Configuration 2.5//EN&quot;</span><br><span class=\"line\">    &quot;http://struts.apache.org/dtds/struts-2.5.dtd&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;struts&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;constant name=&quot;struts.devMode&quot; value=&quot;true&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;package name=&quot;basicstruts2&quot; extends=&quot;struts-default&quot;&gt;</span><br><span class=\"line\">        &lt;action name=&quot;index&quot;&gt;</span><br><span class=\"line\">            &lt;result&gt;/index.jsp&lt;/result&gt;</span><br><span class=\"line\">        &lt;/action&gt;</span><br><span class=\"line\">    &lt;/package&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/struts&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>执行 mvn jetty:run 然后访问<a href=\"http://localhost:8080/mobile-server/index.action\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/mobile-server/index.action</a>出现和之前<a href=\"http://localhost:8080/mobile-server/index.jsp\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/mobile-server/index.jsp</a>一样的界面，则说明struts2配置成功。</li>\n</ol>\n<h3 id=\"九、添加gson支持\"><a href=\"#九、添加gson支持\" class=\"headerlink\" title=\"九、添加gson支持\"></a>九、添加gson支持</h3><p>为了方便的构建JSON字符串，模拟接口请求返回，引入Gson。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">  &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;gson&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;2.8.5&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"十、根据maven-webapp目录结构，补全必要的目录\"><a href=\"#十、根据maven-webapp目录结构，补全必要的目录\" class=\"headerlink\" title=\"十、根据maven webapp目录结构，补全必要的目录\"></a>十、根据maven webapp目录结构，补全必要的目录</h3><p>创建相关代码资源目录和package, (创建代码目录时，需要先创建普通目录，然后用eclipse转化成代码目录：build path -&gt; use as source folder)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/test/java</span><br><span class=\"line\">src/test/resource</span><br><span class=\"line\">src/main/webapp/resources</span><br><span class=\"line\">src/main/webapp/java</span><br><span class=\"line\"></span><br><span class=\"line\">com.farubaba.mobile.server.action</span><br><span class=\"line\">com.farubaba.mobile.server.service</span><br><span class=\"line\">com.farubaba.mobile.server.dao</span><br><span class=\"line\">com.farubaba.mobile.server.modle</span><br></pre></td></tr></table></figure>\n<h3 id=\"十一、编写login-jsp、LoginAction、LoginService、LoginDao并配置\"><a href=\"#十一、编写login-jsp、LoginAction、LoginService、LoginDao并配置\" class=\"headerlink\" title=\"十一、编写login.jsp、LoginAction、LoginService、LoginDao并配置\"></a>十一、编写login.jsp、LoginAction、LoginService、LoginDao并配置</h3><ol>\n<li>pom.xml添加jstl支持</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;jstl&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.2&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>index.jsp中添加访问login.action的超链接</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>通过 login.action 访问 (没有给userName和password参数) : <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&lt;s:url action='login'/&gt;\"</span>&gt;</span>[mobile-server/WEB-INF/resources/jsp/login.jsp]<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在login.jsp中使用带参数的login.action</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot; pageEncoding=&quot;UTF-8&quot; %&gt;</span><br><span class=\"line\">&lt;%@ page import=&quot;com.google.gson.GsonBuilder&quot;%&gt;</span><br><span class=\"line\">&lt;%@ page import=&quot;com.google.gson.Gson&quot; %&gt;</span><br><span class=\"line\">&lt;%@ page import=&quot;com.farubaba.mobile.server.model.User&quot; %&gt;</span><br><span class=\"line\">&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot; %&gt;</span><br><span class=\"line\">&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class=\"line\">String pageName = pageContext.getPage().getClass().getSimpleName();</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Hello World! Struts2&lt;/title&gt;</span><br><span class=\"line\">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">    \t.button&#123;</span><br><span class=\"line\">    \t\twidth:300px;</span><br><span class=\"line\">    \t\theight:30px;</span><br><span class=\"line\">    \t\ttext-size:26pt;</span><br><span class=\"line\">    \t\ttext-align:center;</span><br><span class=\"line\">    \t\tbackground-color:#2bbc8a;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;  \t</span><br><span class=\"line\">  \t&lt;h2&gt;</span><br><span class=\"line\">  \t\t&lt;%= pageName.replace(&quot;_002d&quot;, &quot;-&quot;).replace(&quot;_&quot;, &quot;.&quot;) %&gt; :\t\t</span><br><span class=\"line\">  \t&lt;/h2&gt;</span><br><span class=\"line\">  \t&lt;h4&gt;查看地址栏Url，如果没有给userName和password参数，则并不会返回User对象，下面也不会有值显示：&lt;/h4&gt;</span><br><span class=\"line\">  \t&lt;h4&gt;JSON String User: [jsonUser] = &lt;s:property value=&quot;jsonUser&quot; /&gt;&lt;/h4&gt;</span><br><span class=\"line\">  \t&lt;h4&gt;Object User: [user] = &lt;s:property value=&quot;user&quot; /&gt;&lt;/h4&gt;</span><br><span class=\"line\">  \t&lt;p&gt;getServletName = &lt;%= getServletName() %&gt;&lt;/p&gt;</span><br><span class=\"line\">  \t&lt;p&gt;getServletInfo = &lt;%= getServletInfo() %&gt;&lt;/p&gt;</span><br><span class=\"line\">  \t&lt;p&gt;getServletContext.getAttribute() = &lt;%= getServletContext().getAttribute(&quot;jsonUser&quot;) %&gt;&lt;/p&gt; </span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">    定义url action 和 param </span><br><span class=\"line\">     --&gt;</span><br><span class=\"line\">     &lt;s:url var=&quot;loginWithNoParam&quot; action=&quot;login&quot;&gt;&lt;/s:url&gt;</span><br><span class=\"line\">   \t</span><br><span class=\"line\">   \t&lt;s:url var=&quot;login&quot; action=&quot;login&quot;&gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;userName&quot;&gt;farubaba&lt;/s:param&gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;password&quot;&gt;123456&lt;/s:param&gt;</span><br><span class=\"line\">   \t&lt;/s:url&gt;</span><br><span class=\"line\">   \t </span><br><span class=\"line\">   \t&lt;s:url var=&quot;userlogin&quot; action=&quot;userLogin&quot; &gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;userName&quot;&gt;farubaba&lt;/s:param&gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;password&quot;&gt;123456&lt;/s:param&gt;</span><br><span class=\"line\">   \t&lt;/s:url&gt;</span><br><span class=\"line\">   \t</span><br><span class=\"line\">   \t&lt;s:url var=&quot;userlogin&quot; action=&quot;userLogin&quot; &gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;userName&quot;&gt;farubaba&lt;/s:param&gt;</span><br><span class=\"line\">   \t\t&lt;s:param name=&quot;password&quot;&gt;123456&lt;/s:param&gt;</span><br><span class=\"line\">   \t&lt;/s:url&gt;</span><br><span class=\"line\">   \t</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">    \t&lt;li&gt;没有登陆参数，调用 &lt;a href=&quot;$&#123;loginWithNoParam&#125;&quot;&gt;login.action -&gt; return null String&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    \t&lt;li&gt;提供正确登录参数，调用 &lt;a href=&quot;$&#123;login&#125;&quot;&gt;login.action -&gt; return JSON String User&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    \t&lt;li&gt;提供正确登录参数，调用&lt;a href=&quot;$&#123;userlogin&#125;&quot;&gt;userLogin.action -&gt; return Object User &lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    \t&lt;li&gt;</span><br><span class=\"line\">    \t使用form表单提交登录：(输入：&lt;font color=&quot;red&quot;&gt;farubaba&lt;/font&gt; 和 &lt;font color=&quot;red&quot;&gt;123456&lt;/font&gt; 可登录成功!登录成功后，JSON String User 和 Object User其中之一会有值)</span><br><span class=\"line\">\t    &lt;s:form action=&quot;login&quot;&gt;</span><br><span class=\"line\">\t\t \t&lt;s:textfield name=&quot;userName&quot; label=&quot;Your name&quot; /&gt;</span><br><span class=\"line\">\t\t \t&lt;s:textfield name=&quot;password&quot; label=&quot;Your password&quot; /&gt;</span><br><span class=\"line\">\t\t \t&lt;s:submit value=&quot;登录&quot; cssClass=&quot;button&quot; /&gt;</span><br><span class=\"line\">\t\t&lt;/s:form&gt;</span><br><span class=\"line\">    \t&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">    &lt;p&gt;&lt;p&gt;&lt;p&gt;&lt;s:include value=&quot;../../road-map.jsp&quot;&gt;&lt;/s:include&gt;</span><br><span class=\"line\">   </span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"十二、服务器端编程细节摘要\"><a href=\"#十二、服务器端编程细节摘要\" class=\"headerlink\" title=\"十二、服务器端编程细节摘要\"></a>十二、服务器端编程细节摘要</h3><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>解决方案</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>读取request中postbody</td>\n<td>1.使用request.getInputStream()</td>\n</tr>\n<tr>\n<td>struts action中读写文件</td>\n<td>1.获得文件路径：String path = ServletActionContext.getServletContext().getRealPath(“/resources/files/test.md”);<br>生成绝对路径如：/environment/git-repo/mobile-server/src/main/webapp/resources/files/test.md</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"十三、编写服务端Action、Service、Dao，完整的代码已上传至github-mobile-server\"><a href=\"#十三、编写服务端Action、Service、Dao，完整的代码已上传至github-mobile-server\" class=\"headerlink\" title=\"十三、编写服务端Action、Service、Dao，完整的代码已上传至github mobile-server\"></a>十三、编写服务端Action、Service、Dao，完整的代码已上传至github <a href=\"https://github.com/Farubaba/mobile-server.git\" target=\"_blank\" rel=\"noopener\">mobile-server</a></h3><h3 id=\"十四、错误修正\"><a href=\"#十四、错误修正\" class=\"headerlink\" title=\"十四、错误修正\"></a>十四、错误修正</h3><ol>\n<li><p>可能出现/struts-tags 找不到的错误。</p>\n<pre><code>myeclipse Can not find the tag library descriptor for &quot;/struts- tags&quot;\n\n右键project--&gt;build path--&gt;Configure build path--&gt;order and export\n勾选Maven dependencies ， 点击应用。\n</code></pre></li>\n<li><p>web.xml web-app dtd版本错误</p>\n<pre><code>One or more constraints have not been satisfied. Apache Struts (2.x) 2.1 req\n</code></pre></li>\n</ol>\n<p>web.xml中替换如下内容：</p>\n<pre><code>&lt;!-- &lt;!DOCTYPE web-app PUBLIC\n &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;\n &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt; --&gt;\n</code></pre><p>替换为：</p>\n<pre><code>&lt;web-app \n    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n    xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;\n    xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;\n    version=&quot;3.0&quot; id=&quot;WebApp_1536392245753&quot;&gt;\n</code></pre><ol start=\"3\">\n<li>child module does not exist</li>\n</ol>\n<div align=\"center\"><br>    <img src=\"/images/14、maven-child-module-not-exist.png\" width=\"90%\"><br></div>\n\n<ol start=\"4\">\n<li>去掉webapp项目创建时自带的后缀: Maven Webapp , 例如 api-feature Maven Webapp 修改成 api-feature <div align=\"center\"><br> <img src=\"/images/15、remove-maven-webapp-default-sufix-MavenWebapp\" width=\"90%\"><br></div>\n\n\n\n</li>\n</ol>\n"},{"title":"使用gradle-bintray-plugin插件，上传Android AAR文件到bintray JCenter","date":"2018-09-29T08:45:01.000Z","summery":"使用gradle-bintray-plugin插件，上传Android AAR文件到bintray JCenter。上传可以有多种方式，其一是publishing，其二是install，要使用它们都需要引入相关的插件依赖。","_content":"### 一、相关参考\n\n[android-gradle-configuration]\n\n[gradle-bintray-plugin examples]\n\n[gradle-bintray-plugin 文档]\n\n[上传android arr到jcenter网友博文参考]\n\n[maven-left-cycle]\n\n[https://docs.gradle.org]\n\n\n<https://github.com/bintray/gradle-bintray-plugin#readme>\n\n[一步一步教你将开源项目上传到jcenter]\n\n[一步一步教你将开源项目上传到jcenter]:https://www.cnblogs.com/AbrahamCaiJin/p/7058147.html\n\n### 二、概述\n \n1.注册jcenter账号 <https://bintray.com/signup/oss>\n\n\t注册gmail邮箱（因为163，qq邮箱等都不能在jcenter中注册成功）\n\t本地Maven client 配置目录 ： /usr/local/opt/maven/conf\n\t\n```\n\t用户名：farubaba\n\tAPI Key: xxxxx\n```\n\n2.创建jcenter私有仓库(repository)\n\t\njcenter中的repository和github中的repository不同，jcenter中的package等同于github中的repository\n\n```\n\t例如：\n\t仓库名：android\n\t类型选择：maven，generic等\n```\n\t\n\t\n3.进入刚建立的仓库:android\n\n\t 1. 点击settting按钮\n\t 2. 选择uploading\n\t 3. deploying withe gradle \n\t 4. 查看[gradle-bintray-plugin]插件文档：https://github.com/bintray/gradle-bintray-plugin#readme\n\t 5. 查看[gradle-bintray-plugin]插件的示例：https://github.com/bintray/bintray-examples/tree/master/gradle-bintray-plugin-examples\n\t 6. 以上文档看个大概，仍然不能很清楚的搭建号项目，需要进一步查看bintray在github中的资源：https://github.com/bintray\n\t 7. 更多更完整的aar相关示例： https://github.com/bintray/bintray-examples\n\t 8. 打开：https://github.com/bintray/bintray-examples/tree/master/gradle-aar-example，查看build.gradle文件\n\t 10.在bintray中搜索最新版本的android-maven-gradle-plugin：https://bintray.com/dcendents/gradle-plugins/com.github.dcendents%3Aandroid-maven-gradle-plugin\n\t 11.点击package描述中的WebSite： https://github.com/dcendents/android-maven-gradle-plugin\n\n### 三、上传命令\n\n1. 在项目根目录下执行如下命令，会将项目中的所有module都upload到jcenter，如果已经存在，则会上传失败。\n\n```\n\t./greadlew clean build bintrayUpload --stacktrace --info --debug\n```\n2. 如果需要单独上传某一个module到jcenter，则应使用如下命令，假设某个module的名称为：basefeature\n\n```\n\t./greadlew :basefeature:clean :basefeature:build :basefeature:bintrayUpload --stacktrace --info --debug\n```\n\t\n### 四、使用publishing方式上传\n\n1. 项目根目录build.gradle文件dependencies下添加如下依赖：\n\t\n\t```\n\tclasspath 'com.github.dcendents:android-maven-gradle-plugin:2.0'\n\tclasspath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'\n\t```\n2. module目录下增加gradle.properties文件，并添加如下key，value根据自己的项目来修改\n\t\n\t```\n\tbintrayUser=farubaba\n\tbintrayApiKey=7b2db169d93937cdbe36482d9793d75069e4b7b7\n\tbintrayRepo=android\n\tbintrayPackage=newaarmodule\n\tpkgGroupId=com.farubaba.android\n\tpkgArtifactId=newaarmodule\n\tpkgVersion=3.0.3\n\tsiteUrl=https://github.com/Farubaba/Mobile\n\tvcsUrl=https://github.com/Farubaba/Mobile.git\n\tissueUrl=https://github.com/Farubaba/Mobile/issues\n\t```\n3. module目录下增加publish.gradle文件\n\t\n\t```\n\t//参考 ： https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle\n\t\n\t/**\n\t * 【使用Gradle上传aar到jcenter】\n\t *\n\t *  主要文件：\n\t *  1）project根目录build.gradle\n\t *  2) module目录下build.gradle\n\t *  3) module目录下publish.gradle\n\t *  4) module目录下gradle.properties\n\t *\n\t * 使用本文件时，在module的build.gradle文件末尾添加一行：\n\t *\n\t *      apply from: 'publish.gradle'\n\t *\n\t * 1、[gradle-bintray-plugin插件文档]:\n\t *\n\t *      https://github.com/bintray/gradle-bintray-plugin#readme\n\t *\n\t * 2、[android-maven-gradle-plugin，在gradle中使用maven来publish上传文件到jcenter私有仓库] :\n\t *\n\t *      https://github.com/dcendents/android-maven-gradle-plugin\n\t *\n\t * 3、[编写gradle.properties文件,定义属性]:\n\t *\n\t *      bintrayUser=farubaba\n\t *      bintrayApiKey=7b2db169d93937cdbe362035739593d75069e4b9f\n\t *      bintrayRepo=android\n\t *      bintrayPackage=newaarmodule\n\t *\n\t * 4、[编写独立的publish.gradle文档]:\n\t *\n\t *      https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle\n\t *\n\t * 5、[引入源码jar包]：\n\t *\n\t * 6、[执行命令，上传到jcenter私有仓库]:\n\t *\n\t *      执行所有module：./gradlew clean build bintrayUpload --stacktrace --info\n\t *      执行指定module：./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info\n\t *\n\t *\n\t *\n\t ***********************************************************/\n\t\n\t//放入项目根目录下的build.gradle文件中，如果不设置，则需要在module的build.gradle文件中设置plugins{}来替代\n\t//classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'\n\t//classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'\n\t\n\t//plugins {\n\t//    id \"com.github.dcendents.android-maven\" version \"2.1\"\n\t//}\n\t\n\t//apply plugin: 'com.github.dcendents.android-maven' //该插件提供了install方法来上传\n\tapply plugin: 'maven-publish' //该插件中提供了publishing方法来上传\n\tapply plugin: 'com.jfrog.bintray'\n\t\n\t/**为plugin中预定义的变量赋值**/\n\tgroup this.pkgGroupId\n\tversion this.pkgVersion\n\t\n\t/*******************************************publishing 方式上传start*********************************************/\n\t/***打包javadoc 和sourcesJar**/\n\ttask sourcesJar(type: Jar) {\n\t    from android.sourceSets.main.java.srcDirs\n\t    classifier = 'sources'\n\t}\n\ttask javadoc(type: Javadoc) {\n\t    options {\n\t        encoding \"UTF-8\"\n\t        charSet 'UTF-8'\n\t        author true\n\t        version true\n\t        links \"http://docs.oracle.com/javase/7/docs/api\"\n\t    }\n\t    source = android.sourceSets.main.java.srcDirs\n\t    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n\t}\n\ttask javadocJar(type: Jar, dependsOn: javadoc) {\n\t    classifier = 'javadoc'\n\t    from javadoc.destinationDir\n\t}\n\t\n\t/***会上传所有的jar，aar等archives****/\n\tartifacts {\n\t    archives javadocJar\n\t    archives sourcesJar\n\t}\n\t\n\t/**\n\t * 要使用publishing，则需要引入如下插件，该插件中提供了publishing方法来上传\n\t * apply plugin: 'maven-publish'\n\t * 同时，记得反注释bintray中publications行\n\t * bintray{\n\t *   //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。\n\t *   publications = ['Production']\n\t * }\n\t *\n\t */\n\t\n\tpublishing {\n\t    publications {\n\t        Production(MavenPublication) {\n\t//            artifact(\"$buildDir/outputs/aar/${this.pkgArtifactId}-release.aar\")\n\t//            artifacts {\n\t//                archives javadocJar\n\t//                archives sourcesJar\n\t//            }\n\t            groupId this.group\n\t            artifactId this.pkgArtifactId\n\t            version this.version\n\t\n\t            pom.withXml {\n\t                def dependenciesNode = asNode().appendNode('dependencies')\n\t\n\t                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each\n\t                configurations.implementation.allDependencies.each {\n\t                    // Ensure dependencies such as fileTree are not included in the pom.\n\t                    if (it.name != 'unspecified') {\n\t                        def dependencyNode = dependenciesNode.appendNode('dependency')\n\t                        dependencyNode.appendNode('groupId', it.group)\n\t                        dependencyNode.appendNode('artifactId', it.name)\n\t                        dependencyNode.appendNode('version', it.version)\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\t/*******************************************publishing 方式上传end*********************************************/\n\t\n\tbintray {\n\t//    user = project.hasProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')\n\t//    key = project.hasProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')\n\t    user = this.bintrayUser ?: System.getenv('BINTRAY_USER')\n\t    key = this.bintrayApiKey ?: System.getenv('BINTRAY_API_KEY')\n\t    publications = ['Production'] //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。\n\t    configurations = ['archives']\n\t    override = true\n\t    pkg {\n\t        repo = this.bintrayRepo //bintray 仓库名称\n\t        name = this.bintrayPackage // bintray 仓库中 packge name\n\t        description = \"An example of using the bintray plugin with gradle plugin 3.0.0\"\n\t        publish = true\n\t        dryRun = false //设置成true，则不能上传，why？\n\t        publicDownloadNumbers = true\n\t        licenses = ['Apache-2.0']\n\t        vcsUrl = this.vcsUrl\n\t        issueTrackerUrl = this.issueUrl\n\t        websiteUrl = this.siteUrl\n\t        version {\n\t            name = this.version\n\t            desc = \"${this.pkgArtifactId} ${this.version}\"\n\t            released = new Date()\n\t            vcsTag = this.version\n\t        }\n\t\n\t    }\n\t}\n\t/***************************************************************************/\n\t/** Plugin DSL : https://github.com/bintray/gradle-bintray-plugin#readme  **/\n\t/***************************************************************************/\n\t/**\n\t * bintray {\n\t *     user = 'bintray_user'\n\t *     key = 'bintray_api_key'\n\t *\n\t *     configurations = ['deployables'] //When uploading configuration files\n\t *     // - OR -\n\t *     publications = ['mavenStuff'] //When uploading Maven-based publication files\n\t *     // - AND/OR -\n\t *     filesSpec { //When uploading any arbitrary files ('filesSpec' is a standard Gradle CopySpec)\n\t *         from 'arbitrary-files'\n\t *         into 'standalone_files/level1'\n\t *         rename '(.+)\\\\.(.+)', '$1-suffix.$2'\n\t *     }\n\t *     dryRun = false //[Default: false] Whether to run this as dry-run, without deploying\n\t *     publish = true //[Default: false] Whether version should be auto published after an upload\n\t *     override = false //[Default: false] Whether to override version artifacts already published\n\t *     //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there's no need to configure the other package properties (like userOrg, desc, etc).\n\t *     pkg {\n\t *         repo = 'myrepo'\n\t *         name = 'mypkg'\n\t *         userOrg = 'myorg' //An optional organization name when the repo belongs to one of the user's orgs\n\t *         desc = 'what a fantastic package indeed!'\n\t *         websiteUrl = 'https://github.com/bintray/gradle-bintray-plugin'\n\t *         issueTrackerUrl = 'https://github.com/bintray/gradle-bintray-plugin/issues'\n\t *         vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'\n\t *         licenses = ['Apache-2.0']\n\t *         labels = ['gear', 'gore', 'gorilla']\n\t *         publicDownloadNumbers = true\n\t *         attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes\n\t *\n\t *         githubRepo = 'bintray/gradle-bintray-plugin' //Optional Github repository\n\t *         githubReleaseNotesFile = 'README.md' //Optional Github readme file\n\t *\n\t *         //Optional Debian details\n\t *         debn {\n\t *             distribution = 'squeeze'\n\t *             component = 'main'\n\t *             architecture = 'i386,noarch,amd64'\n\t *         }\n\t *         //Optional version descriptor\n\t *         version {\n\t *             name = '1.3-Final' //Bintray logical version name\n\t *             desc = //Optional - Version-specific description'\n\t *             released  = //Optional - Date of the version release. 2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance\n\t *             vcsTag = '1.3.0'\n\t *             attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin'] //Optional version-level attributes\n\t *             //Optional configuration for GPG signing\n\t *           gpg {\n\t *                 sign = true //Determines whether to GPG sign the files. The default is false\n\t *                 passphrase = 'passphrase' //Optional. The passphrase for GPsigning'*             }\n\t *             //Optional configuration for Maven Central sync of the version\n\t *           mavenCentralSync {\n\t *                 sync = true //[Default: true] Determines whether to sync the version to Maven Central.\n\t *                 user = 'userToken' //OSS user token: mandatory\n\t *                 password = 'paasword' //OSS user password: mandatory\n\t *                 close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and releasemuay.*             }\n\t *         }\n\t *     }\n\t * }\n\t */\n\n\t```\n\n4. 执行命令,假设module为：newaarmodule\n\n\t```\n\t./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info --debug\n\t```\n\n### 五、使用install方式上传\n\n1. 项目根目录build.gradle文件dependencies下添加如下依赖：\n\t\n\t```\n\tclasspath 'com.github.dcendents:android-maven-gradle-plugin:2.0'\n\tclasspath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'\n\t```\n2. module目录下增加gradle.properties文件，并添加如下key，value根据自己的项目来修改\n\t\n\t```\n\tbintrayUser=farubaba\n\tbintrayApiKey=7b2db169d93937cdbe36482d9793d75069e4b7b7\n\tbintrayRepo=android\n\tbintrayPackage=newaarmodule\n\tpkgGroupId=com.farubaba.android\n\tpkgArtifactId=newaarmodule\n\tpkgVersion=3.0.3\n\tsiteUrl=https://github.com/Farubaba/Mobile\n\tvcsUrl=https://github.com/Farubaba/Mobile.git\n\tissueUrl=https://github.com/Farubaba/Mobile/issues\n\t```\n3. module目录下增加install.gradle文件\n\n\t```\n\t//参考 ： https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle\n\t\n\t/**\n\t * 【使用Gradle上传aar到jcenter】\n\t *\n\t *  主要文件：\n\t *  1）project根目录build.gradle\n\t *  2) module目录下build.gradle\n\t *  3) module目录下install.gradle\n\t *  4) module目录下gradle.properties\n\t *\n\t * 使用本文件时，在module的build.gradle文件末尾添加一行：\n\t *\n\t *      apply from: 'install.gradle'\n\t *\n\t * 1、[gradle-bintray-plugin插件文档]:\n\t *\n\t *      https://github.com/bintray/gradle-bintray-plugin#readme\n\t *\n\t * 2、[android-maven-gradle-plugin，在gradle中使用maven来publish上传文件到jcenter私有仓库] :\n\t *\n\t *      https://github.com/dcendents/android-maven-gradle-plugin\n\t *\n\t * 3、[编写gradle.properties文件,定义属性]:\n\t *\n\t *      bintrayUser=farubaba\n\t *      bintrayApiKey=7b2db169d93937cdbe362035739593d75069e4b9f\n\t *      bintrayRepo=android\n\t *      bintrayPackage=newaarmodule\n\t *\n\t * 4、[编写独立的publish.gradle文档]:\n\t *\n\t *      https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle\n\t *\n\t * 5、[引入源码jar包]：\n\t *\n\t * 6、[执行命令，上传到jcenter私有仓库]:\n\t *\n\t *      执行所有module：./gradlew clean build bintrayUpload --stacktrace --info\n\t *      执行指定module：./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info\n\t *\n\t *\n\t *\n\t ***********************************************************/\n\t\n\t//放入项目根目录下的build.gradle文件中，如果不设置，则需要在module的build.gradle文件中设置plugins{}来替代\n\t//classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'\n\t//classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'\n\t\n\t//plugins {\n\t//    id \"com.github.dcendents.android-maven\" version \"2.1\"\n\t//}\n\t\n\tapply plugin: 'com.github.dcendents.android-maven' //该插件提供了install方法来上传\n\t//apply plugin: 'maven-publish' //该插件中提供了publishing方法来上传\n\tapply plugin: 'com.jfrog.bintray'\n\t\n\t/**为plugin中预定义的变量赋值**/\n\tgroup this.pkgGroupId\n\tversion this.pkgVersion\n\t\n\tbintray {\n\t//    user = project.hasProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')\n\t//    key = project.hasProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')\n\t    user = this.bintrayUser ?: System.getenv('BINTRAY_USER')\n\t    key = this.bintrayApiKey ?: System.getenv('BINTRAY_API_KEY')\n\t    //publications = ['Production'] //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。\n\t    configurations = ['archives']\n\t    override = true\n\t    pkg {\n\t        repo = this.bintrayRepo //bintray 仓库名称\n\t        name = this.bintrayPackage // bintray 仓库中 packge name\n\t        description = \"An example of using the bintray plugin with gradle plugin 3.0.0\"\n\t        publish = true\n\t        dryRun = false //设置成true，则不能上传，why？\n\t        publicDownloadNumbers = true\n\t        licenses = ['Apache-2.0']\n\t        vcsUrl = this.vcsUrl\n\t        issueTrackerUrl = this.issueUrl\n\t        websiteUrl = this.siteUrl\n\t        version {\n\t            name = this.version\n\t            desc = \"${this.pkgArtifactId} ${this.version}\"\n\t            released = new Date()\n\t            vcsTag = this.version\n\t        }\n\t\n\t    }\n\t}\n\t\n\t/*******************************************Install 方式上传begin************************************************/\n\t/**\n\t * 使用install，要应用如下插件，该插件提供了install方法来上传\n\t *\n\t * apply plugin: 'com.github.dcendents.android-maven'\n\t *\n\t * 同时，记得注释掉bintray中publications行\n\t * bintray{\n\t *   //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。\n\t *   //publications = ['Production']\n\t * }\n\t *\n\t */\n\tinstall {\n\t    repositories.mavenInstaller {\n\t        pom {\n\t            project {\n\t                packaging 'aar'\n\t                name 'Bintray publish Gradle aar example'\n\t                url siteUrl\n\t                licenses {\n\t                    license {\n\t                        name 'The Apache Software License, Version 2.0'\n\t                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n\t                    }\n\t                }\n\t                developers {\n\t                    developer {\n\t                        id 'farubaba'\n\t                        name 'Baruch Sadogursky'\n\t                        email 'farubaba@qq.com'\n\t                    }\n\t                }\n\t                scm {\n\t                    connection 'https://github.com/Farubaba/Mobile.git'\n\t                    developerConnection 'https://github.com/Farubaba/Mobile.git'\n\t                    url this.siteUrl\n\t\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\t/***打包javadoc 和sourcesJar**/\n\ttask sourcesJar(type: Jar) {\n\t    from android.sourceSets.main.java.srcDirs\n\t    classifier = 'sources'\n\t}\n\ttask javadoc(type: Javadoc) {\n\t    options {\n\t        encoding \"UTF-8\"\n\t        charSet 'UTF-8'\n\t        author true\n\t        version true\n\t        links \"http://docs.oracle.com/javase/7/docs/api\"\n\t    }\n\t    source = android.sourceSets.main.java.srcDirs\n\t    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n\t}\n\ttask javadocJar(type: Jar, dependsOn: javadoc) {\n\t    classifier = 'javadoc'\n\t    from javadoc.destinationDir\n\t}\n\t\n\t/***会上传所有的jar，aar等archives****/\n\tartifacts {\n\t    archives javadocJar\n\t    archives sourcesJar\n\t}\n\t\n\ttask findConventions << {\n\t    println project.getConvention()\n\t}\n\t\n\t/*******************************************Install 方式上传end************************************************/\n\t\n\t/***************************************************************************/\n\t/** Plugin DSL : https://github.com/bintray/gradle-bintray-plugin#readme  **/\n\t/***************************************************************************/\n\t/**\n\t * bintray {\n\t *     user = 'bintray_user'\n\t *     key = 'bintray_api_key'\n\t *\n\t *     configurations = ['deployables'] //When uploading configuration files\n\t *     // - OR -\n\t *     publications = ['mavenStuff'] //When uploading Maven-based publication files\n\t *     // - AND/OR -\n\t *     filesSpec { //When uploading any arbitrary files ('filesSpec' is a standard Gradle CopySpec)\n\t *         from 'arbitrary-files'\n\t *         into 'standalone_files/level1'\n\t *         rename '(.+)\\\\.(.+)', '$1-suffix.$2'\n\t *     }\n\t *     dryRun = false //[Default: false] Whether to run this as dry-run, without deploying\n\t *     publish = true //[Default: false] Whether version should be auto published after an upload\n\t *     override = false //[Default: false] Whether to override version artifacts already published\n\t *     //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there's no need to configure the other package properties (like userOrg, desc, etc).\n\t *     pkg {\n\t *         repo = 'myrepo'\n\t *         name = 'mypkg'\n\t *         userOrg = 'myorg' //An optional organization name when the repo belongs to one of the user's orgs\n\t *         desc = 'what a fantastic package indeed!'\n\t *         websiteUrl = 'https://github.com/bintray/gradle-bintray-plugin'\n\t *         issueTrackerUrl = 'https://github.com/bintray/gradle-bintray-plugin/issues'\n\t *         vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'\n\t *         licenses = ['Apache-2.0']\n\t *         labels = ['gear', 'gore', 'gorilla']\n\t *         publicDownloadNumbers = true\n\t *         attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes\n\t *\n\t *         githubRepo = 'bintray/gradle-bintray-plugin' //Optional Github repository\n\t *         githubReleaseNotesFile = 'README.md' //Optional Github readme file\n\t *\n\t *         //Optional Debian details\n\t *         debn {\n\t *             distribution = 'squeeze'\n\t *             component = 'main'\n\t *             architecture = 'i386,noarch,amd64'\n\t *         }\n\t *         //Optional version descriptor\n\t *         version {\n\t *             name = '1.3-Final' //Bintray logical version name\n\t *             desc = //Optional - Version-specific description'\n\t *             released  = //Optional - Date of the version release. 2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance\n\t *             vcsTag = '1.3.0'\n\t *             attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin'] //Optional version-level attributes\n\t *             //Optional configuration for GPG signing\n\t *           gpg {\n\t *                 sign = true //Determines whether to GPG sign the files. The default is false\n\t *                 passphrase = 'passphrase' //Optional. The passphrase for GPsigning'*             }\n\t *             //Optional configuration for Maven Central sync of the version\n\t *           mavenCentralSync {\n\t *                 sync = true //[Default: true] Determines whether to sync the version to Maven Central.\n\t *                 user = 'userToken' //OSS user token: mandatory\n\t *                 password = 'paasword' //OSS user password: mandatory\n\t *                 close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and releasemuay.*             }\n\t *         }\n\t *     }\n\t * }\n\t */\n\n\t```\n4. 执行命令,假设module为：newaarmodule\n\n\t```\n\t./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info --debug\n\t```\n\t\n[OAuth 2.0 阮一峰]:http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html\n[maven-left-cycle]:http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html\n[上传android arr到jcenter网友博文参考]:https://www.cnblogs.com/AbrahamCaiJin/p/7058147.html\n[android-gradle-configuration]:https://developer.android.com/studio/build/build-variants\n[gradle-bintray-plugin examples]:https://github.com/bintray/bintray-examples/tree/master/gradle-bintray-plugin-examples\n[gradle-bintray-plugin 文档]:https://github.com/bintray/gradle-bintray-plugin/blob/master/README.md\n\n\n\n\n\n[https://docs.gradle.org]:https://docs.gradle.org\n\n\n\n\n\n","source":"_posts/上传Android AAR文件到bintray JCenter.md","raw":"---\ntitle: 使用gradle-bintray-plugin插件，上传Android AAR文件到bintray JCenter\ndate: 2018-09-29 16:45:01\ntags:\nsummery: 使用gradle-bintray-plugin插件，上传Android AAR文件到bintray JCenter。上传可以有多种方式，其一是publishing，其二是install，要使用它们都需要引入相关的插件依赖。\n---\n### 一、相关参考\n\n[android-gradle-configuration]\n\n[gradle-bintray-plugin examples]\n\n[gradle-bintray-plugin 文档]\n\n[上传android arr到jcenter网友博文参考]\n\n[maven-left-cycle]\n\n[https://docs.gradle.org]\n\n\n<https://github.com/bintray/gradle-bintray-plugin#readme>\n\n[一步一步教你将开源项目上传到jcenter]\n\n[一步一步教你将开源项目上传到jcenter]:https://www.cnblogs.com/AbrahamCaiJin/p/7058147.html\n\n### 二、概述\n \n1.注册jcenter账号 <https://bintray.com/signup/oss>\n\n\t注册gmail邮箱（因为163，qq邮箱等都不能在jcenter中注册成功）\n\t本地Maven client 配置目录 ： /usr/local/opt/maven/conf\n\t\n```\n\t用户名：farubaba\n\tAPI Key: xxxxx\n```\n\n2.创建jcenter私有仓库(repository)\n\t\njcenter中的repository和github中的repository不同，jcenter中的package等同于github中的repository\n\n```\n\t例如：\n\t仓库名：android\n\t类型选择：maven，generic等\n```\n\t\n\t\n3.进入刚建立的仓库:android\n\n\t 1. 点击settting按钮\n\t 2. 选择uploading\n\t 3. deploying withe gradle \n\t 4. 查看[gradle-bintray-plugin]插件文档：https://github.com/bintray/gradle-bintray-plugin#readme\n\t 5. 查看[gradle-bintray-plugin]插件的示例：https://github.com/bintray/bintray-examples/tree/master/gradle-bintray-plugin-examples\n\t 6. 以上文档看个大概，仍然不能很清楚的搭建号项目，需要进一步查看bintray在github中的资源：https://github.com/bintray\n\t 7. 更多更完整的aar相关示例： https://github.com/bintray/bintray-examples\n\t 8. 打开：https://github.com/bintray/bintray-examples/tree/master/gradle-aar-example，查看build.gradle文件\n\t 10.在bintray中搜索最新版本的android-maven-gradle-plugin：https://bintray.com/dcendents/gradle-plugins/com.github.dcendents%3Aandroid-maven-gradle-plugin\n\t 11.点击package描述中的WebSite： https://github.com/dcendents/android-maven-gradle-plugin\n\n### 三、上传命令\n\n1. 在项目根目录下执行如下命令，会将项目中的所有module都upload到jcenter，如果已经存在，则会上传失败。\n\n```\n\t./greadlew clean build bintrayUpload --stacktrace --info --debug\n```\n2. 如果需要单独上传某一个module到jcenter，则应使用如下命令，假设某个module的名称为：basefeature\n\n```\n\t./greadlew :basefeature:clean :basefeature:build :basefeature:bintrayUpload --stacktrace --info --debug\n```\n\t\n### 四、使用publishing方式上传\n\n1. 项目根目录build.gradle文件dependencies下添加如下依赖：\n\t\n\t```\n\tclasspath 'com.github.dcendents:android-maven-gradle-plugin:2.0'\n\tclasspath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'\n\t```\n2. module目录下增加gradle.properties文件，并添加如下key，value根据自己的项目来修改\n\t\n\t```\n\tbintrayUser=farubaba\n\tbintrayApiKey=7b2db169d93937cdbe36482d9793d75069e4b7b7\n\tbintrayRepo=android\n\tbintrayPackage=newaarmodule\n\tpkgGroupId=com.farubaba.android\n\tpkgArtifactId=newaarmodule\n\tpkgVersion=3.0.3\n\tsiteUrl=https://github.com/Farubaba/Mobile\n\tvcsUrl=https://github.com/Farubaba/Mobile.git\n\tissueUrl=https://github.com/Farubaba/Mobile/issues\n\t```\n3. module目录下增加publish.gradle文件\n\t\n\t```\n\t//参考 ： https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle\n\t\n\t/**\n\t * 【使用Gradle上传aar到jcenter】\n\t *\n\t *  主要文件：\n\t *  1）project根目录build.gradle\n\t *  2) module目录下build.gradle\n\t *  3) module目录下publish.gradle\n\t *  4) module目录下gradle.properties\n\t *\n\t * 使用本文件时，在module的build.gradle文件末尾添加一行：\n\t *\n\t *      apply from: 'publish.gradle'\n\t *\n\t * 1、[gradle-bintray-plugin插件文档]:\n\t *\n\t *      https://github.com/bintray/gradle-bintray-plugin#readme\n\t *\n\t * 2、[android-maven-gradle-plugin，在gradle中使用maven来publish上传文件到jcenter私有仓库] :\n\t *\n\t *      https://github.com/dcendents/android-maven-gradle-plugin\n\t *\n\t * 3、[编写gradle.properties文件,定义属性]:\n\t *\n\t *      bintrayUser=farubaba\n\t *      bintrayApiKey=7b2db169d93937cdbe362035739593d75069e4b9f\n\t *      bintrayRepo=android\n\t *      bintrayPackage=newaarmodule\n\t *\n\t * 4、[编写独立的publish.gradle文档]:\n\t *\n\t *      https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle\n\t *\n\t * 5、[引入源码jar包]：\n\t *\n\t * 6、[执行命令，上传到jcenter私有仓库]:\n\t *\n\t *      执行所有module：./gradlew clean build bintrayUpload --stacktrace --info\n\t *      执行指定module：./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info\n\t *\n\t *\n\t *\n\t ***********************************************************/\n\t\n\t//放入项目根目录下的build.gradle文件中，如果不设置，则需要在module的build.gradle文件中设置plugins{}来替代\n\t//classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'\n\t//classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'\n\t\n\t//plugins {\n\t//    id \"com.github.dcendents.android-maven\" version \"2.1\"\n\t//}\n\t\n\t//apply plugin: 'com.github.dcendents.android-maven' //该插件提供了install方法来上传\n\tapply plugin: 'maven-publish' //该插件中提供了publishing方法来上传\n\tapply plugin: 'com.jfrog.bintray'\n\t\n\t/**为plugin中预定义的变量赋值**/\n\tgroup this.pkgGroupId\n\tversion this.pkgVersion\n\t\n\t/*******************************************publishing 方式上传start*********************************************/\n\t/***打包javadoc 和sourcesJar**/\n\ttask sourcesJar(type: Jar) {\n\t    from android.sourceSets.main.java.srcDirs\n\t    classifier = 'sources'\n\t}\n\ttask javadoc(type: Javadoc) {\n\t    options {\n\t        encoding \"UTF-8\"\n\t        charSet 'UTF-8'\n\t        author true\n\t        version true\n\t        links \"http://docs.oracle.com/javase/7/docs/api\"\n\t    }\n\t    source = android.sourceSets.main.java.srcDirs\n\t    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n\t}\n\ttask javadocJar(type: Jar, dependsOn: javadoc) {\n\t    classifier = 'javadoc'\n\t    from javadoc.destinationDir\n\t}\n\t\n\t/***会上传所有的jar，aar等archives****/\n\tartifacts {\n\t    archives javadocJar\n\t    archives sourcesJar\n\t}\n\t\n\t/**\n\t * 要使用publishing，则需要引入如下插件，该插件中提供了publishing方法来上传\n\t * apply plugin: 'maven-publish'\n\t * 同时，记得反注释bintray中publications行\n\t * bintray{\n\t *   //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。\n\t *   publications = ['Production']\n\t * }\n\t *\n\t */\n\t\n\tpublishing {\n\t    publications {\n\t        Production(MavenPublication) {\n\t//            artifact(\"$buildDir/outputs/aar/${this.pkgArtifactId}-release.aar\")\n\t//            artifacts {\n\t//                archives javadocJar\n\t//                archives sourcesJar\n\t//            }\n\t            groupId this.group\n\t            artifactId this.pkgArtifactId\n\t            version this.version\n\t\n\t            pom.withXml {\n\t                def dependenciesNode = asNode().appendNode('dependencies')\n\t\n\t                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each\n\t                configurations.implementation.allDependencies.each {\n\t                    // Ensure dependencies such as fileTree are not included in the pom.\n\t                    if (it.name != 'unspecified') {\n\t                        def dependencyNode = dependenciesNode.appendNode('dependency')\n\t                        dependencyNode.appendNode('groupId', it.group)\n\t                        dependencyNode.appendNode('artifactId', it.name)\n\t                        dependencyNode.appendNode('version', it.version)\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\t/*******************************************publishing 方式上传end*********************************************/\n\t\n\tbintray {\n\t//    user = project.hasProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')\n\t//    key = project.hasProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')\n\t    user = this.bintrayUser ?: System.getenv('BINTRAY_USER')\n\t    key = this.bintrayApiKey ?: System.getenv('BINTRAY_API_KEY')\n\t    publications = ['Production'] //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。\n\t    configurations = ['archives']\n\t    override = true\n\t    pkg {\n\t        repo = this.bintrayRepo //bintray 仓库名称\n\t        name = this.bintrayPackage // bintray 仓库中 packge name\n\t        description = \"An example of using the bintray plugin with gradle plugin 3.0.0\"\n\t        publish = true\n\t        dryRun = false //设置成true，则不能上传，why？\n\t        publicDownloadNumbers = true\n\t        licenses = ['Apache-2.0']\n\t        vcsUrl = this.vcsUrl\n\t        issueTrackerUrl = this.issueUrl\n\t        websiteUrl = this.siteUrl\n\t        version {\n\t            name = this.version\n\t            desc = \"${this.pkgArtifactId} ${this.version}\"\n\t            released = new Date()\n\t            vcsTag = this.version\n\t        }\n\t\n\t    }\n\t}\n\t/***************************************************************************/\n\t/** Plugin DSL : https://github.com/bintray/gradle-bintray-plugin#readme  **/\n\t/***************************************************************************/\n\t/**\n\t * bintray {\n\t *     user = 'bintray_user'\n\t *     key = 'bintray_api_key'\n\t *\n\t *     configurations = ['deployables'] //When uploading configuration files\n\t *     // - OR -\n\t *     publications = ['mavenStuff'] //When uploading Maven-based publication files\n\t *     // - AND/OR -\n\t *     filesSpec { //When uploading any arbitrary files ('filesSpec' is a standard Gradle CopySpec)\n\t *         from 'arbitrary-files'\n\t *         into 'standalone_files/level1'\n\t *         rename '(.+)\\\\.(.+)', '$1-suffix.$2'\n\t *     }\n\t *     dryRun = false //[Default: false] Whether to run this as dry-run, without deploying\n\t *     publish = true //[Default: false] Whether version should be auto published after an upload\n\t *     override = false //[Default: false] Whether to override version artifacts already published\n\t *     //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there's no need to configure the other package properties (like userOrg, desc, etc).\n\t *     pkg {\n\t *         repo = 'myrepo'\n\t *         name = 'mypkg'\n\t *         userOrg = 'myorg' //An optional organization name when the repo belongs to one of the user's orgs\n\t *         desc = 'what a fantastic package indeed!'\n\t *         websiteUrl = 'https://github.com/bintray/gradle-bintray-plugin'\n\t *         issueTrackerUrl = 'https://github.com/bintray/gradle-bintray-plugin/issues'\n\t *         vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'\n\t *         licenses = ['Apache-2.0']\n\t *         labels = ['gear', 'gore', 'gorilla']\n\t *         publicDownloadNumbers = true\n\t *         attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes\n\t *\n\t *         githubRepo = 'bintray/gradle-bintray-plugin' //Optional Github repository\n\t *         githubReleaseNotesFile = 'README.md' //Optional Github readme file\n\t *\n\t *         //Optional Debian details\n\t *         debn {\n\t *             distribution = 'squeeze'\n\t *             component = 'main'\n\t *             architecture = 'i386,noarch,amd64'\n\t *         }\n\t *         //Optional version descriptor\n\t *         version {\n\t *             name = '1.3-Final' //Bintray logical version name\n\t *             desc = //Optional - Version-specific description'\n\t *             released  = //Optional - Date of the version release. 2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance\n\t *             vcsTag = '1.3.0'\n\t *             attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin'] //Optional version-level attributes\n\t *             //Optional configuration for GPG signing\n\t *           gpg {\n\t *                 sign = true //Determines whether to GPG sign the files. The default is false\n\t *                 passphrase = 'passphrase' //Optional. The passphrase for GPsigning'*             }\n\t *             //Optional configuration for Maven Central sync of the version\n\t *           mavenCentralSync {\n\t *                 sync = true //[Default: true] Determines whether to sync the version to Maven Central.\n\t *                 user = 'userToken' //OSS user token: mandatory\n\t *                 password = 'paasword' //OSS user password: mandatory\n\t *                 close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and releasemuay.*             }\n\t *         }\n\t *     }\n\t * }\n\t */\n\n\t```\n\n4. 执行命令,假设module为：newaarmodule\n\n\t```\n\t./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info --debug\n\t```\n\n### 五、使用install方式上传\n\n1. 项目根目录build.gradle文件dependencies下添加如下依赖：\n\t\n\t```\n\tclasspath 'com.github.dcendents:android-maven-gradle-plugin:2.0'\n\tclasspath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'\n\t```\n2. module目录下增加gradle.properties文件，并添加如下key，value根据自己的项目来修改\n\t\n\t```\n\tbintrayUser=farubaba\n\tbintrayApiKey=7b2db169d93937cdbe36482d9793d75069e4b7b7\n\tbintrayRepo=android\n\tbintrayPackage=newaarmodule\n\tpkgGroupId=com.farubaba.android\n\tpkgArtifactId=newaarmodule\n\tpkgVersion=3.0.3\n\tsiteUrl=https://github.com/Farubaba/Mobile\n\tvcsUrl=https://github.com/Farubaba/Mobile.git\n\tissueUrl=https://github.com/Farubaba/Mobile/issues\n\t```\n3. module目录下增加install.gradle文件\n\n\t```\n\t//参考 ： https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle\n\t\n\t/**\n\t * 【使用Gradle上传aar到jcenter】\n\t *\n\t *  主要文件：\n\t *  1）project根目录build.gradle\n\t *  2) module目录下build.gradle\n\t *  3) module目录下install.gradle\n\t *  4) module目录下gradle.properties\n\t *\n\t * 使用本文件时，在module的build.gradle文件末尾添加一行：\n\t *\n\t *      apply from: 'install.gradle'\n\t *\n\t * 1、[gradle-bintray-plugin插件文档]:\n\t *\n\t *      https://github.com/bintray/gradle-bintray-plugin#readme\n\t *\n\t * 2、[android-maven-gradle-plugin，在gradle中使用maven来publish上传文件到jcenter私有仓库] :\n\t *\n\t *      https://github.com/dcendents/android-maven-gradle-plugin\n\t *\n\t * 3、[编写gradle.properties文件,定义属性]:\n\t *\n\t *      bintrayUser=farubaba\n\t *      bintrayApiKey=7b2db169d93937cdbe362035739593d75069e4b9f\n\t *      bintrayRepo=android\n\t *      bintrayPackage=newaarmodule\n\t *\n\t * 4、[编写独立的publish.gradle文档]:\n\t *\n\t *      https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle\n\t *\n\t * 5、[引入源码jar包]：\n\t *\n\t * 6、[执行命令，上传到jcenter私有仓库]:\n\t *\n\t *      执行所有module：./gradlew clean build bintrayUpload --stacktrace --info\n\t *      执行指定module：./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info\n\t *\n\t *\n\t *\n\t ***********************************************************/\n\t\n\t//放入项目根目录下的build.gradle文件中，如果不设置，则需要在module的build.gradle文件中设置plugins{}来替代\n\t//classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'\n\t//classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'\n\t\n\t//plugins {\n\t//    id \"com.github.dcendents.android-maven\" version \"2.1\"\n\t//}\n\t\n\tapply plugin: 'com.github.dcendents.android-maven' //该插件提供了install方法来上传\n\t//apply plugin: 'maven-publish' //该插件中提供了publishing方法来上传\n\tapply plugin: 'com.jfrog.bintray'\n\t\n\t/**为plugin中预定义的变量赋值**/\n\tgroup this.pkgGroupId\n\tversion this.pkgVersion\n\t\n\tbintray {\n\t//    user = project.hasProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')\n\t//    key = project.hasProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')\n\t    user = this.bintrayUser ?: System.getenv('BINTRAY_USER')\n\t    key = this.bintrayApiKey ?: System.getenv('BINTRAY_API_KEY')\n\t    //publications = ['Production'] //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。\n\t    configurations = ['archives']\n\t    override = true\n\t    pkg {\n\t        repo = this.bintrayRepo //bintray 仓库名称\n\t        name = this.bintrayPackage // bintray 仓库中 packge name\n\t        description = \"An example of using the bintray plugin with gradle plugin 3.0.0\"\n\t        publish = true\n\t        dryRun = false //设置成true，则不能上传，why？\n\t        publicDownloadNumbers = true\n\t        licenses = ['Apache-2.0']\n\t        vcsUrl = this.vcsUrl\n\t        issueTrackerUrl = this.issueUrl\n\t        websiteUrl = this.siteUrl\n\t        version {\n\t            name = this.version\n\t            desc = \"${this.pkgArtifactId} ${this.version}\"\n\t            released = new Date()\n\t            vcsTag = this.version\n\t        }\n\t\n\t    }\n\t}\n\t\n\t/*******************************************Install 方式上传begin************************************************/\n\t/**\n\t * 使用install，要应用如下插件，该插件提供了install方法来上传\n\t *\n\t * apply plugin: 'com.github.dcendents.android-maven'\n\t *\n\t * 同时，记得注释掉bintray中publications行\n\t * bintray{\n\t *   //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。\n\t *   //publications = ['Production']\n\t * }\n\t *\n\t */\n\tinstall {\n\t    repositories.mavenInstaller {\n\t        pom {\n\t            project {\n\t                packaging 'aar'\n\t                name 'Bintray publish Gradle aar example'\n\t                url siteUrl\n\t                licenses {\n\t                    license {\n\t                        name 'The Apache Software License, Version 2.0'\n\t                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n\t                    }\n\t                }\n\t                developers {\n\t                    developer {\n\t                        id 'farubaba'\n\t                        name 'Baruch Sadogursky'\n\t                        email 'farubaba@qq.com'\n\t                    }\n\t                }\n\t                scm {\n\t                    connection 'https://github.com/Farubaba/Mobile.git'\n\t                    developerConnection 'https://github.com/Farubaba/Mobile.git'\n\t                    url this.siteUrl\n\t\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\t/***打包javadoc 和sourcesJar**/\n\ttask sourcesJar(type: Jar) {\n\t    from android.sourceSets.main.java.srcDirs\n\t    classifier = 'sources'\n\t}\n\ttask javadoc(type: Javadoc) {\n\t    options {\n\t        encoding \"UTF-8\"\n\t        charSet 'UTF-8'\n\t        author true\n\t        version true\n\t        links \"http://docs.oracle.com/javase/7/docs/api\"\n\t    }\n\t    source = android.sourceSets.main.java.srcDirs\n\t    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n\t}\n\ttask javadocJar(type: Jar, dependsOn: javadoc) {\n\t    classifier = 'javadoc'\n\t    from javadoc.destinationDir\n\t}\n\t\n\t/***会上传所有的jar，aar等archives****/\n\tartifacts {\n\t    archives javadocJar\n\t    archives sourcesJar\n\t}\n\t\n\ttask findConventions << {\n\t    println project.getConvention()\n\t}\n\t\n\t/*******************************************Install 方式上传end************************************************/\n\t\n\t/***************************************************************************/\n\t/** Plugin DSL : https://github.com/bintray/gradle-bintray-plugin#readme  **/\n\t/***************************************************************************/\n\t/**\n\t * bintray {\n\t *     user = 'bintray_user'\n\t *     key = 'bintray_api_key'\n\t *\n\t *     configurations = ['deployables'] //When uploading configuration files\n\t *     // - OR -\n\t *     publications = ['mavenStuff'] //When uploading Maven-based publication files\n\t *     // - AND/OR -\n\t *     filesSpec { //When uploading any arbitrary files ('filesSpec' is a standard Gradle CopySpec)\n\t *         from 'arbitrary-files'\n\t *         into 'standalone_files/level1'\n\t *         rename '(.+)\\\\.(.+)', '$1-suffix.$2'\n\t *     }\n\t *     dryRun = false //[Default: false] Whether to run this as dry-run, without deploying\n\t *     publish = true //[Default: false] Whether version should be auto published after an upload\n\t *     override = false //[Default: false] Whether to override version artifacts already published\n\t *     //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there's no need to configure the other package properties (like userOrg, desc, etc).\n\t *     pkg {\n\t *         repo = 'myrepo'\n\t *         name = 'mypkg'\n\t *         userOrg = 'myorg' //An optional organization name when the repo belongs to one of the user's orgs\n\t *         desc = 'what a fantastic package indeed!'\n\t *         websiteUrl = 'https://github.com/bintray/gradle-bintray-plugin'\n\t *         issueTrackerUrl = 'https://github.com/bintray/gradle-bintray-plugin/issues'\n\t *         vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'\n\t *         licenses = ['Apache-2.0']\n\t *         labels = ['gear', 'gore', 'gorilla']\n\t *         publicDownloadNumbers = true\n\t *         attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes\n\t *\n\t *         githubRepo = 'bintray/gradle-bintray-plugin' //Optional Github repository\n\t *         githubReleaseNotesFile = 'README.md' //Optional Github readme file\n\t *\n\t *         //Optional Debian details\n\t *         debn {\n\t *             distribution = 'squeeze'\n\t *             component = 'main'\n\t *             architecture = 'i386,noarch,amd64'\n\t *         }\n\t *         //Optional version descriptor\n\t *         version {\n\t *             name = '1.3-Final' //Bintray logical version name\n\t *             desc = //Optional - Version-specific description'\n\t *             released  = //Optional - Date of the version release. 2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance\n\t *             vcsTag = '1.3.0'\n\t *             attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin'] //Optional version-level attributes\n\t *             //Optional configuration for GPG signing\n\t *           gpg {\n\t *                 sign = true //Determines whether to GPG sign the files. The default is false\n\t *                 passphrase = 'passphrase' //Optional. The passphrase for GPsigning'*             }\n\t *             //Optional configuration for Maven Central sync of the version\n\t *           mavenCentralSync {\n\t *                 sync = true //[Default: true] Determines whether to sync the version to Maven Central.\n\t *                 user = 'userToken' //OSS user token: mandatory\n\t *                 password = 'paasword' //OSS user password: mandatory\n\t *                 close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and releasemuay.*             }\n\t *         }\n\t *     }\n\t * }\n\t */\n\n\t```\n4. 执行命令,假设module为：newaarmodule\n\n\t```\n\t./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info --debug\n\t```\n\t\n[OAuth 2.0 阮一峰]:http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html\n[maven-left-cycle]:http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html\n[上传android arr到jcenter网友博文参考]:https://www.cnblogs.com/AbrahamCaiJin/p/7058147.html\n[android-gradle-configuration]:https://developer.android.com/studio/build/build-variants\n[gradle-bintray-plugin examples]:https://github.com/bintray/bintray-examples/tree/master/gradle-bintray-plugin-examples\n[gradle-bintray-plugin 文档]:https://github.com/bintray/gradle-bintray-plugin/blob/master/README.md\n\n\n\n\n\n[https://docs.gradle.org]:https://docs.gradle.org\n\n\n\n\n\n","slug":"上传Android AAR文件到bintray JCenter","published":1,"updated":"2018-09-29T08:52:16.036Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hkl0061js6sdvo5vea5","content":"<h3 id=\"一、相关参考\"><a href=\"#一、相关参考\" class=\"headerlink\" title=\"一、相关参考\"></a>一、相关参考</h3><p><a href=\"https://developer.android.com/studio/build/build-variants\" target=\"_blank\" rel=\"noopener\">android-gradle-configuration</a></p>\n<p><a href=\"https://github.com/bintray/bintray-examples/tree/master/gradle-bintray-plugin-examples\" target=\"_blank\" rel=\"noopener\">gradle-bintray-plugin examples</a></p>\n<p><a href=\"https://github.com/bintray/gradle-bintray-plugin/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">gradle-bintray-plugin 文档</a></p>\n<p><a href=\"https://www.cnblogs.com/AbrahamCaiJin/p/7058147.html\" target=\"_blank\" rel=\"noopener\">上传android arr到jcenter网友博文参考</a></p>\n<p><a href=\"http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html\" target=\"_blank\" rel=\"noopener\">maven-left-cycle</a></p>\n<p><a href=\"https://docs.gradle.org\" target=\"_blank\" rel=\"noopener\">https://docs.gradle.org</a></p>\n<p><a href=\"https://github.com/bintray/gradle-bintray-plugin#readme\" target=\"_blank\" rel=\"noopener\">https://github.com/bintray/gradle-bintray-plugin#readme</a></p>\n<p><a href=\"https://www.cnblogs.com/AbrahamCaiJin/p/7058147.html\" target=\"_blank\" rel=\"noopener\">一步一步教你将开源项目上传到jcenter</a></p>\n<h3 id=\"二、概述\"><a href=\"#二、概述\" class=\"headerlink\" title=\"二、概述\"></a>二、概述</h3><p>1.注册jcenter账号 <a href=\"https://bintray.com/signup/oss\" target=\"_blank\" rel=\"noopener\">https://bintray.com/signup/oss</a></p>\n<pre><code>注册gmail邮箱（因为163，qq邮箱等都不能在jcenter中注册成功）\n本地Maven client 配置目录 ： /usr/local/opt/maven/conf\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用户名：farubaba</span><br><span class=\"line\">API Key: xxxxx</span><br></pre></td></tr></table></figure>\n<p>2.创建jcenter私有仓库(repository)</p>\n<p>jcenter中的repository和github中的repository不同，jcenter中的package等同于github中的repository</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">仓库名：android</span><br><span class=\"line\">类型选择：maven，generic等</span><br></pre></td></tr></table></figure>\n<p>3.进入刚建立的仓库:android</p>\n<pre><code>1. 点击settting按钮\n2. 选择uploading\n3. deploying withe gradle \n4. 查看[gradle-bintray-plugin]插件文档：https://github.com/bintray/gradle-bintray-plugin#readme\n5. 查看[gradle-bintray-plugin]插件的示例：https://github.com/bintray/bintray-examples/tree/master/gradle-bintray-plugin-examples\n6. 以上文档看个大概，仍然不能很清楚的搭建号项目，需要进一步查看bintray在github中的资源：https://github.com/bintray\n7. 更多更完整的aar相关示例： https://github.com/bintray/bintray-examples\n8. 打开：https://github.com/bintray/bintray-examples/tree/master/gradle-aar-example，查看build.gradle文件\n10.在bintray中搜索最新版本的android-maven-gradle-plugin：https://bintray.com/dcendents/gradle-plugins/com.github.dcendents%3Aandroid-maven-gradle-plugin\n11.点击package描述中的WebSite： https://github.com/dcendents/android-maven-gradle-plugin\n</code></pre><h3 id=\"三、上传命令\"><a href=\"#三、上传命令\" class=\"headerlink\" title=\"三、上传命令\"></a>三、上传命令</h3><ol>\n<li>在项目根目录下执行如下命令，会将项目中的所有module都upload到jcenter，如果已经存在，则会上传失败。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./greadlew clean build bintrayUpload --stacktrace --info --debug</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>如果需要单独上传某一个module到jcenter，则应使用如下命令，假设某个module的名称为：basefeature</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./greadlew :basefeature:clean :basefeature:build :basefeature:bintrayUpload --stacktrace --info --debug</span><br></pre></td></tr></table></figure>\n<h3 id=\"四、使用publishing方式上传\"><a href=\"#四、使用publishing方式上传\" class=\"headerlink\" title=\"四、使用publishing方式上传\"></a>四、使用publishing方式上传</h3><ol>\n<li><p>项目根目录build.gradle文件dependencies下添加如下依赖：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classpath &apos;com.github.dcendents:android-maven-gradle-plugin:2.0&apos;</span><br><span class=\"line\">classpath &apos;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>module目录下增加gradle.properties文件，并添加如下key，value根据自己的项目来修改</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bintrayUser=farubaba</span><br><span class=\"line\">bintrayApiKey=7b2db169d93937cdbe36482d9793d75069e4b7b7</span><br><span class=\"line\">bintrayRepo=android</span><br><span class=\"line\">bintrayPackage=newaarmodule</span><br><span class=\"line\">pkgGroupId=com.farubaba.android</span><br><span class=\"line\">pkgArtifactId=newaarmodule</span><br><span class=\"line\">pkgVersion=3.0.3</span><br><span class=\"line\">siteUrl=https://github.com/Farubaba/Mobile</span><br><span class=\"line\">vcsUrl=https://github.com/Farubaba/Mobile.git</span><br><span class=\"line\">issueUrl=https://github.com/Farubaba/Mobile/issues</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>module目录下增加publish.gradle文件</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//参考 ： https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 【使用Gradle上传aar到jcenter】</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *  主要文件：</span><br><span class=\"line\"> *  1）project根目录build.gradle</span><br><span class=\"line\"> *  2) module目录下build.gradle</span><br><span class=\"line\"> *  3) module目录下publish.gradle</span><br><span class=\"line\"> *  4) module目录下gradle.properties</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 使用本文件时，在module的build.gradle文件末尾添加一行：</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      apply from: &apos;publish.gradle&apos;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 1、[gradle-bintray-plugin插件文档]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/bintray/gradle-bintray-plugin#readme</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 2、[android-maven-gradle-plugin，在gradle中使用maven来publish上传文件到jcenter私有仓库] :</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/dcendents/android-maven-gradle-plugin</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 3、[编写gradle.properties文件,定义属性]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      bintrayUser=farubaba</span><br><span class=\"line\"> *      bintrayApiKey=7b2db169d93937cdbe362035739593d75069e4b9f</span><br><span class=\"line\"> *      bintrayRepo=android</span><br><span class=\"line\"> *      bintrayPackage=newaarmodule</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 4、[编写独立的publish.gradle文档]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 5、[引入源码jar包]：</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 6、[执行命令，上传到jcenter私有仓库]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      执行所有module：./gradlew clean build bintrayUpload --stacktrace --info</span><br><span class=\"line\"> *      执行指定module：./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> ***********************************************************/</span><br><span class=\"line\"></span><br><span class=\"line\">//放入项目根目录下的build.gradle文件中，如果不设置，则需要在module的build.gradle文件中设置plugins&#123;&#125;来替代</span><br><span class=\"line\">//classpath &apos;com.github.dcendents:android-maven-gradle-plugin:2.0&apos;</span><br><span class=\"line\">//classpath &apos;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">//plugins &#123;</span><br><span class=\"line\">//    id &quot;com.github.dcendents.android-maven&quot; version &quot;2.1&quot;</span><br><span class=\"line\">//&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//apply plugin: &apos;com.github.dcendents.android-maven&apos; //该插件提供了install方法来上传</span><br><span class=\"line\">apply plugin: &apos;maven-publish&apos; //该插件中提供了publishing方法来上传</span><br><span class=\"line\">apply plugin: &apos;com.jfrog.bintray&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">/**为plugin中预定义的变量赋值**/</span><br><span class=\"line\">group this.pkgGroupId</span><br><span class=\"line\">version this.pkgVersion</span><br><span class=\"line\"></span><br><span class=\"line\">/*******************************************publishing 方式上传start*********************************************/</span><br><span class=\"line\">/***打包javadoc 和sourcesJar**/</span><br><span class=\"line\">task sourcesJar(type: Jar) &#123;</span><br><span class=\"line\">    from android.sourceSets.main.java.srcDirs</span><br><span class=\"line\">    classifier = &apos;sources&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">task javadoc(type: Javadoc) &#123;</span><br><span class=\"line\">    options &#123;</span><br><span class=\"line\">        encoding &quot;UTF-8&quot;</span><br><span class=\"line\">        charSet &apos;UTF-8&apos;</span><br><span class=\"line\">        author true</span><br><span class=\"line\">        version true</span><br><span class=\"line\">        links &quot;http://docs.oracle.com/javase/7/docs/api&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    source = android.sourceSets.main.java.srcDirs</span><br><span class=\"line\">    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">task javadocJar(type: Jar, dependsOn: javadoc) &#123;</span><br><span class=\"line\">    classifier = &apos;javadoc&apos;</span><br><span class=\"line\">    from javadoc.destinationDir</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/***会上传所有的jar，aar等archives****/</span><br><span class=\"line\">artifacts &#123;</span><br><span class=\"line\">    archives javadocJar</span><br><span class=\"line\">    archives sourcesJar</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 要使用publishing，则需要引入如下插件，该插件中提供了publishing方法来上传</span><br><span class=\"line\"> * apply plugin: &apos;maven-publish&apos;</span><br><span class=\"line\"> * 同时，记得反注释bintray中publications行</span><br><span class=\"line\"> * bintray&#123;</span><br><span class=\"line\"> *   //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。</span><br><span class=\"line\"> *   publications = [&apos;Production&apos;]</span><br><span class=\"line\"> * &#125;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">publishing &#123;</span><br><span class=\"line\">    publications &#123;</span><br><span class=\"line\">        Production(MavenPublication) &#123;</span><br><span class=\"line\">//            artifact(&quot;$buildDir/outputs/aar/$&#123;this.pkgArtifactId&#125;-release.aar&quot;)</span><br><span class=\"line\">//            artifacts &#123;</span><br><span class=\"line\">//                archives javadocJar</span><br><span class=\"line\">//                archives sourcesJar</span><br><span class=\"line\">//            &#125;</span><br><span class=\"line\">            groupId this.group</span><br><span class=\"line\">            artifactId this.pkgArtifactId</span><br><span class=\"line\">            version this.version</span><br><span class=\"line\"></span><br><span class=\"line\">            pom.withXml &#123;</span><br><span class=\"line\">                def dependenciesNode = asNode().appendNode(&apos;dependencies&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">                // Iterate over the implementation dependencies (we don&apos;t want the test ones), adding a &lt;dependency&gt; node for each</span><br><span class=\"line\">                configurations.implementation.allDependencies.each &#123;</span><br><span class=\"line\">                    // Ensure dependencies such as fileTree are not included in the pom.</span><br><span class=\"line\">                    if (it.name != &apos;unspecified&apos;) &#123;</span><br><span class=\"line\">                        def dependencyNode = dependenciesNode.appendNode(&apos;dependency&apos;)</span><br><span class=\"line\">                        dependencyNode.appendNode(&apos;groupId&apos;, it.group)</span><br><span class=\"line\">                        dependencyNode.appendNode(&apos;artifactId&apos;, it.name)</span><br><span class=\"line\">                        dependencyNode.appendNode(&apos;version&apos;, it.version)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*******************************************publishing 方式上传end*********************************************/</span><br><span class=\"line\"></span><br><span class=\"line\">bintray &#123;</span><br><span class=\"line\">//    user = project.hasProperty(&apos;bintrayUser&apos;) ?: System.getenv(&apos;BINTRAY_USER&apos;)</span><br><span class=\"line\">//    key = project.hasProperty(&apos;bintrayApiKey&apos;) ?: System.getenv(&apos;BINTRAY_API_KEY&apos;)</span><br><span class=\"line\">    user = this.bintrayUser ?: System.getenv(&apos;BINTRAY_USER&apos;)</span><br><span class=\"line\">    key = this.bintrayApiKey ?: System.getenv(&apos;BINTRAY_API_KEY&apos;)</span><br><span class=\"line\">    publications = [&apos;Production&apos;] //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。</span><br><span class=\"line\">    configurations = [&apos;archives&apos;]</span><br><span class=\"line\">    override = true</span><br><span class=\"line\">    pkg &#123;</span><br><span class=\"line\">        repo = this.bintrayRepo //bintray 仓库名称</span><br><span class=\"line\">        name = this.bintrayPackage // bintray 仓库中 packge name</span><br><span class=\"line\">        description = &quot;An example of using the bintray plugin with gradle plugin 3.0.0&quot;</span><br><span class=\"line\">        publish = true</span><br><span class=\"line\">        dryRun = false //设置成true，则不能上传，why？</span><br><span class=\"line\">        publicDownloadNumbers = true</span><br><span class=\"line\">        licenses = [&apos;Apache-2.0&apos;]</span><br><span class=\"line\">        vcsUrl = this.vcsUrl</span><br><span class=\"line\">        issueTrackerUrl = this.issueUrl</span><br><span class=\"line\">        websiteUrl = this.siteUrl</span><br><span class=\"line\">        version &#123;</span><br><span class=\"line\">            name = this.version</span><br><span class=\"line\">            desc = &quot;$&#123;this.pkgArtifactId&#125; $&#123;this.version&#125;&quot;</span><br><span class=\"line\">            released = new Date()</span><br><span class=\"line\">            vcsTag = this.version</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/***************************************************************************/</span><br><span class=\"line\">/** Plugin DSL : https://github.com/bintray/gradle-bintray-plugin#readme  **/</span><br><span class=\"line\">/***************************************************************************/</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * bintray &#123;</span><br><span class=\"line\"> *     user = &apos;bintray_user&apos;</span><br><span class=\"line\"> *     key = &apos;bintray_api_key&apos;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *     configurations = [&apos;deployables&apos;] //When uploading configuration files</span><br><span class=\"line\"> *     // - OR -</span><br><span class=\"line\"> *     publications = [&apos;mavenStuff&apos;] //When uploading Maven-based publication files</span><br><span class=\"line\"> *     // - AND/OR -</span><br><span class=\"line\"> *     filesSpec &#123; //When uploading any arbitrary files (&apos;filesSpec&apos; is a standard Gradle CopySpec)</span><br><span class=\"line\"> *         from &apos;arbitrary-files&apos;</span><br><span class=\"line\"> *         into &apos;standalone_files/level1&apos;</span><br><span class=\"line\"> *         rename &apos;(.+)\\\\.(.+)&apos;, &apos;$1-suffix.$2&apos;</span><br><span class=\"line\"> *     &#125;</span><br><span class=\"line\"> *     dryRun = false //[Default: false] Whether to run this as dry-run, without deploying</span><br><span class=\"line\"> *     publish = true //[Default: false] Whether version should be auto published after an upload</span><br><span class=\"line\"> *     override = false //[Default: false] Whether to override version artifacts already published</span><br><span class=\"line\"> *     //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there&apos;s no need to configure the other package properties (like userOrg, desc, etc).</span><br><span class=\"line\"> *     pkg &#123;</span><br><span class=\"line\"> *         repo = &apos;myrepo&apos;</span><br><span class=\"line\"> *         name = &apos;mypkg&apos;</span><br><span class=\"line\"> *         userOrg = &apos;myorg&apos; //An optional organization name when the repo belongs to one of the user&apos;s orgs</span><br><span class=\"line\"> *         desc = &apos;what a fantastic package indeed!&apos;</span><br><span class=\"line\"> *         websiteUrl = &apos;https://github.com/bintray/gradle-bintray-plugin&apos;</span><br><span class=\"line\"> *         issueTrackerUrl = &apos;https://github.com/bintray/gradle-bintray-plugin/issues&apos;</span><br><span class=\"line\"> *         vcsUrl = &apos;https://github.com/bintray/gradle-bintray-plugin.git&apos;</span><br><span class=\"line\"> *         licenses = [&apos;Apache-2.0&apos;]</span><br><span class=\"line\"> *         labels = [&apos;gear&apos;, &apos;gore&apos;, &apos;gorilla&apos;]</span><br><span class=\"line\"> *         publicDownloadNumbers = true</span><br><span class=\"line\"> *         attributes= [&apos;a&apos;: [&apos;ay1&apos;, &apos;ay2&apos;], &apos;b&apos;: [&apos;bee&apos;], c: &apos;cee&apos;] //Optional package-level attributes</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *         githubRepo = &apos;bintray/gradle-bintray-plugin&apos; //Optional Github repository</span><br><span class=\"line\"> *         githubReleaseNotesFile = &apos;README.md&apos; //Optional Github readme file</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *         //Optional Debian details</span><br><span class=\"line\"> *         debn &#123;</span><br><span class=\"line\"> *             distribution = &apos;squeeze&apos;</span><br><span class=\"line\"> *             component = &apos;main&apos;</span><br><span class=\"line\"> *             architecture = &apos;i386,noarch,amd64&apos;</span><br><span class=\"line\"> *         &#125;</span><br><span class=\"line\"> *         //Optional version descriptor</span><br><span class=\"line\"> *         version &#123;</span><br><span class=\"line\"> *             name = &apos;1.3-Final&apos; //Bintray logical version name</span><br><span class=\"line\"> *             desc = //Optional - Version-specific description&apos;</span><br><span class=\"line\"> *             released  = //Optional - Date of the version release. 2 possible values: date in the format of &apos;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZZ&apos; OR a java.util.Date instance</span><br><span class=\"line\"> *             vcsTag = &apos;1.3.0&apos;</span><br><span class=\"line\"> *             attributes = [&apos;gradle-plugin&apos;: &apos;com.use.less:com.use.less.gradle:gradle-useless-plugin&apos;] //Optional version-level attributes</span><br><span class=\"line\"> *             //Optional configuration for GPG signing</span><br><span class=\"line\"> *           gpg &#123;</span><br><span class=\"line\"> *                 sign = true //Determines whether to GPG sign the files. The default is false</span><br><span class=\"line\"> *                 passphrase = &apos;passphrase&apos; //Optional. The passphrase for GPsigning&apos;*             &#125;</span><br><span class=\"line\"> *             //Optional configuration for Maven Central sync of the version</span><br><span class=\"line\"> *           mavenCentralSync &#123;</span><br><span class=\"line\"> *                 sync = true //[Default: true] Determines whether to sync the version to Maven Central.</span><br><span class=\"line\"> *                 user = &apos;userToken&apos; //OSS user token: mandatory</span><br><span class=\"line\"> *                 password = &apos;paasword&apos; //OSS user password: mandatory</span><br><span class=\"line\"> *                 close = &apos;1&apos; //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and releasemuay.*             &#125;</span><br><span class=\"line\"> *         &#125;</span><br><span class=\"line\"> *     &#125;</span><br><span class=\"line\"> * &#125;</span><br><span class=\"line\"> */</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行命令,假设module为：newaarmodule</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info --debug</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"五、使用install方式上传\"><a href=\"#五、使用install方式上传\" class=\"headerlink\" title=\"五、使用install方式上传\"></a>五、使用install方式上传</h3><ol>\n<li><p>项目根目录build.gradle文件dependencies下添加如下依赖：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classpath &apos;com.github.dcendents:android-maven-gradle-plugin:2.0&apos;</span><br><span class=\"line\">classpath &apos;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>module目录下增加gradle.properties文件，并添加如下key，value根据自己的项目来修改</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bintrayUser=farubaba</span><br><span class=\"line\">bintrayApiKey=7b2db169d93937cdbe36482d9793d75069e4b7b7</span><br><span class=\"line\">bintrayRepo=android</span><br><span class=\"line\">bintrayPackage=newaarmodule</span><br><span class=\"line\">pkgGroupId=com.farubaba.android</span><br><span class=\"line\">pkgArtifactId=newaarmodule</span><br><span class=\"line\">pkgVersion=3.0.3</span><br><span class=\"line\">siteUrl=https://github.com/Farubaba/Mobile</span><br><span class=\"line\">vcsUrl=https://github.com/Farubaba/Mobile.git</span><br><span class=\"line\">issueUrl=https://github.com/Farubaba/Mobile/issues</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>module目录下增加install.gradle文件</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//参考 ： https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 【使用Gradle上传aar到jcenter】</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *  主要文件：</span><br><span class=\"line\"> *  1）project根目录build.gradle</span><br><span class=\"line\"> *  2) module目录下build.gradle</span><br><span class=\"line\"> *  3) module目录下install.gradle</span><br><span class=\"line\"> *  4) module目录下gradle.properties</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 使用本文件时，在module的build.gradle文件末尾添加一行：</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      apply from: &apos;install.gradle&apos;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 1、[gradle-bintray-plugin插件文档]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/bintray/gradle-bintray-plugin#readme</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 2、[android-maven-gradle-plugin，在gradle中使用maven来publish上传文件到jcenter私有仓库] :</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/dcendents/android-maven-gradle-plugin</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 3、[编写gradle.properties文件,定义属性]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      bintrayUser=farubaba</span><br><span class=\"line\"> *      bintrayApiKey=7b2db169d93937cdbe362035739593d75069e4b9f</span><br><span class=\"line\"> *      bintrayRepo=android</span><br><span class=\"line\"> *      bintrayPackage=newaarmodule</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 4、[编写独立的publish.gradle文档]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 5、[引入源码jar包]：</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 6、[执行命令，上传到jcenter私有仓库]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      执行所有module：./gradlew clean build bintrayUpload --stacktrace --info</span><br><span class=\"line\"> *      执行指定module：./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> ***********************************************************/</span><br><span class=\"line\"></span><br><span class=\"line\">//放入项目根目录下的build.gradle文件中，如果不设置，则需要在module的build.gradle文件中设置plugins&#123;&#125;来替代</span><br><span class=\"line\">//classpath &apos;com.github.dcendents:android-maven-gradle-plugin:2.0&apos;</span><br><span class=\"line\">//classpath &apos;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">//plugins &#123;</span><br><span class=\"line\">//    id &quot;com.github.dcendents.android-maven&quot; version &quot;2.1&quot;</span><br><span class=\"line\">//&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">apply plugin: &apos;com.github.dcendents.android-maven&apos; //该插件提供了install方法来上传</span><br><span class=\"line\">//apply plugin: &apos;maven-publish&apos; //该插件中提供了publishing方法来上传</span><br><span class=\"line\">apply plugin: &apos;com.jfrog.bintray&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">/**为plugin中预定义的变量赋值**/</span><br><span class=\"line\">group this.pkgGroupId</span><br><span class=\"line\">version this.pkgVersion</span><br><span class=\"line\"></span><br><span class=\"line\">bintray &#123;</span><br><span class=\"line\">//    user = project.hasProperty(&apos;bintrayUser&apos;) ?: System.getenv(&apos;BINTRAY_USER&apos;)</span><br><span class=\"line\">//    key = project.hasProperty(&apos;bintrayApiKey&apos;) ?: System.getenv(&apos;BINTRAY_API_KEY&apos;)</span><br><span class=\"line\">    user = this.bintrayUser ?: System.getenv(&apos;BINTRAY_USER&apos;)</span><br><span class=\"line\">    key = this.bintrayApiKey ?: System.getenv(&apos;BINTRAY_API_KEY&apos;)</span><br><span class=\"line\">    //publications = [&apos;Production&apos;] //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。</span><br><span class=\"line\">    configurations = [&apos;archives&apos;]</span><br><span class=\"line\">    override = true</span><br><span class=\"line\">    pkg &#123;</span><br><span class=\"line\">        repo = this.bintrayRepo //bintray 仓库名称</span><br><span class=\"line\">        name = this.bintrayPackage // bintray 仓库中 packge name</span><br><span class=\"line\">        description = &quot;An example of using the bintray plugin with gradle plugin 3.0.0&quot;</span><br><span class=\"line\">        publish = true</span><br><span class=\"line\">        dryRun = false //设置成true，则不能上传，why？</span><br><span class=\"line\">        publicDownloadNumbers = true</span><br><span class=\"line\">        licenses = [&apos;Apache-2.0&apos;]</span><br><span class=\"line\">        vcsUrl = this.vcsUrl</span><br><span class=\"line\">        issueTrackerUrl = this.issueUrl</span><br><span class=\"line\">        websiteUrl = this.siteUrl</span><br><span class=\"line\">        version &#123;</span><br><span class=\"line\">            name = this.version</span><br><span class=\"line\">            desc = &quot;$&#123;this.pkgArtifactId&#125; $&#123;this.version&#125;&quot;</span><br><span class=\"line\">            released = new Date()</span><br><span class=\"line\">            vcsTag = this.version</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*******************************************Install 方式上传begin************************************************/</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 使用install，要应用如下插件，该插件提供了install方法来上传</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * apply plugin: &apos;com.github.dcendents.android-maven&apos;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 同时，记得注释掉bintray中publications行</span><br><span class=\"line\"> * bintray&#123;</span><br><span class=\"line\"> *   //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。</span><br><span class=\"line\"> *   //publications = [&apos;Production&apos;]</span><br><span class=\"line\"> * &#125;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">install &#123;</span><br><span class=\"line\">    repositories.mavenInstaller &#123;</span><br><span class=\"line\">        pom &#123;</span><br><span class=\"line\">            project &#123;</span><br><span class=\"line\">                packaging &apos;aar&apos;</span><br><span class=\"line\">                name &apos;Bintray publish Gradle aar example&apos;</span><br><span class=\"line\">                url siteUrl</span><br><span class=\"line\">                licenses &#123;</span><br><span class=\"line\">                    license &#123;</span><br><span class=\"line\">                        name &apos;The Apache Software License, Version 2.0&apos;</span><br><span class=\"line\">                        url &apos;http://www.apache.org/licenses/LICENSE-2.0.txt&apos;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                developers &#123;</span><br><span class=\"line\">                    developer &#123;</span><br><span class=\"line\">                        id &apos;farubaba&apos;</span><br><span class=\"line\">                        name &apos;Baruch Sadogursky&apos;</span><br><span class=\"line\">                        email &apos;farubaba@qq.com&apos;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                scm &#123;</span><br><span class=\"line\">                    connection &apos;https://github.com/Farubaba/Mobile.git&apos;</span><br><span class=\"line\">                    developerConnection &apos;https://github.com/Farubaba/Mobile.git&apos;</span><br><span class=\"line\">                    url this.siteUrl</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/***打包javadoc 和sourcesJar**/</span><br><span class=\"line\">task sourcesJar(type: Jar) &#123;</span><br><span class=\"line\">    from android.sourceSets.main.java.srcDirs</span><br><span class=\"line\">    classifier = &apos;sources&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">task javadoc(type: Javadoc) &#123;</span><br><span class=\"line\">    options &#123;</span><br><span class=\"line\">        encoding &quot;UTF-8&quot;</span><br><span class=\"line\">        charSet &apos;UTF-8&apos;</span><br><span class=\"line\">        author true</span><br><span class=\"line\">        version true</span><br><span class=\"line\">        links &quot;http://docs.oracle.com/javase/7/docs/api&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    source = android.sourceSets.main.java.srcDirs</span><br><span class=\"line\">    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">task javadocJar(type: Jar, dependsOn: javadoc) &#123;</span><br><span class=\"line\">    classifier = &apos;javadoc&apos;</span><br><span class=\"line\">    from javadoc.destinationDir</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/***会上传所有的jar，aar等archives****/</span><br><span class=\"line\">artifacts &#123;</span><br><span class=\"line\">    archives javadocJar</span><br><span class=\"line\">    archives sourcesJar</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">task findConventions &lt;&lt; &#123;</span><br><span class=\"line\">    println project.getConvention()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*******************************************Install 方式上传end************************************************/</span><br><span class=\"line\"></span><br><span class=\"line\">/***************************************************************************/</span><br><span class=\"line\">/** Plugin DSL : https://github.com/bintray/gradle-bintray-plugin#readme  **/</span><br><span class=\"line\">/***************************************************************************/</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * bintray &#123;</span><br><span class=\"line\"> *     user = &apos;bintray_user&apos;</span><br><span class=\"line\"> *     key = &apos;bintray_api_key&apos;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *     configurations = [&apos;deployables&apos;] //When uploading configuration files</span><br><span class=\"line\"> *     // - OR -</span><br><span class=\"line\"> *     publications = [&apos;mavenStuff&apos;] //When uploading Maven-based publication files</span><br><span class=\"line\"> *     // - AND/OR -</span><br><span class=\"line\"> *     filesSpec &#123; //When uploading any arbitrary files (&apos;filesSpec&apos; is a standard Gradle CopySpec)</span><br><span class=\"line\"> *         from &apos;arbitrary-files&apos;</span><br><span class=\"line\"> *         into &apos;standalone_files/level1&apos;</span><br><span class=\"line\"> *         rename &apos;(.+)\\\\.(.+)&apos;, &apos;$1-suffix.$2&apos;</span><br><span class=\"line\"> *     &#125;</span><br><span class=\"line\"> *     dryRun = false //[Default: false] Whether to run this as dry-run, without deploying</span><br><span class=\"line\"> *     publish = true //[Default: false] Whether version should be auto published after an upload</span><br><span class=\"line\"> *     override = false //[Default: false] Whether to override version artifacts already published</span><br><span class=\"line\"> *     //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there&apos;s no need to configure the other package properties (like userOrg, desc, etc).</span><br><span class=\"line\"> *     pkg &#123;</span><br><span class=\"line\"> *         repo = &apos;myrepo&apos;</span><br><span class=\"line\"> *         name = &apos;mypkg&apos;</span><br><span class=\"line\"> *         userOrg = &apos;myorg&apos; //An optional organization name when the repo belongs to one of the user&apos;s orgs</span><br><span class=\"line\"> *         desc = &apos;what a fantastic package indeed!&apos;</span><br><span class=\"line\"> *         websiteUrl = &apos;https://github.com/bintray/gradle-bintray-plugin&apos;</span><br><span class=\"line\"> *         issueTrackerUrl = &apos;https://github.com/bintray/gradle-bintray-plugin/issues&apos;</span><br><span class=\"line\"> *         vcsUrl = &apos;https://github.com/bintray/gradle-bintray-plugin.git&apos;</span><br><span class=\"line\"> *         licenses = [&apos;Apache-2.0&apos;]</span><br><span class=\"line\"> *         labels = [&apos;gear&apos;, &apos;gore&apos;, &apos;gorilla&apos;]</span><br><span class=\"line\"> *         publicDownloadNumbers = true</span><br><span class=\"line\"> *         attributes= [&apos;a&apos;: [&apos;ay1&apos;, &apos;ay2&apos;], &apos;b&apos;: [&apos;bee&apos;], c: &apos;cee&apos;] //Optional package-level attributes</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *         githubRepo = &apos;bintray/gradle-bintray-plugin&apos; //Optional Github repository</span><br><span class=\"line\"> *         githubReleaseNotesFile = &apos;README.md&apos; //Optional Github readme file</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *         //Optional Debian details</span><br><span class=\"line\"> *         debn &#123;</span><br><span class=\"line\"> *             distribution = &apos;squeeze&apos;</span><br><span class=\"line\"> *             component = &apos;main&apos;</span><br><span class=\"line\"> *             architecture = &apos;i386,noarch,amd64&apos;</span><br><span class=\"line\"> *         &#125;</span><br><span class=\"line\"> *         //Optional version descriptor</span><br><span class=\"line\"> *         version &#123;</span><br><span class=\"line\"> *             name = &apos;1.3-Final&apos; //Bintray logical version name</span><br><span class=\"line\"> *             desc = //Optional - Version-specific description&apos;</span><br><span class=\"line\"> *             released  = //Optional - Date of the version release. 2 possible values: date in the format of &apos;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZZ&apos; OR a java.util.Date instance</span><br><span class=\"line\"> *             vcsTag = &apos;1.3.0&apos;</span><br><span class=\"line\"> *             attributes = [&apos;gradle-plugin&apos;: &apos;com.use.less:com.use.less.gradle:gradle-useless-plugin&apos;] //Optional version-level attributes</span><br><span class=\"line\"> *             //Optional configuration for GPG signing</span><br><span class=\"line\"> *           gpg &#123;</span><br><span class=\"line\"> *                 sign = true //Determines whether to GPG sign the files. The default is false</span><br><span class=\"line\"> *                 passphrase = &apos;passphrase&apos; //Optional. The passphrase for GPsigning&apos;*             &#125;</span><br><span class=\"line\"> *             //Optional configuration for Maven Central sync of the version</span><br><span class=\"line\"> *           mavenCentralSync &#123;</span><br><span class=\"line\"> *                 sync = true //[Default: true] Determines whether to sync the version to Maven Central.</span><br><span class=\"line\"> *                 user = &apos;userToken&apos; //OSS user token: mandatory</span><br><span class=\"line\"> *                 password = &apos;paasword&apos; //OSS user password: mandatory</span><br><span class=\"line\"> *                 close = &apos;1&apos; //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and releasemuay.*             &#125;</span><br><span class=\"line\"> *         &#125;</span><br><span class=\"line\"> *     &#125;</span><br><span class=\"line\"> * &#125;</span><br><span class=\"line\"> */</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行命令,假设module为：newaarmodule</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info --debug</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、相关参考\"><a href=\"#一、相关参考\" class=\"headerlink\" title=\"一、相关参考\"></a>一、相关参考</h3><p><a href=\"https://developer.android.com/studio/build/build-variants\" target=\"_blank\" rel=\"noopener\">android-gradle-configuration</a></p>\n<p><a href=\"https://github.com/bintray/bintray-examples/tree/master/gradle-bintray-plugin-examples\" target=\"_blank\" rel=\"noopener\">gradle-bintray-plugin examples</a></p>\n<p><a href=\"https://github.com/bintray/gradle-bintray-plugin/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">gradle-bintray-plugin 文档</a></p>\n<p><a href=\"https://www.cnblogs.com/AbrahamCaiJin/p/7058147.html\" target=\"_blank\" rel=\"noopener\">上传android arr到jcenter网友博文参考</a></p>\n<p><a href=\"http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html\" target=\"_blank\" rel=\"noopener\">maven-left-cycle</a></p>\n<p><a href=\"https://docs.gradle.org\" target=\"_blank\" rel=\"noopener\">https://docs.gradle.org</a></p>\n<p><a href=\"https://github.com/bintray/gradle-bintray-plugin#readme\" target=\"_blank\" rel=\"noopener\">https://github.com/bintray/gradle-bintray-plugin#readme</a></p>\n<p><a href=\"https://www.cnblogs.com/AbrahamCaiJin/p/7058147.html\" target=\"_blank\" rel=\"noopener\">一步一步教你将开源项目上传到jcenter</a></p>\n<h3 id=\"二、概述\"><a href=\"#二、概述\" class=\"headerlink\" title=\"二、概述\"></a>二、概述</h3><p>1.注册jcenter账号 <a href=\"https://bintray.com/signup/oss\" target=\"_blank\" rel=\"noopener\">https://bintray.com/signup/oss</a></p>\n<pre><code>注册gmail邮箱（因为163，qq邮箱等都不能在jcenter中注册成功）\n本地Maven client 配置目录 ： /usr/local/opt/maven/conf\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用户名：farubaba</span><br><span class=\"line\">API Key: xxxxx</span><br></pre></td></tr></table></figure>\n<p>2.创建jcenter私有仓库(repository)</p>\n<p>jcenter中的repository和github中的repository不同，jcenter中的package等同于github中的repository</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">仓库名：android</span><br><span class=\"line\">类型选择：maven，generic等</span><br></pre></td></tr></table></figure>\n<p>3.进入刚建立的仓库:android</p>\n<pre><code>1. 点击settting按钮\n2. 选择uploading\n3. deploying withe gradle \n4. 查看[gradle-bintray-plugin]插件文档：https://github.com/bintray/gradle-bintray-plugin#readme\n5. 查看[gradle-bintray-plugin]插件的示例：https://github.com/bintray/bintray-examples/tree/master/gradle-bintray-plugin-examples\n6. 以上文档看个大概，仍然不能很清楚的搭建号项目，需要进一步查看bintray在github中的资源：https://github.com/bintray\n7. 更多更完整的aar相关示例： https://github.com/bintray/bintray-examples\n8. 打开：https://github.com/bintray/bintray-examples/tree/master/gradle-aar-example，查看build.gradle文件\n10.在bintray中搜索最新版本的android-maven-gradle-plugin：https://bintray.com/dcendents/gradle-plugins/com.github.dcendents%3Aandroid-maven-gradle-plugin\n11.点击package描述中的WebSite： https://github.com/dcendents/android-maven-gradle-plugin\n</code></pre><h3 id=\"三、上传命令\"><a href=\"#三、上传命令\" class=\"headerlink\" title=\"三、上传命令\"></a>三、上传命令</h3><ol>\n<li>在项目根目录下执行如下命令，会将项目中的所有module都upload到jcenter，如果已经存在，则会上传失败。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./greadlew clean build bintrayUpload --stacktrace --info --debug</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>如果需要单独上传某一个module到jcenter，则应使用如下命令，假设某个module的名称为：basefeature</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./greadlew :basefeature:clean :basefeature:build :basefeature:bintrayUpload --stacktrace --info --debug</span><br></pre></td></tr></table></figure>\n<h3 id=\"四、使用publishing方式上传\"><a href=\"#四、使用publishing方式上传\" class=\"headerlink\" title=\"四、使用publishing方式上传\"></a>四、使用publishing方式上传</h3><ol>\n<li><p>项目根目录build.gradle文件dependencies下添加如下依赖：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classpath &apos;com.github.dcendents:android-maven-gradle-plugin:2.0&apos;</span><br><span class=\"line\">classpath &apos;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>module目录下增加gradle.properties文件，并添加如下key，value根据自己的项目来修改</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bintrayUser=farubaba</span><br><span class=\"line\">bintrayApiKey=7b2db169d93937cdbe36482d9793d75069e4b7b7</span><br><span class=\"line\">bintrayRepo=android</span><br><span class=\"line\">bintrayPackage=newaarmodule</span><br><span class=\"line\">pkgGroupId=com.farubaba.android</span><br><span class=\"line\">pkgArtifactId=newaarmodule</span><br><span class=\"line\">pkgVersion=3.0.3</span><br><span class=\"line\">siteUrl=https://github.com/Farubaba/Mobile</span><br><span class=\"line\">vcsUrl=https://github.com/Farubaba/Mobile.git</span><br><span class=\"line\">issueUrl=https://github.com/Farubaba/Mobile/issues</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>module目录下增加publish.gradle文件</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//参考 ： https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 【使用Gradle上传aar到jcenter】</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *  主要文件：</span><br><span class=\"line\"> *  1）project根目录build.gradle</span><br><span class=\"line\"> *  2) module目录下build.gradle</span><br><span class=\"line\"> *  3) module目录下publish.gradle</span><br><span class=\"line\"> *  4) module目录下gradle.properties</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 使用本文件时，在module的build.gradle文件末尾添加一行：</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      apply from: &apos;publish.gradle&apos;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 1、[gradle-bintray-plugin插件文档]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/bintray/gradle-bintray-plugin#readme</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 2、[android-maven-gradle-plugin，在gradle中使用maven来publish上传文件到jcenter私有仓库] :</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/dcendents/android-maven-gradle-plugin</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 3、[编写gradle.properties文件,定义属性]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      bintrayUser=farubaba</span><br><span class=\"line\"> *      bintrayApiKey=7b2db169d93937cdbe362035739593d75069e4b9f</span><br><span class=\"line\"> *      bintrayRepo=android</span><br><span class=\"line\"> *      bintrayPackage=newaarmodule</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 4、[编写独立的publish.gradle文档]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 5、[引入源码jar包]：</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 6、[执行命令，上传到jcenter私有仓库]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      执行所有module：./gradlew clean build bintrayUpload --stacktrace --info</span><br><span class=\"line\"> *      执行指定module：./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> ***********************************************************/</span><br><span class=\"line\"></span><br><span class=\"line\">//放入项目根目录下的build.gradle文件中，如果不设置，则需要在module的build.gradle文件中设置plugins&#123;&#125;来替代</span><br><span class=\"line\">//classpath &apos;com.github.dcendents:android-maven-gradle-plugin:2.0&apos;</span><br><span class=\"line\">//classpath &apos;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">//plugins &#123;</span><br><span class=\"line\">//    id &quot;com.github.dcendents.android-maven&quot; version &quot;2.1&quot;</span><br><span class=\"line\">//&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//apply plugin: &apos;com.github.dcendents.android-maven&apos; //该插件提供了install方法来上传</span><br><span class=\"line\">apply plugin: &apos;maven-publish&apos; //该插件中提供了publishing方法来上传</span><br><span class=\"line\">apply plugin: &apos;com.jfrog.bintray&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">/**为plugin中预定义的变量赋值**/</span><br><span class=\"line\">group this.pkgGroupId</span><br><span class=\"line\">version this.pkgVersion</span><br><span class=\"line\"></span><br><span class=\"line\">/*******************************************publishing 方式上传start*********************************************/</span><br><span class=\"line\">/***打包javadoc 和sourcesJar**/</span><br><span class=\"line\">task sourcesJar(type: Jar) &#123;</span><br><span class=\"line\">    from android.sourceSets.main.java.srcDirs</span><br><span class=\"line\">    classifier = &apos;sources&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">task javadoc(type: Javadoc) &#123;</span><br><span class=\"line\">    options &#123;</span><br><span class=\"line\">        encoding &quot;UTF-8&quot;</span><br><span class=\"line\">        charSet &apos;UTF-8&apos;</span><br><span class=\"line\">        author true</span><br><span class=\"line\">        version true</span><br><span class=\"line\">        links &quot;http://docs.oracle.com/javase/7/docs/api&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    source = android.sourceSets.main.java.srcDirs</span><br><span class=\"line\">    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">task javadocJar(type: Jar, dependsOn: javadoc) &#123;</span><br><span class=\"line\">    classifier = &apos;javadoc&apos;</span><br><span class=\"line\">    from javadoc.destinationDir</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/***会上传所有的jar，aar等archives****/</span><br><span class=\"line\">artifacts &#123;</span><br><span class=\"line\">    archives javadocJar</span><br><span class=\"line\">    archives sourcesJar</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 要使用publishing，则需要引入如下插件，该插件中提供了publishing方法来上传</span><br><span class=\"line\"> * apply plugin: &apos;maven-publish&apos;</span><br><span class=\"line\"> * 同时，记得反注释bintray中publications行</span><br><span class=\"line\"> * bintray&#123;</span><br><span class=\"line\"> *   //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。</span><br><span class=\"line\"> *   publications = [&apos;Production&apos;]</span><br><span class=\"line\"> * &#125;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">publishing &#123;</span><br><span class=\"line\">    publications &#123;</span><br><span class=\"line\">        Production(MavenPublication) &#123;</span><br><span class=\"line\">//            artifact(&quot;$buildDir/outputs/aar/$&#123;this.pkgArtifactId&#125;-release.aar&quot;)</span><br><span class=\"line\">//            artifacts &#123;</span><br><span class=\"line\">//                archives javadocJar</span><br><span class=\"line\">//                archives sourcesJar</span><br><span class=\"line\">//            &#125;</span><br><span class=\"line\">            groupId this.group</span><br><span class=\"line\">            artifactId this.pkgArtifactId</span><br><span class=\"line\">            version this.version</span><br><span class=\"line\"></span><br><span class=\"line\">            pom.withXml &#123;</span><br><span class=\"line\">                def dependenciesNode = asNode().appendNode(&apos;dependencies&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">                // Iterate over the implementation dependencies (we don&apos;t want the test ones), adding a &lt;dependency&gt; node for each</span><br><span class=\"line\">                configurations.implementation.allDependencies.each &#123;</span><br><span class=\"line\">                    // Ensure dependencies such as fileTree are not included in the pom.</span><br><span class=\"line\">                    if (it.name != &apos;unspecified&apos;) &#123;</span><br><span class=\"line\">                        def dependencyNode = dependenciesNode.appendNode(&apos;dependency&apos;)</span><br><span class=\"line\">                        dependencyNode.appendNode(&apos;groupId&apos;, it.group)</span><br><span class=\"line\">                        dependencyNode.appendNode(&apos;artifactId&apos;, it.name)</span><br><span class=\"line\">                        dependencyNode.appendNode(&apos;version&apos;, it.version)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*******************************************publishing 方式上传end*********************************************/</span><br><span class=\"line\"></span><br><span class=\"line\">bintray &#123;</span><br><span class=\"line\">//    user = project.hasProperty(&apos;bintrayUser&apos;) ?: System.getenv(&apos;BINTRAY_USER&apos;)</span><br><span class=\"line\">//    key = project.hasProperty(&apos;bintrayApiKey&apos;) ?: System.getenv(&apos;BINTRAY_API_KEY&apos;)</span><br><span class=\"line\">    user = this.bintrayUser ?: System.getenv(&apos;BINTRAY_USER&apos;)</span><br><span class=\"line\">    key = this.bintrayApiKey ?: System.getenv(&apos;BINTRAY_API_KEY&apos;)</span><br><span class=\"line\">    publications = [&apos;Production&apos;] //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。</span><br><span class=\"line\">    configurations = [&apos;archives&apos;]</span><br><span class=\"line\">    override = true</span><br><span class=\"line\">    pkg &#123;</span><br><span class=\"line\">        repo = this.bintrayRepo //bintray 仓库名称</span><br><span class=\"line\">        name = this.bintrayPackage // bintray 仓库中 packge name</span><br><span class=\"line\">        description = &quot;An example of using the bintray plugin with gradle plugin 3.0.0&quot;</span><br><span class=\"line\">        publish = true</span><br><span class=\"line\">        dryRun = false //设置成true，则不能上传，why？</span><br><span class=\"line\">        publicDownloadNumbers = true</span><br><span class=\"line\">        licenses = [&apos;Apache-2.0&apos;]</span><br><span class=\"line\">        vcsUrl = this.vcsUrl</span><br><span class=\"line\">        issueTrackerUrl = this.issueUrl</span><br><span class=\"line\">        websiteUrl = this.siteUrl</span><br><span class=\"line\">        version &#123;</span><br><span class=\"line\">            name = this.version</span><br><span class=\"line\">            desc = &quot;$&#123;this.pkgArtifactId&#125; $&#123;this.version&#125;&quot;</span><br><span class=\"line\">            released = new Date()</span><br><span class=\"line\">            vcsTag = this.version</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/***************************************************************************/</span><br><span class=\"line\">/** Plugin DSL : https://github.com/bintray/gradle-bintray-plugin#readme  **/</span><br><span class=\"line\">/***************************************************************************/</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * bintray &#123;</span><br><span class=\"line\"> *     user = &apos;bintray_user&apos;</span><br><span class=\"line\"> *     key = &apos;bintray_api_key&apos;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *     configurations = [&apos;deployables&apos;] //When uploading configuration files</span><br><span class=\"line\"> *     // - OR -</span><br><span class=\"line\"> *     publications = [&apos;mavenStuff&apos;] //When uploading Maven-based publication files</span><br><span class=\"line\"> *     // - AND/OR -</span><br><span class=\"line\"> *     filesSpec &#123; //When uploading any arbitrary files (&apos;filesSpec&apos; is a standard Gradle CopySpec)</span><br><span class=\"line\"> *         from &apos;arbitrary-files&apos;</span><br><span class=\"line\"> *         into &apos;standalone_files/level1&apos;</span><br><span class=\"line\"> *         rename &apos;(.+)\\\\.(.+)&apos;, &apos;$1-suffix.$2&apos;</span><br><span class=\"line\"> *     &#125;</span><br><span class=\"line\"> *     dryRun = false //[Default: false] Whether to run this as dry-run, without deploying</span><br><span class=\"line\"> *     publish = true //[Default: false] Whether version should be auto published after an upload</span><br><span class=\"line\"> *     override = false //[Default: false] Whether to override version artifacts already published</span><br><span class=\"line\"> *     //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there&apos;s no need to configure the other package properties (like userOrg, desc, etc).</span><br><span class=\"line\"> *     pkg &#123;</span><br><span class=\"line\"> *         repo = &apos;myrepo&apos;</span><br><span class=\"line\"> *         name = &apos;mypkg&apos;</span><br><span class=\"line\"> *         userOrg = &apos;myorg&apos; //An optional organization name when the repo belongs to one of the user&apos;s orgs</span><br><span class=\"line\"> *         desc = &apos;what a fantastic package indeed!&apos;</span><br><span class=\"line\"> *         websiteUrl = &apos;https://github.com/bintray/gradle-bintray-plugin&apos;</span><br><span class=\"line\"> *         issueTrackerUrl = &apos;https://github.com/bintray/gradle-bintray-plugin/issues&apos;</span><br><span class=\"line\"> *         vcsUrl = &apos;https://github.com/bintray/gradle-bintray-plugin.git&apos;</span><br><span class=\"line\"> *         licenses = [&apos;Apache-2.0&apos;]</span><br><span class=\"line\"> *         labels = [&apos;gear&apos;, &apos;gore&apos;, &apos;gorilla&apos;]</span><br><span class=\"line\"> *         publicDownloadNumbers = true</span><br><span class=\"line\"> *         attributes= [&apos;a&apos;: [&apos;ay1&apos;, &apos;ay2&apos;], &apos;b&apos;: [&apos;bee&apos;], c: &apos;cee&apos;] //Optional package-level attributes</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *         githubRepo = &apos;bintray/gradle-bintray-plugin&apos; //Optional Github repository</span><br><span class=\"line\"> *         githubReleaseNotesFile = &apos;README.md&apos; //Optional Github readme file</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *         //Optional Debian details</span><br><span class=\"line\"> *         debn &#123;</span><br><span class=\"line\"> *             distribution = &apos;squeeze&apos;</span><br><span class=\"line\"> *             component = &apos;main&apos;</span><br><span class=\"line\"> *             architecture = &apos;i386,noarch,amd64&apos;</span><br><span class=\"line\"> *         &#125;</span><br><span class=\"line\"> *         //Optional version descriptor</span><br><span class=\"line\"> *         version &#123;</span><br><span class=\"line\"> *             name = &apos;1.3-Final&apos; //Bintray logical version name</span><br><span class=\"line\"> *             desc = //Optional - Version-specific description&apos;</span><br><span class=\"line\"> *             released  = //Optional - Date of the version release. 2 possible values: date in the format of &apos;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZZ&apos; OR a java.util.Date instance</span><br><span class=\"line\"> *             vcsTag = &apos;1.3.0&apos;</span><br><span class=\"line\"> *             attributes = [&apos;gradle-plugin&apos;: &apos;com.use.less:com.use.less.gradle:gradle-useless-plugin&apos;] //Optional version-level attributes</span><br><span class=\"line\"> *             //Optional configuration for GPG signing</span><br><span class=\"line\"> *           gpg &#123;</span><br><span class=\"line\"> *                 sign = true //Determines whether to GPG sign the files. The default is false</span><br><span class=\"line\"> *                 passphrase = &apos;passphrase&apos; //Optional. The passphrase for GPsigning&apos;*             &#125;</span><br><span class=\"line\"> *             //Optional configuration for Maven Central sync of the version</span><br><span class=\"line\"> *           mavenCentralSync &#123;</span><br><span class=\"line\"> *                 sync = true //[Default: true] Determines whether to sync the version to Maven Central.</span><br><span class=\"line\"> *                 user = &apos;userToken&apos; //OSS user token: mandatory</span><br><span class=\"line\"> *                 password = &apos;paasword&apos; //OSS user password: mandatory</span><br><span class=\"line\"> *                 close = &apos;1&apos; //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and releasemuay.*             &#125;</span><br><span class=\"line\"> *         &#125;</span><br><span class=\"line\"> *     &#125;</span><br><span class=\"line\"> * &#125;</span><br><span class=\"line\"> */</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行命令,假设module为：newaarmodule</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info --debug</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"五、使用install方式上传\"><a href=\"#五、使用install方式上传\" class=\"headerlink\" title=\"五、使用install方式上传\"></a>五、使用install方式上传</h3><ol>\n<li><p>项目根目录build.gradle文件dependencies下添加如下依赖：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classpath &apos;com.github.dcendents:android-maven-gradle-plugin:2.0&apos;</span><br><span class=\"line\">classpath &apos;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>module目录下增加gradle.properties文件，并添加如下key，value根据自己的项目来修改</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bintrayUser=farubaba</span><br><span class=\"line\">bintrayApiKey=7b2db169d93937cdbe36482d9793d75069e4b7b7</span><br><span class=\"line\">bintrayRepo=android</span><br><span class=\"line\">bintrayPackage=newaarmodule</span><br><span class=\"line\">pkgGroupId=com.farubaba.android</span><br><span class=\"line\">pkgArtifactId=newaarmodule</span><br><span class=\"line\">pkgVersion=3.0.3</span><br><span class=\"line\">siteUrl=https://github.com/Farubaba/Mobile</span><br><span class=\"line\">vcsUrl=https://github.com/Farubaba/Mobile.git</span><br><span class=\"line\">issueUrl=https://github.com/Farubaba/Mobile/issues</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>module目录下增加install.gradle文件</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//参考 ： https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 【使用Gradle上传aar到jcenter】</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *  主要文件：</span><br><span class=\"line\"> *  1）project根目录build.gradle</span><br><span class=\"line\"> *  2) module目录下build.gradle</span><br><span class=\"line\"> *  3) module目录下install.gradle</span><br><span class=\"line\"> *  4) module目录下gradle.properties</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 使用本文件时，在module的build.gradle文件末尾添加一行：</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      apply from: &apos;install.gradle&apos;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 1、[gradle-bintray-plugin插件文档]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/bintray/gradle-bintray-plugin#readme</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 2、[android-maven-gradle-plugin，在gradle中使用maven来publish上传文件到jcenter私有仓库] :</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/dcendents/android-maven-gradle-plugin</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 3、[编写gradle.properties文件,定义属性]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      bintrayUser=farubaba</span><br><span class=\"line\"> *      bintrayApiKey=7b2db169d93937cdbe362035739593d75069e4b9f</span><br><span class=\"line\"> *      bintrayRepo=android</span><br><span class=\"line\"> *      bintrayPackage=newaarmodule</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 4、[编写独立的publish.gradle文档]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      https://github.com/bintray/bintray-examples/blob/master/gradle-bintray-plugin-examples/android-gradle-3.0.0-maven-example/app/publish.gradle</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 5、[引入源码jar包]：</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 6、[执行命令，上传到jcenter私有仓库]:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      执行所有module：./gradlew clean build bintrayUpload --stacktrace --info</span><br><span class=\"line\"> *      执行指定module：./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> ***********************************************************/</span><br><span class=\"line\"></span><br><span class=\"line\">//放入项目根目录下的build.gradle文件中，如果不设置，则需要在module的build.gradle文件中设置plugins&#123;&#125;来替代</span><br><span class=\"line\">//classpath &apos;com.github.dcendents:android-maven-gradle-plugin:2.0&apos;</span><br><span class=\"line\">//classpath &apos;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">//plugins &#123;</span><br><span class=\"line\">//    id &quot;com.github.dcendents.android-maven&quot; version &quot;2.1&quot;</span><br><span class=\"line\">//&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">apply plugin: &apos;com.github.dcendents.android-maven&apos; //该插件提供了install方法来上传</span><br><span class=\"line\">//apply plugin: &apos;maven-publish&apos; //该插件中提供了publishing方法来上传</span><br><span class=\"line\">apply plugin: &apos;com.jfrog.bintray&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">/**为plugin中预定义的变量赋值**/</span><br><span class=\"line\">group this.pkgGroupId</span><br><span class=\"line\">version this.pkgVersion</span><br><span class=\"line\"></span><br><span class=\"line\">bintray &#123;</span><br><span class=\"line\">//    user = project.hasProperty(&apos;bintrayUser&apos;) ?: System.getenv(&apos;BINTRAY_USER&apos;)</span><br><span class=\"line\">//    key = project.hasProperty(&apos;bintrayApiKey&apos;) ?: System.getenv(&apos;BINTRAY_API_KEY&apos;)</span><br><span class=\"line\">    user = this.bintrayUser ?: System.getenv(&apos;BINTRAY_USER&apos;)</span><br><span class=\"line\">    key = this.bintrayApiKey ?: System.getenv(&apos;BINTRAY_API_KEY&apos;)</span><br><span class=\"line\">    //publications = [&apos;Production&apos;] //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。</span><br><span class=\"line\">    configurations = [&apos;archives&apos;]</span><br><span class=\"line\">    override = true</span><br><span class=\"line\">    pkg &#123;</span><br><span class=\"line\">        repo = this.bintrayRepo //bintray 仓库名称</span><br><span class=\"line\">        name = this.bintrayPackage // bintray 仓库中 packge name</span><br><span class=\"line\">        description = &quot;An example of using the bintray plugin with gradle plugin 3.0.0&quot;</span><br><span class=\"line\">        publish = true</span><br><span class=\"line\">        dryRun = false //设置成true，则不能上传，why？</span><br><span class=\"line\">        publicDownloadNumbers = true</span><br><span class=\"line\">        licenses = [&apos;Apache-2.0&apos;]</span><br><span class=\"line\">        vcsUrl = this.vcsUrl</span><br><span class=\"line\">        issueTrackerUrl = this.issueUrl</span><br><span class=\"line\">        websiteUrl = this.siteUrl</span><br><span class=\"line\">        version &#123;</span><br><span class=\"line\">            name = this.version</span><br><span class=\"line\">            desc = &quot;$&#123;this.pkgArtifactId&#125; $&#123;this.version&#125;&quot;</span><br><span class=\"line\">            released = new Date()</span><br><span class=\"line\">            vcsTag = this.version</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*******************************************Install 方式上传begin************************************************/</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 使用install，要应用如下插件，该插件提供了install方法来上传</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * apply plugin: &apos;com.github.dcendents.android-maven&apos;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * 同时，记得注释掉bintray中publications行</span><br><span class=\"line\"> * bintray&#123;</span><br><span class=\"line\"> *   //FIXME 此行只有使用publishing来上传时才需要，如果使用install方法来上传，则需要注释掉此行。</span><br><span class=\"line\"> *   //publications = [&apos;Production&apos;]</span><br><span class=\"line\"> * &#125;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">install &#123;</span><br><span class=\"line\">    repositories.mavenInstaller &#123;</span><br><span class=\"line\">        pom &#123;</span><br><span class=\"line\">            project &#123;</span><br><span class=\"line\">                packaging &apos;aar&apos;</span><br><span class=\"line\">                name &apos;Bintray publish Gradle aar example&apos;</span><br><span class=\"line\">                url siteUrl</span><br><span class=\"line\">                licenses &#123;</span><br><span class=\"line\">                    license &#123;</span><br><span class=\"line\">                        name &apos;The Apache Software License, Version 2.0&apos;</span><br><span class=\"line\">                        url &apos;http://www.apache.org/licenses/LICENSE-2.0.txt&apos;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                developers &#123;</span><br><span class=\"line\">                    developer &#123;</span><br><span class=\"line\">                        id &apos;farubaba&apos;</span><br><span class=\"line\">                        name &apos;Baruch Sadogursky&apos;</span><br><span class=\"line\">                        email &apos;farubaba@qq.com&apos;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                scm &#123;</span><br><span class=\"line\">                    connection &apos;https://github.com/Farubaba/Mobile.git&apos;</span><br><span class=\"line\">                    developerConnection &apos;https://github.com/Farubaba/Mobile.git&apos;</span><br><span class=\"line\">                    url this.siteUrl</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/***打包javadoc 和sourcesJar**/</span><br><span class=\"line\">task sourcesJar(type: Jar) &#123;</span><br><span class=\"line\">    from android.sourceSets.main.java.srcDirs</span><br><span class=\"line\">    classifier = &apos;sources&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">task javadoc(type: Javadoc) &#123;</span><br><span class=\"line\">    options &#123;</span><br><span class=\"line\">        encoding &quot;UTF-8&quot;</span><br><span class=\"line\">        charSet &apos;UTF-8&apos;</span><br><span class=\"line\">        author true</span><br><span class=\"line\">        version true</span><br><span class=\"line\">        links &quot;http://docs.oracle.com/javase/7/docs/api&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    source = android.sourceSets.main.java.srcDirs</span><br><span class=\"line\">    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">task javadocJar(type: Jar, dependsOn: javadoc) &#123;</span><br><span class=\"line\">    classifier = &apos;javadoc&apos;</span><br><span class=\"line\">    from javadoc.destinationDir</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/***会上传所有的jar，aar等archives****/</span><br><span class=\"line\">artifacts &#123;</span><br><span class=\"line\">    archives javadocJar</span><br><span class=\"line\">    archives sourcesJar</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">task findConventions &lt;&lt; &#123;</span><br><span class=\"line\">    println project.getConvention()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*******************************************Install 方式上传end************************************************/</span><br><span class=\"line\"></span><br><span class=\"line\">/***************************************************************************/</span><br><span class=\"line\">/** Plugin DSL : https://github.com/bintray/gradle-bintray-plugin#readme  **/</span><br><span class=\"line\">/***************************************************************************/</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * bintray &#123;</span><br><span class=\"line\"> *     user = &apos;bintray_user&apos;</span><br><span class=\"line\"> *     key = &apos;bintray_api_key&apos;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *     configurations = [&apos;deployables&apos;] //When uploading configuration files</span><br><span class=\"line\"> *     // - OR -</span><br><span class=\"line\"> *     publications = [&apos;mavenStuff&apos;] //When uploading Maven-based publication files</span><br><span class=\"line\"> *     // - AND/OR -</span><br><span class=\"line\"> *     filesSpec &#123; //When uploading any arbitrary files (&apos;filesSpec&apos; is a standard Gradle CopySpec)</span><br><span class=\"line\"> *         from &apos;arbitrary-files&apos;</span><br><span class=\"line\"> *         into &apos;standalone_files/level1&apos;</span><br><span class=\"line\"> *         rename &apos;(.+)\\\\.(.+)&apos;, &apos;$1-suffix.$2&apos;</span><br><span class=\"line\"> *     &#125;</span><br><span class=\"line\"> *     dryRun = false //[Default: false] Whether to run this as dry-run, without deploying</span><br><span class=\"line\"> *     publish = true //[Default: false] Whether version should be auto published after an upload</span><br><span class=\"line\"> *     override = false //[Default: false] Whether to override version artifacts already published</span><br><span class=\"line\"> *     //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there&apos;s no need to configure the other package properties (like userOrg, desc, etc).</span><br><span class=\"line\"> *     pkg &#123;</span><br><span class=\"line\"> *         repo = &apos;myrepo&apos;</span><br><span class=\"line\"> *         name = &apos;mypkg&apos;</span><br><span class=\"line\"> *         userOrg = &apos;myorg&apos; //An optional organization name when the repo belongs to one of the user&apos;s orgs</span><br><span class=\"line\"> *         desc = &apos;what a fantastic package indeed!&apos;</span><br><span class=\"line\"> *         websiteUrl = &apos;https://github.com/bintray/gradle-bintray-plugin&apos;</span><br><span class=\"line\"> *         issueTrackerUrl = &apos;https://github.com/bintray/gradle-bintray-plugin/issues&apos;</span><br><span class=\"line\"> *         vcsUrl = &apos;https://github.com/bintray/gradle-bintray-plugin.git&apos;</span><br><span class=\"line\"> *         licenses = [&apos;Apache-2.0&apos;]</span><br><span class=\"line\"> *         labels = [&apos;gear&apos;, &apos;gore&apos;, &apos;gorilla&apos;]</span><br><span class=\"line\"> *         publicDownloadNumbers = true</span><br><span class=\"line\"> *         attributes= [&apos;a&apos;: [&apos;ay1&apos;, &apos;ay2&apos;], &apos;b&apos;: [&apos;bee&apos;], c: &apos;cee&apos;] //Optional package-level attributes</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *         githubRepo = &apos;bintray/gradle-bintray-plugin&apos; //Optional Github repository</span><br><span class=\"line\"> *         githubReleaseNotesFile = &apos;README.md&apos; //Optional Github readme file</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *         //Optional Debian details</span><br><span class=\"line\"> *         debn &#123;</span><br><span class=\"line\"> *             distribution = &apos;squeeze&apos;</span><br><span class=\"line\"> *             component = &apos;main&apos;</span><br><span class=\"line\"> *             architecture = &apos;i386,noarch,amd64&apos;</span><br><span class=\"line\"> *         &#125;</span><br><span class=\"line\"> *         //Optional version descriptor</span><br><span class=\"line\"> *         version &#123;</span><br><span class=\"line\"> *             name = &apos;1.3-Final&apos; //Bintray logical version name</span><br><span class=\"line\"> *             desc = //Optional - Version-specific description&apos;</span><br><span class=\"line\"> *             released  = //Optional - Date of the version release. 2 possible values: date in the format of &apos;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZZ&apos; OR a java.util.Date instance</span><br><span class=\"line\"> *             vcsTag = &apos;1.3.0&apos;</span><br><span class=\"line\"> *             attributes = [&apos;gradle-plugin&apos;: &apos;com.use.less:com.use.less.gradle:gradle-useless-plugin&apos;] //Optional version-level attributes</span><br><span class=\"line\"> *             //Optional configuration for GPG signing</span><br><span class=\"line\"> *           gpg &#123;</span><br><span class=\"line\"> *                 sign = true //Determines whether to GPG sign the files. The default is false</span><br><span class=\"line\"> *                 passphrase = &apos;passphrase&apos; //Optional. The passphrase for GPsigning&apos;*             &#125;</span><br><span class=\"line\"> *             //Optional configuration for Maven Central sync of the version</span><br><span class=\"line\"> *           mavenCentralSync &#123;</span><br><span class=\"line\"> *                 sync = true //[Default: true] Determines whether to sync the version to Maven Central.</span><br><span class=\"line\"> *                 user = &apos;userToken&apos; //OSS user token: mandatory</span><br><span class=\"line\"> *                 password = &apos;paasword&apos; //OSS user password: mandatory</span><br><span class=\"line\"> *                 close = &apos;1&apos; //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and releasemuay.*             &#125;</span><br><span class=\"line\"> *         &#125;</span><br><span class=\"line\"> *     &#125;</span><br><span class=\"line\"> * &#125;</span><br><span class=\"line\"> */</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行命令,假设module为：newaarmodule</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew :newaarmodule:clean :newaarmodule:build :newaarmodule:bintrayUpload --stacktrace --info --debug</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"Maven权威指南速查笔记","date":"2018-08-03T10:34:26.000Z","summery":"本文是《Maven权威指南》的书读笔记，抽取出maven最关键的基础知识，帮助初学者快速入门。了解maven是什么，maven能做什么，maven是如何工作的，以及我们在开发中如何利用maven来管理我们的项目。也是一个maven核心备忘录。","_content":"### 参考文档\n\n>1. [Linux命令大全]\n>1. Maven权威指南\n>1. [Maven plugins列表]\n>1. [Maven常用插件]\n\n### Maven关键概念汇总\n\n>1. 插件 Maven Plugin\n>1. 目标 goal 和 目标前缀 goal Prefix\n>1. 坐标(coordinates) 由 groupId，artifactId, packaging, version 共同确定\n>1. 构建生命周期 build Lifecycle\n>1. 生命周期阶段 phase\n>1. 标准目录结构 Maven Standard Directory Layout\n>1. 项目对象模型 Project Object Model\n>1. 约定优于配置 Convention Over Configuration\n>1. Maven仓库 (repositories)\n>1. 依赖管理 (dependency management)\n>1. 使用maven help插件的mvn help:describe来查看其它插件、目标或者命令的描述：\n>>1. mvn help:describe -Dcmd=install\n>>2. mvn help:describe -Dcmd=help:describe\n>>3. mvn help:describe -Dplugin=compiler   <font color=\"#DC524A\">compiler是一个插件</font>\n>>4. mvn help:describe -Dcmd=compile  <font color=\"#DC524A\">compile是compiler插件的一个目标</font>\n>>5. mvn help:describe -Dplugin=comp iler -Dmojo=compile -Dfull\n>>6. mvn help:describe -Dplugin=help \n>>7. mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin\n>>8. mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin\n>>9. 查看help插件的描述: mvn help:describe -Dplugin=help\n>>10. 查看更详细的细节+1: mvn help:describe -Dplugin=help -Dfull\n>>11. 查看更详细的细节+2: mvn help:help -Ddetail=true\n>>12. 查看更详细的细节+2: mvn help:describe -Dplugin=help -Ddetail=true\n>>13. Dmojo指定插件目标：mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull\n>1. \"-D<name>=<value>\"这种格式不是Maven定义的，它其实是Java用来设置系统属性的方式，可以通过“java -help”查看 Java的解释。Maven的bin目录下的脚本文件仅仅是把属性传入Java而已\n>1. 传递性依赖(transitive dependencies)\n>1. 依赖范围(dependency scope) : test、compile、provided\n>1. 站点生成和报告 (Site Generation and Reporting) : mvn site\n>1. Maven Assembly 是一个用来创建你应用程序特有分发包的插件。\n\n### POM.xml标准标签格式, Profile中也可以包含全部这些标签\n\n```\n\t<project>\n\t\t<build>\n\t\t\t<defaultGoal>...</defaultGoal>\n\t\t\t<finalName>...</finalName>\n\t\t\t<resources>...</resources>\n\t\t\t<testResources>...</testResources>\n\t\t\t<plugins>...</plugins>\n\t\t</build>\n\t\t<reporting>...</reporting>\n\t\t<modules>...</modules>\n\t\t<dependencies>...</dependencies>\n\t\t<dependencyManagement>...</dependencyManagement>\n\t\t<distributionManagement>...</distributionManagement>\n\t\t<repositories>...</repositories>\n\t\t<pluginRepositories>...</pluginRepositories>\n\t\t<properties>...</properties>\n\t</project>\n```\n\t\t\n### 相关名称总汇：\n\t\n```\n\tIOC容器：Plexus、Guice、Spring\n\tStruts、Tapesty、Wicket、JSF、Waffle、Hibernate、Velocity\n```\n\t\t\n### 第一章 介绍Apache Maven\n\n### 1.1 Maven是什么？\nMaven是一个构建工具，一个项目管理工具。\n\n像Ant这样的构建工具只关注预处理，编译，打包，测试和分发。Maven不仅关注预处理，编译，打包，测试和分发，还可以生成报告， 生成Web站点，并且帮助推动工作团队成员间的交流。\n\t\n一个更正式的 Apache Maven1 的定义: Maven是一个项目管理工具，它包含了一个项 目对象模型 (Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在 生命周期阶段(phase)中插件(plugin)目标(goal)的逻辑。 当你使用Maven的时候，你 用一个明确定义的项目对象模型来描述你的项目，然后 Maven 可以应用横切的逻辑， 这些逻辑来自一组共享的(或者自定义的)插件\t\t\n\n### 1.2 约定优于配置(Convention Over Configuration)\n在没有自定义的情况下，Maven有如下约定：\n\n1. 源代码假定是在:\n```\n/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/main/java\n```\n1. 资源文件假定是在:\n```\n/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/main/resources\n```\n1. 测试代码假定是在: \n```\n/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/test\n```\n1. 项目假定会产生一个 JAR 文件\n```\n/usr/local/hudson/ hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/target\n```\n2. Maven 假定你想要把编译好的字节码放到:\n```\n/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/target/classes\n```\n1. 当然，只要你遵循Maven的这一约定，几乎不需要做任何配置，就可以结合maven的插件来完成所有事情，但也仍然允许你自定义修改这些约定。\n\n1. Maven的标准约定的目录结构如下：\n\n\t<font color=\"red\">在一个Maven项目中执行 mvn help:effective-pom 可以查看到这些约定被配置在pom.xml中</font>\n\t```\n\t--projectName \t\t\t\t\t\t项目根目录或者module根目录\n\t-----src\n\t---------main\n\t-------------java\t\t\t\t\t源码目录src/main/java\n\t-------------resources\t\t\t\t\t资源目录src/main/resources\n\t-------------scripts\t\t\t\t\t脚本文件src/main/scripts\n\t---------test \t\t\t\t\t\t测试目录src/test\n\t-------------java \t\t\t\t\t测试代码目录src/test/java\n\t-------------resources\t\t\t\t\t测试资源目录src/test/resources\n\t---------site     \t\t\t\t\t站点资源目录src/site\n\t-----target\t\t\t\t\t\t结果目录\n\t---------classes \t\t\t\t\t编译生成class目录target/classes\n\t---------test-classes \t\t\t\t\t编译生成class目录target/test-classes\n\t---------site     \t\t\t\t\t站点资源目录target/site\n\t-----pom.xml  \t\t\t\t\t\tMaven配置文件\n\t```\n1. 多module项目结构如下：\n\n\t```\n\t--projectName \t\t\t\t\t\t项目根目录\n\t\t----module1\t\t\t\t\tmodule1根目录\n\t\t\t------src\t \t\n\t\t\t---------main\n\t\t\t-------------java\t\t\t源码目录\n\t\t\t-------------resources\t\t\t资源目录\n\t\t\t-------------scripts\t\t\t脚本文件\n\t\t\t---------test \t\t\t\t测试目录\n\t\t\t-------------java \t\t\t测试代码目录\n\t\t\t-------------resources\t\t\t测试资源目录\n\t\t\t---------site     \t\t\t站点资源目录\n\t\t\t-----target\t\t\t\t结果目录\n\t\t\t---------classes \t\t\t编译生成class目录\n\t\t\t---------test-classes \t\t\t编译生成class目录\n\t\t\t---------site     \t\t\t站点资源目录\n\t\t\t-----pom.xml  \t\t\t\tmodule1的Maven配置文件\n\t\t----module2\t\t\t\t\tmodule2根目录\n\t\t\t------src\t \t\n\t\t\t---------main\n\t\t\t-------------java\t\t\t源码目录\n\t\t\t-------------resources\t\t\t资源目录\n\t\t\t-------------scripts\t\t\t脚本文件\n\t\t\t---------test \t\t\t\t测试目录\n\t\t\t-------------java \t\t\t测试代码目录\n\t\t\t-------------resources\t\t\t测试资源目录\n\t\t\t---------site     \t\t\t站点资源目录\n\t\t\t-----target\t\t\t\t结果目录\n\t\t\t---------classes \t\t\t编译生成class目录\n\t\t\t---------test-classes \t\t\t编译生成class目录\n\t\t\t---------site     \t\t\t站点资源目录\n\t\t\t-----pom.xml  \t\t  \t\tmodule2的Maven配置文件\n\t   ----pom.xml   \t\t\t\t\tProject的Maven配置文件\n\t```\n1. 典型示例如：\n\t\n\t下面是我从[okhttp官方github]中fork出来准备二次封装okhttp的项目结构:\n\t<!--\n\t![Maven项目目录结构.png](https://app.yinxiang.com/shard/s45/nl/2147483647/50a6fa2c-b7ed-41f6-9702-72ae2ef0b930//res/ae2bc4cb-e0b3-47d6-bbab-fe8ac6a9f244/skitch.png?resizeSmall&width=832)\n\t-->\n\t<!--\n\t![maven项目目录结构.png](https://upload-images.jianshu.io/upload_images/6322932-55587e4642649287.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\t-->\n\t![Maven项目目录结构.png](https://upload-images.jianshu.io/upload_images/6322932-3877cf45ed59a3f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\t\n\t\n### 1.3 统一的构建过程\n\n>统一的标准化构建过程约束，所有使用Maven构建的项目都遵循这一约束，不同的项目，只要都使用Maven来构建，那么，他们的构建逻辑几乎是一样的，不会再像没有Maven的年代，每个项目的构建逻辑都不一致，开发人员需要花额外的时间去理解不同项目不同的构建逻辑。例如：使用Ant构建的每一个项目几乎都拥有自己完全不同与其他项目的构建逻辑，因为，没有约定，构建逻辑完全是自定义的。\n\n<font color=\"red\">现在，你只要签出源码，然后运行: mvn install，你就能构建好这个项目。\n</font>\n\n### 1.4 Maven插件的全局性重用\n\nMaven 的核心其实不做什么实际的事情，除了解析一些 XML 文档，管理生命周期与插 件之外，它什么也不懂。Maven 被设计成将主要的职责委派给一组 Maven 插件，这些 插件可以影响 Maven 生命周期，提供对目标的访问。绝大多数 Maven 的动作发生于 Maven 插件的目标，如编译源码，打包二进制代码，发布站点和其它构建任务。你从 Apache 下载的 Maven 不知道如何打包 WAR 文件，也不知道如何运行单元测试，Maven 大部分的智能是由插件实现的，而插件从 Maven 仓库获得。事实上，第一次你用全新 的 Maven 安装运行诸如 mvn install 命令的时候，它会从中央 Maven 仓库下载大部 分核心 Maven 插件。这不仅仅是一个最小化 Maven 分发包大小的技巧，这种方式更能 让你升级插件以给你项目的构建提高能力。Maven 从远程仓库获取依赖和插件的这一事 实允许了构建逻辑的全局性重用。\n\nSurefire插件：是负责运行单元测试的插件，插件不断更新，支持JUnit3、TestNG、JUnit4；\n\nCompiler插件：负责进行编译，通过jar插件编程jar，通过aar插件生成aar。\n\n还有一些插件生成报告，运行 JRuby 和 Groovy 的代码，以及一 些用来向远程服务器发布站点的插件。而且插件在不断更新，我们只需要更新pom.xml中说引入的插件版本号，就能获得最新的插件功能。\n\nMaven 将一般的构建任务抽象成插件，同时这些 插件得到了很好的维护以及全局的共享，你不需要从头开始自定义你项目的构建系统然 后提供支持。你完全可以从 Maven 插件获益，这些插件有人维护，可以从远程仓库下 载到。这就是基于 Maven 插件的全局性重用。\n\n### 1.5 Maven、Ant、Gradle、Buildr、Nexus以及antlibs和Ivy\n\n<font color=\"red\">我们会很明确的说作为构建的基本技术，Maven 是 Ant 的更好选择。但使用 Maven 还是 Ant 的决定不是非此即彼的，Ant 在复杂的构建中还有它的位置。</font> 如果你目前的构建包含一些高度自定义的过程，或者你已经写了一些 Ant 脚本通过一 种明确的方法完成一个明确的过程，而这种过程不适合 Maven 标准，你仍然可以在 Maven 中用这些脚本。作为一个 Maven 的核心插件， Ant 还是可用的。自定义的插件 可以用 Ant 来实现，Maven 项目可以配置成在生命周期中运行 Ant 的脚本。\n\nAnt 在构建过程方面十分优秀，它是一个<font color=\"red\"><b>基于任务和依赖</b></font>的构建系统。每个任务包含一 组由 XML 编码的指令。有 copy 任务和 javac 任务，以及 jar 任务。在你使用 Ant 的时候，你为 Ant 提供特定的指令以编译和打包你的输出。\n没有诸如 antlibs 和 lvy 等技术的支持(<font color=\"red\">即使有了这些支持技术</font>)，Ant 给人感觉是自定义的程序化构建,配置过于复杂。\n\n一个典型的Ant构建脚本buid.xml：\n\n```\n<project name=\"my-project\" default=\"dist\" basedir=\".\"> \n\t<description>\n\t\tsimple example build file \n\t</description>\n\t<!-- set global properties for this build --> \n\t<property name=\"src\" location=\"src/main/java\"/> \n\t<property name=\"build\" location=\"target/classes\"/> \n\t<property name=\"dist\" location=\"target\"/>\n\t\n\t<target name=\"init\">\n\t\t<!-- Create the time stamp -->\n\t\t<tstamp/>\n\t\t<!-- Create the build directory structure used by compile --> \n\t\t<mkdir dir=\"org.apache.maven.model.Build@d7e661\"/>\n\t</target>\n\t\n\t<target name=\"compile\" depends=\"init\" description=\"compile the source \" >\n\t\t<!-- Compile the java code from ${src} into org.apache.maven.model.Build@d7e661 --> \n\t\t<javac srcdir=\"${src}\" \tdestdir=\"org.apache.maven.model.Build@d7e661\"/> \n\t</target>\n\t\n\t<target name=\"dist\" depends=\"compile\" description=\"generate the distribution\" >\n\t\t<!-- Create the distribution directory --> \n\t\t<mkdir dir=\"${dist}/lib\"/>\n\t<!-- Put everything in org.apache.maven.model.Build@d7e661 into the MyProject-${DSTAMP}.jar -->\n\t\t<jar jarfile=\"${dist}/lib/MyProject-${DSTAMP}.jar\" basedir=\"org.apache.maven.mod \n\t</target>\n\t\t\n\t<target name=\"clean\" description=\"clean up\" >\n\t\t<!-- Delete the org.apache.maven.model.Build@d7e661 and ${dist} directory trees -->\n\t\t<delete dir=\"org.apache.maven.model.Build@d7e661\"/>\n\t\t<delete dir=\"${dist}\"/>\n\t</target>\n</project>\n```\n等价的Maven配置文件pom.xml\n\n```\n<project> \n\t<modelVersion>4.0.0</modelVersion>\n\t<groupId>org.sonatype.mavenbook</groupId> \n\t<artifactId>my-project</artifactId> \n\t<version>1.0</version>\n\t<!-- packaging 默认就是jar类型-->\n\t<packaging>jar</packaging>\n</project>\n```\n\n### 1.6 Maven和Ant比较\n\n|类型|Apache Maven|Apache Ant|\n|----|----|----|\n|约定|Maven 拥有约定，因为你遵循了约定，它已经知道你的源代码在哪里。它把字节码放到 target/classes ，然后在 target 生成一个 JAR 文件|Ant 没有正式的约定如一个一般项目的目录结构，你必须明确的告诉 Ant 哪 里去找源代码，哪里放置输出。随着时间的推移，非正式的约定出现了，但是 它们还没有在产品中模式化|\n|声明和编写|Maven 是声明式的。你需要做的只是创建一个 pom.xml 文件然后将源代码放到默认的目录。Maven 会帮你处理其它的事情|Ant 是程序化的，你必须明确的告诉 Ant 做什么，什么时候做。你必须告诉 它去编译，然后复制，然后压缩|\n|生命周期|Maven 有一个生命周期，当你运行 mvn install 的时候被调用。这条命令告 诉 Maven 执行一系列的有序的步骤，直到到达你指定的生命周期。遍历生命 周期旅途中的一个影响就是，Maven 运行了许多默认的插件目标，这些目标完 成了像编译和创建一个 JAR 文件这样的工作|Ant 没有生命周期，你必须定义目标和目标之间的依赖。你必须手工为每个目 标附上一个任务序列|\n\n\n\n### 第二章 安装和运行Maven\n\n### 2.1 Maven安装和升级\n\t\n\t\t1. 执行 java -version 如果没有输出类似如下内容，则需要下载和安装JDK\n\t\t\tjava version \"1.6.0_02\"\n\t\t\tJava(TM) SE Runtime Environment (build 1.6.0_02-b06)\n\t\t\tJava HotSpot(TM) Client VM (build 1.6.0_02-b06, mixed mode, sharing)\n\t\t2. JDK下载地址：\n\t\t\thttp://www.oracle.com/technetwork/java/javase/downloads/index.html \n\t\t3. Maven下载地址：\n\t\t\thttps://maven.apache.org/download.cgi\n\t\t4. 安装Maven\n\t\t\thttps://maven.apache.org/install.html\n\t\t5. 升级Maven\n\t\t\t只需要删除已经安装的Maven目录，并重新下载，解压缩到相同的目录既可以。\n\t\n### 2.2 Maven全局目录结构\n\t\n\t\tLICENSE.txt\t包含了Apache Maven的软件许可证\n\t\tNOTICE.txt \t包含了一些Maven依赖的类库所需要 的通告及权限\n\t\tREADME.txt \t包含了一些安装指令\n\t\tbin/   \t\t包含了运行Maven的 mvn脚本\n\t\tboot/  \t\t包含了一个负责创建Maven运行所需要的类装载器的JAR文件(classwords-1.1.jar)\n\t\tconf/  \t\t包含了一个全局的settings.xml文件，该文件用 来自定义你机器上Maven的一些行为。\n\t\t\t\t\t但是如果你需要自定义Maven，更通常的做法是覆写 ~/.m2目录下的settings.xml文件，每个用户都有对应的这个目录。\n\t\tlib/   \t\t有了一个包含Maven核心的JAR文件(maven-2.0.9-uber.jar)\n\n### 2.3 用户相关配置和仓库\n\t\n\t\t~/.m2/settings.xml\t该文件包含了用户相关的认证，仓库和其它信息的配置，用来自定义Maven的行为\n\t\t~/.m2/repository/ \t该目录是你本地的仓库。当你从远程Maven仓库下载依赖的时候，Maven在你本地仓库存储了这个依赖的一个副本。\n\t\t\n### 2.4 如何获取Maven帮助\n\n|地址|描述|\n|---|----|\n|<http://maven.apache.org>|你首先应该看看这里，Maven的web站点包含了丰富的信息及文档。每个插件都有 几页的文档，这里还有一系列“快速开始”的文档，它们是本书内容的十分有帮 助的补充。虽然Maven站点包含了大量信息，它同时也可能让你迷惑沮丧。那里 提供了一个自定义的Google搜索框，以用来搜索已有的Maven站点信息，它能比 通用的Google搜索提供更好的结果。|\n|Maven User Mailing List|Maven用户邮件列表是用户问问题的地方。在你问问题之前，你可以先搜索一下 之前的讨论，有可能找到相关问题。问一个已经问过的问题，而不先查一下该问 题是否存在了，这种形式不太好。有很多有用的邮件列表归档浏览器，我们发现 Nabble最有用。你可以在这里浏览邮件列表:http://www.nabble.com/MavenUsers-f178.html。你也可以按照这里的指令来加入用户邮件列表:http:// maven.apache.org/mail-lists.html|\n|http://www.sonatype.com|Sonatype维护了一个本书的在线副本，以及其它Maven相关的指南|\n|<https://maven.apache.org/team-list.html>|Maven开发者邮件列表|\n\n### 2.5 使用Maven help插件\n\nMaven Help 插件有很多目标。通过help插件自己的describe目标可以查看help插件自身的描述。\n\nmvn help:describe -Dplugin=help\n\n|目标|描述|\n|----|----|\n|help:active-profiles|列出当前构建中活动的Profile(项目的，用户的，全局的)|\n|help:all-profiles|Displays a list of available profiles under the current project. Note: it will list all profiles for a project. If a profile comes up with a status inactive then there might be a need to set profile activation switches/property|\n|help:effective-pom|显示当前构建的实际POM，包含活动的Profile|\n|help:effective-settings|打印出项目的实际settings, 包括从全局的settings和用户级别settings继承的配置|\n|help:describe|描述插件的属性。它不需要在项目目录下运行。但是你必须提供你想要描述插件 的 groupId 和 artifactId|\n|help:evaluate|Evaluates Maven expressions given by the user in an interactive mode.|\n|help:help|Description: Display help information on maven-help-plugin. Call mvn help:help -Ddetail=true -Dgoal=<goal-name> to display parameter details|\n|help:system|Displays a list of the platform details like system properties and environment variables.|\n\n\n>1. 使用Maven help插件的mvn help:describe来查看其它插件、目标或者命令的描述：\n>9. mvn help:describe -Dcmd=install\n>10. mvn help:describe -Dcmd=help:describe\n>11. mvn help:describe -Dplugin=compiler   compiler是一个插件\n>12. mvn help:describe -Dcmd=compile       compile是compiler插件的一个目标\n>13. mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull\n>14. mvn help:describe -Dplugin=help\n>15. mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin\n>16. mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin\n>17. 查看help插件的描述: mvn help:describe -Dplugin=help\n>18. 查看更详细的细节+1: mvn help:describe -Dplugin=help -Dfull\n>19. 查看更详细的细节+2: mvn help:help -Ddetail=true\n>20. 查看更详细的细节+2: mvn help:describe -Dplugin=help -Ddetail=true\n>1. Dmojo指定插件目标：mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull\n\n1. 在maven-archetype-quickstart项目中执行 mvn help:effective-pom 可以查看到实际pom中内容如下：\n\n```\n\t\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t\t<!-- ====================================================================== -->\n\t\t<!--                                                                        -->\n\t\t<!-- Generated by Maven Help Plugin on 2018-05-16T23:17:54+08:00            -->\n\t\t<!-- See: http://maven.apache.org/plugins/maven-help-plugin/                -->\n\t\t<!--                                                                        -->\n\t\t<!-- ====================================================================== -->\n\t\t<!-- ====================================================================== -->\n\t\t<!--                                                                        -->\n\t\t<!-- Effective POM for project                                              -->\n\t\t<!-- 'com.silence:maven-archetype-quickstart:jar:0.0.1-SNAPSHOT'            -->\n\t\t<!--                                                                        -->\n\t\t<!-- ====================================================================== -->\n\t\t<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t\t  <modelVersion>4.0.0</modelVersion>\n\t\t  <groupId>com.silence</groupId>\n\t\t  <artifactId>maven-archetype-quickstart</artifactId>\n\t\t  <version>0.0.1-SNAPSHOT</version>\n\t\t  <name>maven-archetype-quickstart</name>\n\t\t  <url>http://www.example.com</url>\n\t\t  <properties>\n\t\t    <maven.compiler.source>1.7</maven.compiler.source>\n\t\t    <maven.compiler.target>1.7</maven.compiler.target>\n\t\t    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t  </properties>\n\t\t  <dependencies>\n\t\t    <dependency>\n\t\t      <groupId>junit</groupId>\n\t\t      <artifactId>junit</artifactId>\n\t\t      <version>4.11</version>\n\t\t      <scope>test</scope>\n\t\t    </dependency>\n\t\t  </dependencies>\n\t\t  <repositories>\n\t\t    <repository>\n\t\t      <snapshots>\n\t\t        <enabled>false</enabled>\n\t\t      </snapshots>\n\t\t      <id>central</id>\n\t\t      <name>Central Repository</name>\n\t\t      <url>https://repo.maven.apache.org/maven2</url>\n\t\t    </repository>\n\t\t  </repositories>\n\t\t  <pluginRepositories>\n\t\t    <pluginRepository>\n\t\t      <releases>\n\t\t        <updatePolicy>never</updatePolicy>\n\t\t      </releases>\n\t\t      <snapshots>\n\t\t        <enabled>false</enabled>\n\t\t      </snapshots>\n\t\t      <id>central</id>\n\t\t      <name>Central Repository</name>\n\t\t      <url>https://repo.maven.apache.org/maven2</url>\n\t\t    </pluginRepository>\n\t\t  </pluginRepositories>\n\t\t  <build>\n\t\t    <sourceDirectory>/environment/myeclipse/maven-archetype-quickstart/src/main/java</sourceDirectory>\n\t\t    <scriptSourceDirectory>/environment/myeclipse/maven-archetype-quickstart/src/main/scripts</scriptSourceDirectory>\n\t\t    <testSourceDirectory>/environment/myeclipse/maven-archetype-quickstart/src/test/java</testSourceDirectory>\n\t\t    <outputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/classes</outputDirectory>\n\t\t    <testOutputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/test-classes</testOutputDirectory>\n\t\t    <resources>\n\t\t      <resource>\n\t\t        <directory>/environment/myeclipse/maven-archetype-quickstart/src/main/resources</directory>\n\t\t      </resource>\n\t\t    </resources>\n\t\t    <testResources>\n\t\t      <testResource>\n\t\t        <directory>/environment/myeclipse/maven-archetype-quickstart/src/test/resources</directory>\n\t\t      </testResource>\n\t\t    </testResources>\n\t\t    <directory>/environment/myeclipse/maven-archetype-quickstart/target</directory>\n\t\t    <finalName>maven-archetype-quickstart-0.0.1-SNAPSHOT</finalName>\n\t\t    <pluginManagement>\n\t\t      <plugins>\n\t\t        <plugin>\n\t\t          <artifactId>maven-antrun-plugin</artifactId>\n\t\t          <version>1.3</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-assembly-plugin</artifactId>\n\t\t          <version>2.2-beta-5</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-dependency-plugin</artifactId>\n\t\t          <version>2.8</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-release-plugin</artifactId>\n\t\t          <version>2.3.2</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-clean-plugin</artifactId>\n\t\t          <version>3.0.0</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-resources-plugin</artifactId>\n\t\t          <version>3.0.2</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-compiler-plugin</artifactId>\n\t\t          <version>3.7.0</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-surefire-plugin</artifactId>\n\t\t          <version>2.20.1</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-jar-plugin</artifactId>\n\t\t          <version>3.0.2</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-install-plugin</artifactId>\n\t\t          <version>2.5.2</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-deploy-plugin</artifactId>\n\t\t          <version>2.8.2</version>\n\t\t        </plugin>\n\t\t      </plugins>\n\t\t    </pluginManagement>\n\t\t    <plugins>\n\t\t      <plugin>\n\t\t        <artifactId>maven-clean-plugin</artifactId>\n\t\t        <version>3.0.0</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-clean</id>\n\t\t            <phase>clean</phase>\n\t\t            <goals>\n\t\t              <goal>clean</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-install-plugin</artifactId>\n\t\t        <version>2.5.2</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-install</id>\n\t\t            <phase>install</phase>\n\t\t            <goals>\n\t\t              <goal>install</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-resources-plugin</artifactId>\n\t\t        <version>3.0.2</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-resources</id>\n\t\t            <phase>process-resources</phase>\n\t\t            <goals>\n\t\t              <goal>resources</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t          <execution>\n\t\t            <id>default-testResources</id>\n\t\t            <phase>process-test-resources</phase>\n\t\t            <goals>\n\t\t              <goal>testResources</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-surefire-plugin</artifactId>\n\t\t        <version>2.20.1</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-test</id>\n\t\t            <phase>test</phase>\n\t\t            <goals>\n\t\t              <goal>test</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-compiler-plugin</artifactId>\n\t\t        <version>3.7.0</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-testCompile</id>\n\t\t            <phase>test-compile</phase>\n\t\t            <goals>\n\t\t              <goal>testCompile</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t          <execution>\n\t\t            <id>default-compile</id>\n\t\t            <phase>compile</phase>\n\t\t            <goals>\n\t\t              <goal>compile</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-jar-plugin</artifactId>\n\t\t        <version>3.0.2</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-jar</id>\n\t\t            <phase>package</phase>\n\t\t            <goals>\n\t\t              <goal>jar</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-deploy-plugin</artifactId>\n\t\t        <version>2.8.2</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-deploy</id>\n\t\t            <phase>deploy</phase>\n\t\t            <goals>\n\t\t              <goal>deploy</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-site-plugin</artifactId>\n\t\t        <version>3.3</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-site</id>\n\t\t            <phase>site</phase>\n\t\t            <goals>\n\t\t              <goal>site</goal>\n\t\t            </goals>\n\t\t            <configuration>\n\t\t              <outputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/site</outputDirectory>\n\t\t              <reportPlugins>\n\t\t                <reportPlugin>\n\t\t                  <groupId>org.apache.maven.plugins</groupId>\n\t\t                  <artifactId>maven-project-info-reports-plugin</artifactId>\n\t\t                </reportPlugin>\n\t\t              </reportPlugins>\n\t\t            </configuration>\n\t\t          </execution>\n\t\t          <execution>\n\t\t            <id>default-deploy</id>\n\t\t            <phase>site-deploy</phase>\n\t\t            <goals>\n\t\t              <goal>deploy</goal>\n\t\t            </goals>\n\t\t            <configuration>\n\t\t              <outputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/site</outputDirectory>\n\t\t              <reportPlugins>\n\t\t                <reportPlugin>\n\t\t                  <groupId>org.apache.maven.plugins</groupId>\n\t\t                  <artifactId>maven-project-info-reports-plugin</artifactId>\n\t\t                </reportPlugin>\n\t\t              </reportPlugins>\n\t\t            </configuration>\n\t\t          </execution>\n\t\t        </executions>\n\t\t        <configuration>\n\t\t          <outputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/site</outputDirectory>\n\t\t          <reportPlugins>\n\t\t            <reportPlugin>\n\t\t              <groupId>org.apache.maven.plugins</groupId>\n\t\t              <artifactId>maven-project-info-reports-plugin</artifactId>\n\t\t            </reportPlugin>\n\t\t          </reportPlugins>\n\t\t        </configuration>\n\t\t      </plugin>\n\t\t    </plugins>\n\t\t  </build>\n\t\t  <reporting>\n\t\t    <outputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/site</outputDirectory>\n\t\t  </reporting>\n\t\t</project>\n```\n2. 在maven-archetype-quickstart项目中执行 mvn help:effective-settings 可以查看到实际pom中内容如下:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- ====================================================================== -->\n<!--                                                                        -->\n<!-- Generated by Maven Help Plugin on 2018-05-16T23:35:31+08:00            -->\n<!-- See: http://maven.apache.org/plugins/maven-help-plugin/                -->\n<!--                                                                        -->\n<!-- ====================================================================== -->\n<!-- ====================================================================== -->\n<!--                                                                        -->\n<!-- Effective Settings for 'violet' on 'yexiaochaideMacBook-Pro.local'     -->\n<!--                                                                        -->\n<!-- ====================================================================== -->\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd\">\n  <localRepository>/Users/violet/.m2/repository</localRepository>\n  <pluginGroups>\n    <pluginGroup>org.apache.maven.plugins</pluginGroup>\n    <pluginGroup>org.codehaus.mojo</pluginGroup>\n  </pluginGroups>\n</settings>\n```\n3. 执行mvn help:describe得到以下错误信息，显示了正确的使用方法。\n\n```\n\t\t[ERROR] Failed to execute goal org.apache.maven.plugins:maven-help-plugin:3.0.1:describe (default-cli) on project maven-archetype-quickstart: You must specify either: both 'groupId' and 'artifactId' parameters OR a 'plugin' parameter OR a 'cmd' parameter. For instance:\n\t\t[ERROR]   # mvn help:describe -Dcmd=install\n\t\t[ERROR] or\n\t\t[ERROR]   # mvn help:describe -Dcmd=help:describe\n\t\t[ERROR] or\n\t\t[ERROR]   # mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin\n\t\t[ERROR] or\n\t\t[ERROR]   # mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin\n\t\t[ERROR] \n\t\t[ERROR] Try 'mvn help:help -Ddetail=true' for more information.\n```\n\t\t\t\t\n4. 执行mvn help:describe -Dcmd=install 显示结果如下：\n\n```\t\t\n\t\tmvn help:describe -Dcmd=install\n\t\t\n\t\t[INFO] Scanning for projects...\n\t\t[INFO] \n\t\t[INFO] ------------------------------------------------------------------------\n\t\t[INFO] Building maven-archetype-quickstart 0.0.1-SNAPSHOT\n\t\t[INFO] ------------------------------------------------------------------------\n\t\t[INFO] \n\t\t[INFO] --- maven-help-plugin:3.0.1:describe (default-cli) @ maven-archetype-quickstart ---\n\t\t[INFO] 'install' is a phase corresponding to this plugin:\n\t\torg.apache.maven.plugins:maven-install-plugin:2.4:install\n\t\t\n\t\tIt is a part of the lifecycle for the POM packaging 'jar'. This lifecycle includes the following phases:\n\t\t* validate: Not defined\n\t\t* initialize: Not defined\n\t\t* generate-sources: Not defined\n\t\t* process-sources: Not defined\n\t\t* generate-resources: Not defined\n\t\t* process-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:resources\n\t\t* compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:compile\n\t\t* process-classes: Not defined\n\t\t* generate-test-sources: Not defined\n\t\t* process-test-sources: Not defined\n\t\t* generate-test-resources: Not defined\n\t\t* process-test-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:testResources\n\t\t* test-compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile\n\t\t* process-test-classes: Not defined\n\t\t* test: org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test\n\t\t* prepare-package: Not defined\n\t\t* package: org.apache.maven.plugins:maven-jar-plugin:2.4:jar\n\t\t* pre-integration-test: Not defined\n\t\t* integration-test: Not defined\n\t\t* post-integration-test: Not defined\n\t\t* verify: Not defined\n\t\t* install: org.apache.maven.plugins:maven-install-plugin:2.4:install\n\t\t* deploy: org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy\n```\n\n\n\n\n### 2.6 由上可知\\<packaging\\>jar\\</packaging\\>的生命周期如下：\n\n\t\t* validate: Not defined\n\t\t* initialize: Not defined\n\t\t* generate-sources: Not defined\n\t\t* process-sources: Not defined\n\t\t* generate-resources: Not defined\n\t\t* process-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:resources\n\t\t* compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:compile\n\t\t* process-classes: Not defined\n\t\t* generate-test-sources: Not defined\n\t\t* process-test-sources: Not defined\n\t\t* generate-test-resources: Not defined\n\t\t* process-test-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:testResources\n\t\t* test-compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile\n\t\t* process-test-classes: Not defined\n\t\t* test: org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test\n\t\t* prepare-package: Not defined\n\t\t* package: org.apache.maven.plugins:maven-jar-plugin:2.4:jar\n\t\t* pre-integration-test: Not defined\n\t\t* integration-test: Not defined\n\t\t* post-integration-test: Not defined\n\t\t* verify: Not defined\n\t\t* install: org.apache.maven.plugins:maven-install-plugin:2.4:install\n\t\t* deploy: org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy\n\n### 第三章 一个简单的Maven项目\n\n### 3.1 规则\n>1. 当提到一个插件目标的时候，我们常常用速记符号:pluginId:goalId。 例如，当提到Archetype插件的create目标的时候，我们写 成archetype:create\n\n### 3.2 使用archetype:generate创建Maven框架项目\n\t\t\n>1. <del>mvn archetype:create</del> 方式已经过时\n>1. mvn archetype:generate 现在，使用generate选择适合模板来创建项目\n>1. mvn help:effective-pom 查看完成的pom.xml\n\n### 3.3 传递性依赖(transitive dependencies)\n\t\t\n让我们看一下你运行前面的样例的时候那些下载到你本地仓库的依赖。看一下这个目 录:~/.m2/repository/junit/junit/3.8.1/。如果你一直跟着本章的样例，那么这里会 有文件junit-3.8.1.jar 和junit-3.8.1.pom，还有Maven用来验证已下载构件准确性的 校验和文件。需要注意的是Maven不只是下载JUnit的JAR文件，它同时为这个JUnit依赖 下载了一个POM文件。Maven同时下载构件和POM文件的这种行为，对Maven支持传递性依 赖来说非常重要。\n\n### 3.4 依赖范围(dependency scope)\n\n\ttest、compile、provided\n\nSimple项目的pom.xml包含了 一个依赖——junit:junit:jar:3.8.1——范围是test。当一个依赖的范围是test的 时候，说明它在Compiler插件运行compile目标的时候是不可用的。它只有在运 行compiler:testCompile和surefire:test目标的时候才会被加入到classpath中。\n\n你也可以配置Maven，使用provided范围，让它排除WAR文件中特定的依赖。provided范 围告诉Maven一个依赖在编译的时候需要，但是它不应该被捆绑在构建的输出中。当你 开发web应用的时候provided范围变得十分有用，你需要通过Servlet API来编译你的代 码，但是你不希望Servlet API的JAR文件包含在你web应用的WEB-INF/lib目录中\n\n### 3.5 站点生成和报告 (Site Generation and Reporting)\n\n\tmvn site\n\n这将会运行site生命周期阶段。它不像默认生命周期那样，管理代码生成，操作资源， 编译，打包等等。Site生命周期只关心处理在src/site目录下的site内容，还有生成 报告。在这个命令运行过之后，你将会在target/site目录下看到一个项目web站点。载 入target/site/index.html你会看到项目站点的基本外貌\n\n### 3.6 定制站点报告\\<reporting\\>\\</reporting\\>\n```\n报告配置在<reporting></reporting>下，而插件配置在<plugins></plugins>下\n\t\nClover报告：\t检查单元测试覆盖率\nJXR报告：\t\t生成HTML源代码相互间引用，这在代码审查的时候非常有用\nPMD报告：\t\t告针对各种编码问题来分析源代码\nJDepend报告：\t分析源代码中各个包之间的依赖\n```\nMaven提供了很完整的可配置的报告，像Clover报告检 查单元测试覆盖率，JXR报告生成HTML源代码相互间引用，这在代码审查的时候非常有 用，PMD报告针对各种编码问题来分析源代码，JDepend报告分析源代码中各个包之间的 依赖。通过在pom.xml中配置那些报告被包含在构建中，站点报告就可以被定制了。\n\t\t\n### 第四章 定制一个Maven项目\n\n[Maven simple-weather示例项目Git地址]\n```\nsimple-weather相关依赖：\n\t\nLog4j\nDom4j\nJaxen\nVelocity\nMaven Exec 插件 ：  $ mvn help:describe -Dplugin=exec -Dfull\n```\n### 4.1 查看Maven项目依赖\n\n```\n1. mvn dependency:resolve\n\t\n2. mvn dependency:tree 查看依赖关系树\n\t\n3. mvn install -X  查看完整的依赖踪迹，包含那些因为冲突或者其它原因而被 拒绝引入的构件，打开 Maven 的调试标记运行\n```\n### 4.2 添加测试范围依赖\n\n```\n<project> \n \t...\n\t<dependencies> \n\t\t...\n\t\t<dependency> \n\t\t\t<groupId>org.apache.commons</groupId> \n\t\t\t<artifactId>commons-io</artifactId> \n\t\t\t<version>1.3.2</version> \n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t... \n\t</dependencies>\n</project>\n```\t\n\n### 4.3 添加单元测试资源\n\n一个单元测试需要访问针对测试的一组资源。 通常你需要在测试 classpath 中 存储一些包含期望结果的文件，以及包含模拟输入的文件。 在本项目中，我们为 YahooParserTest 准备了一个名为 ny-weather.xml 的测试 XML 文档，还有一个名为 format-expected.dat 的文件，包含了 WeatherFormatter 的期望输出。format-expected.dat文件内容如下：\n\t\n\t*********************************\n\t Current Weather Conditions for:\n\t  New York, NY, US\n\t  \n\t Temperature: 39\n\t   Condition: Fair\n\t    Humidity: 67\n\t  Wind Chill: 39\n\t*********************************\n\n预先设定了所有值，判断获取到的数据经过Velocity模板格式化之后是否和预期一致。\n\n### 4.4 执行单元测试\n\n\t1. mvn test\n\t\n\t2. 忽略测试失败：<testFailureIgnore>true</testFailureIgnore> \n\t\t<project> \n\t\t\t[...]\n\t\t\t<build> \n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin> \n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId> \n\t\t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId> \n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<testFailureIgnore>true</testFailureIgnore> \n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin> \n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t\t[...] \n\t\t</project>\n\t\n\t3. 命令行动态设置忽略测试失败：\n\tmvn test -Dmaven.test.failure.ignore=true\n\t\n\t4. 当项目的单元测试十分耗时的时候，并不是每一次执行install都需要执行单元测试的，所以我们可以设置跳过单元测试来节约时间。\n\t\t<project> \n\t\t\t[...]\n\t\t\t<build> \n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin> \n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId> \n\t\t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<skip>true</skip> \n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin> \n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t\t[...] \n\t\t</project>\n\n\t或者命令行动态设置：\n\tmvn install -Dmaven.test.skip=true\n\n### 4.5 使用Maven Assembly 插件制作软件分发包\n\t\n\t配置Maven Assembly插件：\n\t\t<project> \n\t\t\t[...]\n\t\t\t<build> \n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin> \n\t\t\t\t\t\t<artifactId>maven-assembly-plugin</artifactId>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<descriptorRefs> \n\t\t\t\t\t\t\t\t\t<descriptorRef>jar-with-dependencies</descriptorRef>\n\t\t\t\t\t\t\t</descriptorRefs> \n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin> \n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t\t[...] \n\t\t</project>\n\t\n\t如上配置好Assembly插件后，可以通过如下命令来构建：\n\tmvn install assembly:assembly\n\n\n### 第五章 一个简单的Web应用\n\n[Maven simple-weather示例项目Git地址]\n\n### 5.1 创建web应用\n\n\tmvn archetype:generate\n\t在列出的模板中选择需要的，输入数字编号。\n\n\tpom.xml文件中最根本的区别在于：\n\t<packaging>war</packaging>\n\n### 5.2 Servlet容器Jetty插件配置使用\n\n\t1. 配置Jetty插件\n\t<project> \n\t\t[...]\n\t\t<build> \n\t\t\t<finalName>simple-webapp</finalName> \n\t\t\t<plugins>\n\t\t\t\t<plugin> \n\t\t\t\t\t<groupId>org.mortbay.jetty</groupId> \n\t\t\t\t\t<artifactId>maven-jetty-plugin</artifactId>\n\t\t\t\t</plugin> \n\t\t\t</plugins>\n\t\t</build>\n\t\t[...] \n\t</project>\n\t\n\t2. 启动Jetty服务器\n\tmvn jetty:run\n\t\n### 5.3 创建和配置Servlet程序\n\n为了把servlet 添加到你的 web 应用，并且使其与请求路径匹配， 需要添加如下的 servlet 和 servlet-mapping 元素至你项目的 web.xml 文件。 文件 web.xml 可以在目录 src/main/webapp/WEB-INF 中找到。\n\t\t\n\t<!DOCTYPE web-app PUBLIC\n\t\"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\" \"http://java.sun.com/dtd/web-app_2_3.dtd\" >\n\t<web-app>\n\t\t<display-name>Archetype Created Web Application</display-name> \n\t\t<servlet>\n\t\t\t<servlet-name>simple</servlet-name>\n\t\t\t<servlet-class>org.sonatype.mavenbook.web.SimpleServlet</servlet-class> \t\n\t\t</servlet>\n\t\t<servlet-mapping>\n\t\t\t<servlet-name>simple</servlet-name>\n\t\t\t<url-pattern>/simple</url-pattern> \n\t\t</servlet-mapping>\n\t</web-app>\n\n### 5.4 添加Servlet API支持\n\n\t到目前为止，直接执行：mvn compile 会失败，因为我们还没有为web项目添加Servlet支持。\n\t\n为了编写一个 servlet ，我们需要添加 Servlet API 作为项目依赖。 Servlet 规格说明是一个 JAR 文件，它能从 Sun Microsystems 的站点下载到 http:// java.sun.com/products/servlet/download.html 。JAR 文件下载好之后你需要把它 安装到位于 ~/.m2/repository 的 Maven 本地仓库。你必须为所有 Sun Microsystems 维护的 J2EE API 重复同样的过程，包括 JNDI， JDBC， Servlet， JSP， JTA， 以 及其它。 如果你不想这么做因为觉得这样太无聊了，其实不只有你这么认为。 幸 运的是，有一种更简单的方法来下载所有这些类库并安装到本地仓库 —— Apache Geronimo 的独立的开源实现。\n\n添加像 JSP API 或者 Servlet API 这样的依赖现在很简单明了了，不再需要你从 web 站点手工下载 JAR 文件然后再安装到本地仓库。 关键是你必须知道去哪里找，使用 什么 groupId， artifactId， 和 version 来引用恰当的 Apache Geronimo 实现。给 pom.xml 添加如下的依赖元素以添加对 Servlet 规格说明 API 的依赖。.\n\n\t添加 Servlet 2.4 规格说明作为依赖：\n\t（你必须看一下Maven 的公共仓库来决定使用什么版本。 最好使用某个规格说明实现的最新版本）\n\t<project> \n\t\t[...]\n\t\t<dependencies> \n\t\t\t[...]\n\t\t\t<dependency> \n\t\t\t\t<groupId>org.apache.geronimo.specs</groupId>\n\t\t\t\t<artifactId>geronimo-servlet_2.4_spec</artifactId>\n\t\t\t\t<version>1.1.1</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency> \n\t\t</dependencies> \n\t\t[...]\n\t</project>\n\n如果你对在这个简单 web 应用编写自定义 JSP 标签感兴趣，你将需要添加对 JSP 2.0 规格说明的依赖。 使用以下配置来加入这个依赖。\n\n\t<project> \n\t\t[...]\n\t\t<dependencies> \n\t\t\t[...]\n\t\t\t<dependency> \n\t\t\t\t<groupId>org.apache.geronimo.specs</groupId>\n\t\t\t\t<artifactId>geronimo-jsp_2.0_spec</artifactId>\n\t\t\t\t<version>1.1</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\t\t</dependencies>\n\t\t[...]\n\t</project>\n\n### 5.6 运行Servlet\n\n在添加好这个 Servlet 规格说明依赖之后，运行 mvn clean install ，然后运行 mvn jetty:run\n\t\n\t\tmvn clean install\n\t\tmvn jetty:run\n\t\t\n命令行访问index.html页面，查看控制台输出：\n\n\t\tcurl http://localhost:8080/simple-webapp/simple\n\n\n### 第六章 一个多模块项目\n\n[Maven simple-weather示例项目Git地址]    \n\n[The Definitive Guide]\n\n### 6.1 多模块项目结构图父POM\n一个多模块项目通过一个父POM引用一个或多个子模块来定义，并且\\<packaging>pom\\</packaging>。如下所示：\n\t\n\t<project xmlns=\"http://maven.apache.org/POM/4.0.0\" \n\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n\t\t\t\t\t\t\thttp://maven.apache.org/maven-v4_0_0.xsd\"> \n\t\t<modelVersion>4.0.0</modelVersion>\n\t\t<groupId>org.sonatype.mavenbook.ch06</groupId>\n\t\t<artifactId>simple-parent</artifactId>\n\t\t<packaging>pom</packaging>\n\t\t<version>1.0</version>\n\t\t<name>Chapter 6 Simple Parent Project</name>\n\t\t\n\t\t<modules> \n\t\t\t<module>simple-weather</module> \n\t\t\t<module>simple-webapp</module>\n\t\t</modules>\n\t\t<build> \n\t\t\t<pluginManagement>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<source>1.5</source>\n\t\t\t\t\t\t\t<target>1.5</target>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</pluginManagement>\n\t\t</build>\n\t\t<dependencies> \n\t\t\t<dependency>\n\t\t\t\t<groupId>junit</groupId>\n\t\t\t\t<artifactId>junit</artifactId>\n\t\t\t\t<version>3.8.1</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\t\t</dependencies>\n\t</project>\n\n注意simple-parent定义了一组Maven坐 标:groupId是org.sonatype.mavenbook，artifactId是simple-parent，version是1.0。 这个父项目不像之前的项目那样创建一个JAR或者一个WAR，它仅仅是一个引用其它 Maven项目的POM。像simple-parent这样仅仅提供项目对象模型的项目，正确的的打包 类型是pom。pom.xml中下一部分列出了项目的子模块。这些模块在modules元素中定义， 每个modules元素对应了一个simple-parent/目录下的子目录。Maven知道去这些子目录 寻找pom.xml文件，并且，在构建的simp-parent的时候，它会将这些子模块包含到要构 建的项目中。\n\n最后，我们定义了一些将会被所有子模块继承的设置。simple-parent的build部 分配置了所有Java编译的目标是Java 5 JVM。因为compiler插件默认绑定到了生 命周期，我们就可以使用pluginManagement部分来配置。我们将会在后面的章节 详细讨论pluginManagement，区分为默认的插件提供配置和真正的绑定插件是很 容易的。dependencies元素将JUnit 3.8.1添加为一个全局的依赖。build配置和 dependencies都会被所有的子模块继承。使用POM继承允许你添加一些全局的依赖如 JUnit和Log4J。\n\n### 6.2 子POM\n\t\n\t每个子pom都需要定义\\<parent>标签，值全部一样。\n\t\n\t<parent>\n\t    <groupId>org.sonatype.mavenbook.optimize</groupId>\n\t    <artifactId>simple-parent</artifactId>\n\t    <version>1.0-SNAPSHOT</version>\n  \t</parent>\n\n### 6.3 构建多模块项目\n\n\t在parent-project中执行：\n\tmvn clean install\n\n### 6.4 运行多模块项目\n\t\n\t在parent-project中执行：\n\tmvn jetty:run\n\nJetty启动之后，在浏览器载入形如：http://localhost:8080/simple-webapp/weather? zip=01201，你应该看到格式化的天气输出.\n\t\n当Maven执行一个带有子模块的项目的时候，Maven首先载入父POM，然后定位所有的子 模块POM。Maven然后将所有这些项目的POM放入到一个称为Maven 反应堆(Reactor)的 东西中，由它负责分析模块之间的依赖关系。这个反应堆处理组件的排序，以确保相互 独立的模块能以适当的顺序被编译和安装。\n\n\t\n### 第七章 多模块企业级项目\n\n[Maven simple-weather示例项目Git地址]    \n\n![Maven多模块项目结构图](http://book.huihoo.com/maven-the-definitive-guide/multimodule-web-spring_projects.png)\n\n### 7.1 Hibernate项目运行\n\t\n\t1. 首先需要使用Hibernate3插件构造数据库\n\t\tmvn hibernate3:hbm2ddl\n\t2. 运行到web容器\n\t\tmvn jetty:run\n\n### 7.2 运行命令行程序\n\n\t1. 运行Maven Assembly插 件的assembly目标\n\t\tmvn assembly:assembly\n\t2. 调用Hibernate3插件的hbm2ddl目标来创建 HSQLDB数据库\n\t\tmvn hibernate3:hbm2ddl\n\t3. 运行命令行\n\t\tjava -cp target/simple-command-jar-with-dependencies.jar \\ org.sonatype.mavenbook.weather.Main 60202\n\t\t\n### 第八章 优化和重构POM\n\n### 8.1 POM清理，清理重复的内容\n### 8.2 优化依赖，被一个以上的module共同依赖的库，应该统一放入父POM的\\<dependencyManagement\\>中定义，并在这些module中删除依赖的版本\\<version>\\</version\\>\n\t例如， 优化后的父POM如下：\n\t\t<project> \n\t\t\t...\n\t\t\t<dependencyManagement> \n\t\t\t\t<dependencies>\n\t\t\t\t\t<dependency> \n\t\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t\t<artifactId>hibernate-annotations</artifactId>\n\t\t\t\t\t\t<version>3.3.0.ga</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t\t<artifactId>hibernate</artifactId>\n\t\t\t\t\t\t<version>3.3.0.ga</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t</dependencies>\n\t\t\t</dependencyManagement> \t\t\n\t\t\t...\n\t\t<project> \n\t优化后的子POM：\n\t\t<project> \n\t\t\t...\n\t\t\t<dependencies>\n\t\t\t\t<dependency> \n\t\t\t\t\t<groupId> org.hibernate</groupId>\n\t\t\t\t\t<artifactId>hibernate-annotations</artifactId>\n\t\t\t\t</dependency>\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t<artifactId>hibernate-commons-annotations</artifactId>\n\t\t\t\t</dependency>\n\t\t\t</dependencies>\n\t\t\t...\n\t\t<project> \n\t\t\t\t\n### 8.3 可预测的共通发布的相同版本号抽取。例如hibernate和hibernate-annotations的版本号总是相同的。\n\t\t\t<project> \n\t\t\t...\n\t\t\t<properties>\n\t\t\t\t<hibernate.annotations.version>3.3.0.ga<hibernate.annotations.version>\n    \t\t</properties>\n\t\t\t<dependencyManagement> \n\t\t\t\t<dependencies>\n\t\t\t\t\t<dependency> \n\t\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t\t<artifactId>hibernate-annotations</artifactId>\n\t\t\t\t\t\t<version>${hibernate.annotations.version}</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t\t<artifactId>hibernate-commons-annotations</artifactId>\n\t\t\t\t\t\t<version>${hibernate.annotations.version}</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t</dependencies>\n\t\t\t</dependencyManagement> \t\t\n\t\t\t...\n\t\t<project> \n\n### 8.4 解决兄弟module之间的依赖冲突\n\t\n\t1. 方案一：将依赖都抽象到父POM中\n\t2. 方案二：在兄弟目录中，都使用内建属性来动态获取Version。例如：${parent.version}.\n\n为兄弟项目使用内置的项目version和groupId 使用{project.version}和org.sonatype.mavenbook来引用兄弟项目。兄弟项目 基本上一直共享同样的groupId，也基本上一直共享同样的发布版本。使用0.6- SNAPSHOT可以帮你避免前面提到的兄弟版本不一致问题。\n\n### 8.5 优化插件\n\t1. 插件的版本号也可以定义成properties\n\t2. 使用Maven Dependency插件进行优化\n\t\tmvn dependency:analyze\n\t\tmvn dependency:tree\n\n### 第九章 项目对象模型\n![项目对象模型](https://images2015.cnblogs.com/blog/737467/201511/737467-20151101222148700-2134239729.png)\n\t\n\t项目对象模型包含了四类描述和配置：\n\t1. 项目总体信息 General Project Information\n\t2. 构建设置 Build Settings\n\t3. 构建环境 Build Environment\n\t \t构建环境包含了一些能在不同使用环境中激活的profile。例如，在开发过程 中你可能会想要将应用部署到一个而开发服务器上，\n\t \t而在产品环境中你会需要将 应用部署到产品服务器上。构建环境为特定的环境定制了构建设置，\n\t \t通常它还会 由~/.m2中的自定义settings.xml补充。这个settings文件将会在第 11 章\n\t \t构建 Profile中，以及第 A.1 节 “简介中”的附录 A,附录: Settings细节小节中 讨论。\n\t4. POM关系 POM Relationships\n\n### 9.1 超级POM\n\t\n\t超级POM位置：\n\t/usr/local/maven/lib/maven-2.0.9-uber.jar中的包org.apache.maven.project目录下pom-4.0.0.xml\n\t\n### 9.2 项目版本号\nMaven中的版本包含 了以下部分:主版本，次版本，增量版本，和限定版本号\n\n\t版本号格式： <major version>.<minor version>.<incremental version>-<qualifier>\n\n版本“1.3.5”由一个主版本1，一个次版本3，和一个增量版本5。而一个 版本“5”只有主版本5，没有次版本和增量版本。限定版本用来标识里程碑构建: alpha和beta发布，限定版本通过连字符与主版本，次版本或增量版本隔离。例如，版 本“1.3-beta-01”有一个主版本1，次版本3，和一个限定版本“beta-01”\t\n\n当你想要在你的POM中使用版本界限的时候，保持你的版本号与标准一致十分重要。 在第 9.4.3 节 “依赖版本界限”中介绍的版本界限，允许你声明一个带有版本界限的 依赖，只有你遵循标准的时候该功能才被支持。因为Maven根据本节中介绍的版本号格 式来对版本进行排序。\n\n如果你的版本号与格式<主版本>.<次版本>.<增量版本>-<限定版本>相匹配，它就能被 正确的比较;“1.2.3”将被评价成是一个比“1.0.2”更新的构件，这种比较基于主版 本，次版本，和增量版本的数值。如果你的版本发布号没有符合本节介绍的标准，那么 你的版本号只会根据字符串被比较;“1.0.1b”和“1.2.0b”会使用字符串比较。\n\n### 9.3 构建版本号\n\n我们还需要对版本号的限定版本进行排序。以版本号“1.2.3-alpha-2”和“1.2.3- alpha-10”为例，这里“alpha-2”对应了第二次alpha构建，而“alpha-10”对应了第 十次alpha构建。虽然“alpha-10”应该被认为是比“alpha-2”更新的构建，但Maven 排序的结果是“alpha-10”比“alpha-2”更旧，问题的原因就是我们刚才讨论的Maven 处理版本号的方式。\n\nMaven会将限定版本后面的数字认作一个构建版本。换句话说，这里限定版本 是“alpha”，而构建版本是2。虽然Maven被设计成将构建版本和限定版本分离，但 目前这种解析还是失效的。因此，“alpha-2”和“alpha-10”是使用字符串进行比较 的，而根据字母和数字“alpha-10”在“alpha-2”前面。要避开这种限制，你需要对 你的限定版本使用一些技巧。如果你使用“alpha-02”和“alpha-10”，这个问题就消 除了，一旦Maven能正确的解析版本构建号之后，这种工作方式也还是能用。\n\n### 9.4 SNAPSHOT版本\n\t只能用于开发阶段，默认不会从远程仓库查找，但也可以通过设置来允许上传到远程仓库。\n\n### 9.5 LATEST 和 RELEASE 版本\n\t不建议使用，在开发阶段方便，但也可以能因为遗忘疏忽带来意想不到的后果。\n\n### 9.6 变量和属性引用\n\n一、变量引用\n\nMaven提供了三个隐式的变量，可以用来访问环境变量、POM信息和Maven Settings：\n\n1. env \t\t暴露了你操作系统或者shell的环境变量\n2. project\tproject变量暴露了POM。你可以使用点标记(.)的路径来引用POM元素的值。\n\t\t\t\n\t\t例如，在本节中我们使用过groupId和artifactId来设置构建配置 中的finalName元素。\n\t\t这个属性引用的语法是:org.sonatype.mavenbook- ${project.artifactId}\t\n3. settings\t暴露了Maven settings信息。可以使用点标记(.)的路径来引用settings.xml文件中元素的值\n\t\n\t\t例如，${settings.offline}会引用~/.m2/ settings.xml文件中offline元素的值\n\n二、属性引用\n\n除了上面这三个隐式的变量，你还可以引用系统属性，以及任何在Maven POM中和构建\nprofile中自定义的属性组\n\n1. 系统属性\n\t\n\t\tJava系统属性 \n\t\t所有可以通过java.lang.System中getProperties()方法访问的属性都被暴露成POM属性。\n\t\t一些系统属性的例子是:hudson，/home/hudson，/usr/lib/jvm/ java-1.6.0-openjdk-1.6.0.0/jre，\n\t\t和Linux。一个完整的系统属性列表可以 在java.lang.System类的Javadoc中找到。\n\t\t\n\t\t我们还可以通过pom.xml或者settings.xml中的properties元素设置自己的属 性，\n\t\t或者还可以使用外部载入的文件中属性。如果你在pom.xml中设置了一个名 为fooBar的属性，\n\t\t该属性就可以通过${fooBar}引用。当你构建一个系统，它针 对不同的部署环境过滤资源，\n\t\t那么自定义属性就变得十分有用。这里是在POM中 设置${foo}=bar的语法:\n\t\t<properties> \n\t\t\t<foo>bar</foo>\n\t\t</properties>\n\t\n2. Maven POM中自定义的属性组\n3. 构建profile中自定义的属性组\n\n### 9.7 依赖范围\n依赖范围控制哪些依赖在哪些classpath中可用，哪些依赖包含在一个应用中\n\n|依赖范围|描述|代码示例|\n|----|------|----|\n|compile(编译范围)|compile是默认的范围;如果没有提供一个范围，那该依赖的范围就是编译范 围。编译范围依赖在所有的classpath中可用，同时它们也会被打包。|\\<scope>compile\\</scope>|\n|provided(已提供范围)|provided依赖只有在当JDK或者一个容器已提供该依赖之后才使用。例如，如果 你开发了一个web应用，你可能在编译classpath中需要可用的Servlet API来编 译一个servlet，但是你不会想要在打包好的WAR中包含这个Servlet API;这个 Servlet API JAR由你的应用服务器或者servlet容器提供。已提供范围的依赖在 编译classpath(不是运行时)可用。它们不是传递性的，也不会被打包|\\<scope>compile\\</scope>|\n|runtime(运行时范围)|runtime依赖在运行和测试系统的时候需要，但在编译的时候不需要。比如，你 可能在编译的时候只需要JDBC API JAR，而只有在运行的时候才需要JDBC驱动实 现。|\\<scope>compile\\</scope>|\n|test(测试范围)|test范围依赖 在一般的 编译和运行时都不需要，它们只有在测试编译和测试运 行阶段可用。测试范围依赖在之前介绍过|\\<scope>compile\\</scope>|\n|system(系统范围)|system范围依赖与provided类似，但是你必须显式的提供一个对于本地系统中 JAR文件的路径。这么做是为了允许基于本地对象编译，而这些对象是系统类库 的一部分。这样的构件应该是一直可用的，Maven也不会在仓库中去寻找它。如 果你将一个依赖范围设置成系统范围，你必须同时提供一个systemPath元素。注 意该范围是不推荐使用的(你应该一直尽量去从公共或定制的Maven仓库中引用 依赖)|\\<scope>compile\\</scope>|\n||||\n|可选依赖|编译这个项目的时候你需要两个依赖类库EHCache和SwarmCache，但是你不希望在使用你类库的项 目中，这两个依赖类库同时作为传递性运行时依赖出现。<b>在理想的世界中，你不需要使用可选依赖。</b>你可以将EHCache相关的代码放到my- project-ehcache子模块中，将SwarmCache相关的代码放到my-project-swarmcache子模 块中，而非创建一个带有一系列可选依赖的大项目。这样，其它项目就可以只引用特定 实现的项目，发挥传递性依赖的功效，而不用去引用my-project项目，再自己声明特定 的依赖。|\\<dependency><br>\\<groupId>swarmcache\\</groupId> \\<artifactId>swarmcache\\</artifactId><br>\\<version>1.0RC2\\</version><font color=\"red\"><br>\\<optional>true\\</optional></font><br>\\</dependency>|\n\n### 9.8 依赖版本界限\n你并不是必须为依赖声明某个特定的版本，你可以指定一个满足给定依赖的版本界限。\n\n例如，你可以指定你的项目依赖于JUnit的3.8或以上版本，或者说依赖于JUnit 1.2.10 和1.2.14之间的某个版本。你可以使用如下的字符来围绕一个或多个版本号，来实现版 本界限。\n\n|版本界限字符|示例|描述|\n|----|----|----|\n|(,) 不包含量词|(1.2.3,2.5.8)|支持从1.2.3到2.5.8之间的所有版本,开区间|\n|[,] 包含量词|[1.2.3,2.5.8]|支持从1.2.3到2.5.8之间的所有版本,闭区间|\n||[1.2.3,2.5.8)|支持从1.2.3到2.5.8之间的所有版本,左闭右开区间|\n||(1.2.3,2.5.8]|支持从1.2.3到2.5.8之间的所有版本,左开右闭区间|\n||[1.2.3,)|支持所有大于1.2.3的版本|\n||(,2.5.8]|支持所有小于2.5.8的版本|\n||[1.2.3]|只支持1.2.3版本|\n\n### 9.9 传递性依赖和范围\n\n“依赖范围”中提到的每种依赖范围不仅仅影响声明项目中的依赖范围，它也对所传递性依赖起作用。表达该信息最简单的方式是通过一张表来表述：<b>范围如何影响传递性依赖</b>\n\n|直接范围|传递性范围||||\n|----|----|----|----|----|\n||<b>compile</b>|<b>provided</b>|<b>runtime</b>|<b>test</b>|\n|<b>compile</b>|compile|-|runtime|-|\n|<b>provided</b>| provided |provided| provided |-|\n|<b>runtime</b>| runtime |-|runtime|-|\n|<b>test</b>| test |-|test|-|\n\n\tA----compile---->B   B----compile---->C   结果： A---->compile---->C \n\tA----compile---->B   B----provided--->C   结果： A---->不依赖于---->C\n\tA----compile---->B   B----runtime---->C   结果： A---->runtime---->C  \n\tA----compile---->B   B----test------->C   结果： A---->不依赖于---->C  \n\n\tA----provided--->B   B----compile---->C   结果： A---->provided---->C \n\tA----provided--->B   B----provided--->C   结果： A---->provided---->C\n\tA----provided--->B   B----runtime---->C   结果： A---->provided---->C  \n\tA----provided--->B   B----test------->C   结果： A---->不依赖于----->C\n\t\n\tA----runtime---->B   B----compile---->C   结果： A---->runtime---->C \n\tA----runtime---->B   B----provided--->C   结果： A---->不依赖于---->C\n\tA----runtime---->B   B----runtime---->C   结果： A---->runtime---->C  \n\tA----runtime---->B   B----test------->C   结果： A---->不依赖于---->C  \n\t\n\tA------test----->B   B----compile---->C   结果： A----->test----->C \n\tA------test----->B   B----provided--->C   结果： A---->不依赖于---->C\n\tA------test----->B   B----runtime---->C   结果： A----->test----->C  \n\tA------test----->B   B----test------->C   结果： A---->不依赖于---->C  \n\n### 9.10 冲突解决-排除一个传递性依赖\n排除一个传递性依赖：\\<exclusion>\\</exclusion>\n\n\t<dependency> \n\t\t<groupId>org.sonatype.mavenbook</groupId>\n\t\t<artifactId>project-a</artifactId> \n\t\t<version>1.0</version>\n\t\t<exclusions>\n\t\t\t<exclusion> \n\t\t\t\t<groupId>org.sonatype.mavenbook</groupId> \n\t\t\t\t<artifactId>project-b</artifactId>\n\t\t\t</exclusion> \n\t\t</exclusions>\n\t</dependency>\n\n排除并替换一个传递性依赖    \n其实就是排除一个传递性依赖，然后再添加一个同样的依赖来起到替换的作用\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t<artifactId>hibernate</artifactId>\n\t\t\t<version>3.2.5.ga</version>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>javax.transaction</groupId> \n\t\t\t\t\t<artifactId>jta</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.geronimo.specs</groupId>\n\t\t\t<artifactId>geronimo-jta_1.1_spec</artifactId>\n\t\t\t<version>1.1</version>\n\t\t</dependency> \n\t</dependencies>\n\t\n\n四种可能需要排除替换的情况：\n\n1. 构建的groupId和artifactId已经更改了，而当前的项目需要一个与传递性 依赖不同名称的版本——结果是classpath中出现了同样项目的两份内容。 一般来说Maven会捕捉到这种冲突并且使用该项目的一个单独的版本，但是 当artifactId和artifactId不一样的时候，Maven就会认为它们是两种不同的类 库。\n2. 某个构件没有在你的项目中被使用，而且该传递性依赖没有被标志为可选依赖。 在这种情况下，你可能想要排除这种依赖，因为它不是你的系统需要的东西，你 要尽量减少应用程序分发时的类库数目。\n3. 一个构件已经在运行时的容器中提供了，因此不应该被包含在你的构件中。该情 况的一个例子是，如果一个依赖依赖于如Servlet API的东西，并且你又要确保 这样的依赖没有包含在web应用的WEB-INF/lib目录中。\n4. 为了排除一个可能是多个实现的API的依赖。这种情况在例 9.8 “排除并替换一 个传递性依赖”中阐述;有一个Sun API，需要点击许可证，并且需要耗时的手 工安装到自定义仓库，对于同样的API有可免费分发版本，在中央Maven仓库中可 用(Geronimo's JTA 实现)\n\n### 9.11 依赖管理\n\n父POM中dependencyManagement元素中为你提供了一种方式来统一依赖版本号，使用pom.xml中的dependencyManagement元素能让你在子项目中引用一个依赖而不用显式的列出版本号。\n\n注意：如果子项目定义了一个版本，它将覆盖顶层POM 的dependencyManagement元素中的版本。那就是:只有在子项目没有直接声明一个版本 的时候，dependencyManagement定义的版本才会被使用。\n\n### 9.12 项目继承\n\nPOM继承关系图：\n\n![POM继承关系图](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1527092792721&di=c572597d764f196d1dd77148ae07808b&imgtype=jpg&src=http%3A%2F%2Fimg1.imgtn.bdimg.com%2Fit%2Fu%3D2335801681%2C471830450%26fm%3D214%26gp%3D0.jpg)\n\n有些情况你会想要一个项目从父POM中继承一些值。你可能正构建一个大型的系统，你 不想一遍又一遍的重复同样的依赖元素。如果你的项目通过parent元素使用继承，你 就可以避免这种重复。当一个项目声明一个parent的时候，它从父项目的POM中继承信 息。它也可以覆盖父POM中的值，或者添加一些新的值。\n\n所有的Maven POM从父POM中继承值。如果一个POM没有通过parent元素指定一个直 接的父项目，那这个POM就会从超级POM继承值。\n\n\t项目继承方式如下：\n\t<project> \n\t\t<parent>\n\t\t\t<groupId>com.training.killerapp</groupId>\n\t\t\t<artifactId>a-parent</artifactId>\n\t\t\t<version>1.0-SNAPSHOT</version>\n\t\t</parent> \n\t\t<artifactId>project-a</artifactId> \n\t\t...\n\t</project>\n\t\n当一个项目指定一个父项目的时候，Maven在读取当前项目的POM之前，会使用这个 父POM作为起始点。它继承所有东西，包括groupId和version。你会注意到project- a没有指定groupId和version，它们从a-parent继承而来。有了parent元素，一个 POM就只需要定义一个artifactId。但这不是强制的，project-a可以有一个不同 的groupId和version，但如果不提供值，Maven就会使用在父POM中指定的值。如果你 开始使用Maven来管理和构建大型的多模块项目，你就会常常创建许多共享一组通用 的groupId和version的项目。\n\n当你继承一个POM，你可以选择直接使用继承的POM信息，或者选择覆盖它。以下是一个 Maven POM从它父POM中继承的项目列表:\n\n1. 定义符(groupId和artifactId中至少有一个必须被覆盖) \n2. 依赖\n3. 开发者和贡献者\n4. 插件列表\n5. 报告列表\n6. 插件执行 (id匹配的执行会被合并) \n7. 插件配置\n\n### 9.13 POM 最佳实践\n\n1. 创建一个集中管理依赖的pom项目 baseDeps 关键在于：<b>\\<packaing>pom\\</packaging></b>\n\t\n\t\t<project>\n\t\t\t<groupId>org.sonatype.mavenbook</groupId>\n\t\t\t<artifactId>persistence-deps</artifactId>\n\t\t\t<version>1.0</version>\n\t\t\t<packaging>pom</packaging>\n\t\t\t<dependencies>\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t<artifactId>hibernate</artifactId>\n\t\t\t\t\t<version>${hibernateVersion}</version>\n\t\t\t\t</dependency>\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t<artifactId>hibernate-annotations</artifactId>\n\t\t\t\t\t<version>${hibernateAnnotationsVersion}</version>\n\t\t\t\t</dependency>\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>org.springframework</groupId>\n\t\t\t\t\t<artifactId>spring-hibernate3</artifactId>\n\t\t\t\t\t<version>${springVersion}</version>\n\t\t\t\t</dependency>\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>mysql</groupId>\n\t\t\t\t\t<artifactId>mysql-connector-java</artifactId>\n\t\t\t\t\t<version>${mysqlVersion}</version>\n\t\t\t\t</dependency>\n\t\t\t</dependencies>\n\t\t\t<properties>\n\t\t\t\t<mysqlVersion>(5.1,)</mysqlVersion>\n\t\t\t\t<springVersion>(2.0.6,)</springVersion>\n\t\t\t\t<hibernateVersion>3.2.5.ga</hibernateVersion>\n\t\t\t\t<hibernateAnnotationsVersion>3.3.0.ga</hibernateAnnotationsVersion>\n\t\t\t</properties>\n\t\t</project>\n\n2. 执行mvn install  将baseDeps pom类型项目安装到maven仓库。\n3. 在其他项目中声明对baseDeps项目的依赖，关键在于\\<type>pom\\</type>\n\n\t\t<project>\n\t\t\t<description>This is a project requiring JDBC</description>\n\t\t\t...\n\t\t\t<dependencies>\n\t\t\t\t...\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>org.sonatype.mavenbook</groupId>\n\t\t\t\t\t<artifactId>baseDeps</artifactId>\n\t\t\t\t\t<version>1.0</version>\n\t\t\t\t\t<type>pom</type>\n\t\t\t\t</dependency>\n\t\t\t</dependencies>\n\t\t</project>\n4. 继承 VS 多模块\n\n\t![继承 VS 多模块](https://books.sonatype.com/mvnref-book/reference/figs/web/pom_book-example.png)\n\n5. 多模块企业级项目\n\n\t![实际应用多模块企业级项目](https://books.sonatype.com/mvnref-book/reference/figs/web/pom_real_multi.png)\n\n### 第十章 构建生命周期\n\n### 第十一章 构建Profile\n\n### 11.1 什么是构建Profile\n\nProfile能让你为一个特殊的环境自定义一个特殊的构建;profile使得不同环境间构建 的可移植性成为可能。\n\nProfile可以配置package信息: debug, log等\nProfile可以配置生产环境信息: develop版本，product版本，release版本等\nProfile可以配置渠道信息：googleplay，360，豌豆荚等\n更多的时候渠道分发包，使用Assembly插件来构建是非常适合的。\n\nProfile类似gradle中的 Flavors配置，可以配置打出不同的包。\n\nMaven中的profile是一组可选的配置，可以用来设置或者覆盖配置默认值。有了 profile，你就可以为不同的环境定制构建。profile可以在pom.xml中配置，并给定一 个id。然后你就可以在运行Maven的时候使用的命令行标记告诉Maven运行特定profile 中的目标。以下pom.xml使用production profile覆盖了默认的Compiler插件设置。\n\n\t<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n\thttp://maven.apache.org/maven-v4_0_0.xsd\">\n\t\t<modelVersion>4.0.0</modelVersion>\n\t\t<groupId>org.sonatype.mavenbook</groupId>\n\t\t<artifactId>simple</artifactId>\n\t\t<packaging>jar</packaging>\n\t\t<version>1.0-SNAPSHOT</version>\n\t\t<name>simple</name>\n\t\t<url>http://maven.apache.org</url>\n\t\t<dependencies>\n\t\t\t<dependency>\n\t\t\t\t<groupId>junit</groupId>\n\t\t\t\t<artifactId>junit</artifactId>\n\t\t\t\t<version>3.8.1</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\t\t</dependencies>\n\t\t<profiles>\n\t\t\t...\n\t\t\t<profile>\n\t\t\t\t<id>production</id>\n\t\t\t\t...\n\t\t\t\t<build>\n\t\t\t\t\t...\n\t\t\t\t\t<plugins>\n\t\t\t\t\t\t<plugin>\n\t\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t\t<debug>false</debug>\n\t\t\t\t\t\t\t\t<optimize>true</optimize>\n\t\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t</plugin>\n\t\t\t\t\t</plugins>\n\t\t\t\t</build>\n\t\t\t</profile>\n\t\t</profiles>\n\t</project>\n\n### 11.2 profile的语法\n|序号|描述|\n|----|----|\n|1|pom.xml中的profiles元素，它包含了一个或者多个profile元素。由于profile覆 盖了pom.xml中的默认设置，profiles通常是pom.xml中的最后一个元素。|\n|2|每个profile必须要有一个id元素。这个id元素包含的名字将在命令行调用profile 时被用到。我们可以通过传给Maven一个-P<profile_id>参数来调用profile。|\n|3|一个profile元素可以包含很多其它元素，只要这些元素可以出现在POM XML文档 的project元素下面。本例中，我们覆盖了Compiler插件的行为，因此必须覆盖插 件配置，该配置通常位于一个build和一个plugins元素下面|\n|4|我们覆盖了Maven Compiler插件的配置。确保通过production profile产生的字 节码不会包含调试信息，并且字节码会被编译器优化|\n\n要使用production profile来运行mvn install，你需要在命令行传入-Pproduction参 数。要验证production profile覆盖了默认的Compiler插件配置，可以像这样以开启调 试输出(-X) 的方式运行Maven。\n\n\tmvn clean install -Pproduction -X\n\t\nProfile中允许覆盖整个pom.xml，其节点可以如下：\n\n\t<project>\n\t\t<profiles>\n\t\t\t<profile>\n\t\t\t\t<build>\n\t\t\t\t\t<defaultGoal>...</defaultGoal>\n\t\t\t\t\t<finalName>...</finalName>\n\t\t\t\t\t<resources>...</resources>\n\t\t\t\t\t<testResources>...</testResources>\n\t\t\t\t\t<plugins>...</plugins>\n\t\t\t\t</build>\n\t\t\t\t<reporting>...</reporting>\n\t\t\t\t<modules>...</modules>\n\t\t\t\t<dependencies>...</dependencies>\n\t\t\t\t<dependencyManagement>...</dependencyManagement>\n\t\t\t\t<distributionManagement>...</distributionManagement>\n\t\t\t\t<repositories>...</repositories>\n\t\t\t\t<pluginRepositories>...</pluginRepositories>\n\t\t\t\t<properties>...</properties>\n\t\t\t</profile>\n\t\t</profiles>\n\t</project>\n\n### 11.3 激活Profile\n\n\t当jdk为1.6时，jdk16这个profile会被激活（activation）\n\t<profiles>\n\t\t<profile>\n\t\t\t<id>jdk16</id>\n\t\t\t<activation>\n\t\t\t\t<jdk>1.6</jdk>\n\t\t\t</activation>\n\t\t\t<modules>\n\t\t\t\t<module>simple-script</module>\n\t\t\t</modules>\n\t\t</profile>\n\t</profiles>\n\t\n### 11.4 当所有条件满足时才会激活Profile\n\n\t<project>\n\t\t...\n\t\t<profiles>\n\t\t\t<profile>\n\t\t\t\t<id>dev</id>\n\t\t\t\t<activation>\n\t\t\t\t\t<activeByDefault>false</activeByDefault>\n\t\t\t\t\t<jdk>1.5</jdk>\n\t\t\t\t\t<os>\n\t\t\t\t\t\t<name>Windows XP</name>\n\t\t\t\t\t\t<family>Windows</family>\n\t\t\t\t\t\t<arch>x86</arch>\n\t\t\t\t\t\t<version>5.1.2600</version>\n\t\t\t\t\t</os>\n\t\t\t\t\t<property>\n\t\t\t\t\t\t<name>mavenVersion</name>\n\t\t\t\t\t\t<value>2.0.5</value>\n\t\t\t\t\t</property>\n\t\t\t\t\t<file>\n\t\t\t\t\t\t<exists>file2.properties</exists>\n\t\t\t\t\t\t<missing>file1.properties</missing>\n\t\t\t\t\t</file>\n\t\t\t\t</activation>\n\t\t\t\t...\n\t\t\t</profile>\n\t\t</profiles>\n\t</project>\n\t\n### 11.5 属性缺失时激活Profile\n\n\t<project>\n\t\t...\n\t\t<profiles>\n\t\t\t<profile>\n\t\t\t\t<id>development</id>\n\t\t\t\t<activation>\n\t\t\t\t\t<property>\n\t\t\t\t\t\t<name>!environment.type</name>\n\t\t\t\t\t</property>\n\t\t\t\t</activation>\n\t\t\t</profile>\n\t\t</profiles>\n\t</project>\n\t\n### 11.6 外部Profile，将pom.xml中profile抽取成单独的profile.xml\n\n\t<profiles>\n\t<profile>\n\t\t<id>development</id>\n\t\t<build>\n\t\t\t<plugins>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<debug>true</debug>\n\t\t\t\t\t\t<optimize>false</optimize>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</build>\n\t</profile>\n\t<profile>\n\t\t<id>production</id>\n\t\t<build>\n\t\t\t<plugins>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<debug>false</debug>\n\t\t\t\t\t\t<optimize>true</optimize>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</build>\n\t</profile>\n\t</profiles>\n\n### 11.7 Settings Profile\n\nSettings Profile可以同时应用到你的所有maven构建中，就相当于默认profile,可以在以下两个地方定义Settings Profile。\n\t\n\t1. 定义在 ~/.m2/settings.xml中\n\t2. 定义在 /usr/local/maven/conf/settings.xml中\n配置方式如：\n\t\n\t<settings>\n\t\t<profiles>\n\t\t\t<profile>\n\t\t\t\t<id>dev</id>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-jar-plugin</artifactId>\n\t\t\t\t\t<executions>\n\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t<goal>sign</goal>\n\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t</execution>\n\t\t\t\t\t</executions>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<keystore>/home/tobrien/java/keystore</keystore>\n\t\t\t\t\t\t<alias>tobrien</alias>\n\t\t\t\t\t\t<storepass>s3cr3tp@ssw0rd</storepass>\n\t\t\t\t\t\t<signedjar>\n\t\t\t\t\t\t\t/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/c\n\t\t\t\t\t\t</signedjar>\n\t\t\t\t\t\t<verify>true</verify>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t</profile>\n\t\t</profiles>\n\t</settings>\n\n\n### 11.8 列出活动的Profiles\n\n\tmvn help:active-profiles\n\t\n### 11.9 可以通过default profile来设定一些属性值\n\n\t例如：下面设置了一个activeByDefault = true的profile，并且将environment.type设置成dev。以后我们可以在pom.xml中根据environment.type是否等于dev来执行一些逻辑。\n\t<settings>\n\t\t<profiles>\n\t\t\t<profile>\n\t\t\t\t<activation>\n\t\t\t\t\t<activeByDefault>true</activeByDefault>\n\t\t\t\t</activation>\n\t\t\t\t<properties>\n\t\t\t\t\t<environment.type>dev</environment.type>\n\t\t\t\t</properties>\n\t\t\t</profile>\n\t\t</profiles>\n\t</settings>\n\n\n### Maven套件\n\nMarkdown文件中图片制作与超链接获取\n\n\n### 1. 上传图片到印象笔记\n\t\t1. 登陆《印象笔记》和《圈点》\n\t\t2. 打开印象笔记《圈点》\n\t\t3. 在圈点中编辑图片，然后点击同步。\n\t\t4. 打开《印象笔记》，找到刚才用《圈点》编辑并同步的图片笔记，不要打开。\n\t\t5. 在笔记上点击鼠标右键-->复制笔记链接\n\t\t6. 在浏览器中打开此链接\n\t\t7. 在打开的网页中需要的图片上点击鼠标右键-->复制图片地址\n\t\t8. 制作成如下图片链接样式即可  ![定义一个图片名称](复制的图片地址)\n\n### 2. 上传笔记到简书\n\t\t1. control + c 复制准备好的图片\n\t\t2. 登陆《简书》\n\t\t3. 点击-->写文章-->新建文章-->control + v 粘贴图片到文章编辑框，并等待上传，\n \t\t   上传完成之后会在文章编辑框生成 markdown 图片链接。直接拷贝到markdown文档中即可。\n\n### 3. 上传图片到其他图片服务器\n\n\n[okhttp官方github]:https://github.com/square/okhttp\n[Linux命令大全]:http://man.linuxde.net\n[计算机书籍在线阅读]:https://books.sonatype.com/\n[Maven权威指南在线阅读]:https://www.sonatype.com/\n[Maven plugins列表]:https://maven.apache.org/plugins/index.html\n[Maven常用插件]:http://iffiffj.iteye.com/blog/1661936\n[Maven simple-weather示例项目Git地址]:https://github.com/Farubaba/simple-example\n[The Definitive Guide]:http://book.huihoo.com/maven-the-definitive-guide/multimodule-web-spring.html\n\n\n\n","source":"_posts/Maven权威指南笔记.md","raw":"---\ntitle: Maven权威指南速查笔记\ndate: 2018-08-03 18:34:26\ntags: [OkHttp,Maven,struts]\nsummery: 本文是《Maven权威指南》的书读笔记，抽取出maven最关键的基础知识，帮助初学者快速入门。了解maven是什么，maven能做什么，maven是如何工作的，以及我们在开发中如何利用maven来管理我们的项目。也是一个maven核心备忘录。\n---\n### 参考文档\n\n>1. [Linux命令大全]\n>1. Maven权威指南\n>1. [Maven plugins列表]\n>1. [Maven常用插件]\n\n### Maven关键概念汇总\n\n>1. 插件 Maven Plugin\n>1. 目标 goal 和 目标前缀 goal Prefix\n>1. 坐标(coordinates) 由 groupId，artifactId, packaging, version 共同确定\n>1. 构建生命周期 build Lifecycle\n>1. 生命周期阶段 phase\n>1. 标准目录结构 Maven Standard Directory Layout\n>1. 项目对象模型 Project Object Model\n>1. 约定优于配置 Convention Over Configuration\n>1. Maven仓库 (repositories)\n>1. 依赖管理 (dependency management)\n>1. 使用maven help插件的mvn help:describe来查看其它插件、目标或者命令的描述：\n>>1. mvn help:describe -Dcmd=install\n>>2. mvn help:describe -Dcmd=help:describe\n>>3. mvn help:describe -Dplugin=compiler   <font color=\"#DC524A\">compiler是一个插件</font>\n>>4. mvn help:describe -Dcmd=compile  <font color=\"#DC524A\">compile是compiler插件的一个目标</font>\n>>5. mvn help:describe -Dplugin=comp iler -Dmojo=compile -Dfull\n>>6. mvn help:describe -Dplugin=help \n>>7. mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin\n>>8. mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin\n>>9. 查看help插件的描述: mvn help:describe -Dplugin=help\n>>10. 查看更详细的细节+1: mvn help:describe -Dplugin=help -Dfull\n>>11. 查看更详细的细节+2: mvn help:help -Ddetail=true\n>>12. 查看更详细的细节+2: mvn help:describe -Dplugin=help -Ddetail=true\n>>13. Dmojo指定插件目标：mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull\n>1. \"-D<name>=<value>\"这种格式不是Maven定义的，它其实是Java用来设置系统属性的方式，可以通过“java -help”查看 Java的解释。Maven的bin目录下的脚本文件仅仅是把属性传入Java而已\n>1. 传递性依赖(transitive dependencies)\n>1. 依赖范围(dependency scope) : test、compile、provided\n>1. 站点生成和报告 (Site Generation and Reporting) : mvn site\n>1. Maven Assembly 是一个用来创建你应用程序特有分发包的插件。\n\n### POM.xml标准标签格式, Profile中也可以包含全部这些标签\n\n```\n\t<project>\n\t\t<build>\n\t\t\t<defaultGoal>...</defaultGoal>\n\t\t\t<finalName>...</finalName>\n\t\t\t<resources>...</resources>\n\t\t\t<testResources>...</testResources>\n\t\t\t<plugins>...</plugins>\n\t\t</build>\n\t\t<reporting>...</reporting>\n\t\t<modules>...</modules>\n\t\t<dependencies>...</dependencies>\n\t\t<dependencyManagement>...</dependencyManagement>\n\t\t<distributionManagement>...</distributionManagement>\n\t\t<repositories>...</repositories>\n\t\t<pluginRepositories>...</pluginRepositories>\n\t\t<properties>...</properties>\n\t</project>\n```\n\t\t\n### 相关名称总汇：\n\t\n```\n\tIOC容器：Plexus、Guice、Spring\n\tStruts、Tapesty、Wicket、JSF、Waffle、Hibernate、Velocity\n```\n\t\t\n### 第一章 介绍Apache Maven\n\n### 1.1 Maven是什么？\nMaven是一个构建工具，一个项目管理工具。\n\n像Ant这样的构建工具只关注预处理，编译，打包，测试和分发。Maven不仅关注预处理，编译，打包，测试和分发，还可以生成报告， 生成Web站点，并且帮助推动工作团队成员间的交流。\n\t\n一个更正式的 Apache Maven1 的定义: Maven是一个项目管理工具，它包含了一个项 目对象模型 (Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在 生命周期阶段(phase)中插件(plugin)目标(goal)的逻辑。 当你使用Maven的时候，你 用一个明确定义的项目对象模型来描述你的项目，然后 Maven 可以应用横切的逻辑， 这些逻辑来自一组共享的(或者自定义的)插件\t\t\n\n### 1.2 约定优于配置(Convention Over Configuration)\n在没有自定义的情况下，Maven有如下约定：\n\n1. 源代码假定是在:\n```\n/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/main/java\n```\n1. 资源文件假定是在:\n```\n/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/main/resources\n```\n1. 测试代码假定是在: \n```\n/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/test\n```\n1. 项目假定会产生一个 JAR 文件\n```\n/usr/local/hudson/ hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/target\n```\n2. Maven 假定你想要把编译好的字节码放到:\n```\n/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/target/classes\n```\n1. 当然，只要你遵循Maven的这一约定，几乎不需要做任何配置，就可以结合maven的插件来完成所有事情，但也仍然允许你自定义修改这些约定。\n\n1. Maven的标准约定的目录结构如下：\n\n\t<font color=\"red\">在一个Maven项目中执行 mvn help:effective-pom 可以查看到这些约定被配置在pom.xml中</font>\n\t```\n\t--projectName \t\t\t\t\t\t项目根目录或者module根目录\n\t-----src\n\t---------main\n\t-------------java\t\t\t\t\t源码目录src/main/java\n\t-------------resources\t\t\t\t\t资源目录src/main/resources\n\t-------------scripts\t\t\t\t\t脚本文件src/main/scripts\n\t---------test \t\t\t\t\t\t测试目录src/test\n\t-------------java \t\t\t\t\t测试代码目录src/test/java\n\t-------------resources\t\t\t\t\t测试资源目录src/test/resources\n\t---------site     \t\t\t\t\t站点资源目录src/site\n\t-----target\t\t\t\t\t\t结果目录\n\t---------classes \t\t\t\t\t编译生成class目录target/classes\n\t---------test-classes \t\t\t\t\t编译生成class目录target/test-classes\n\t---------site     \t\t\t\t\t站点资源目录target/site\n\t-----pom.xml  \t\t\t\t\t\tMaven配置文件\n\t```\n1. 多module项目结构如下：\n\n\t```\n\t--projectName \t\t\t\t\t\t项目根目录\n\t\t----module1\t\t\t\t\tmodule1根目录\n\t\t\t------src\t \t\n\t\t\t---------main\n\t\t\t-------------java\t\t\t源码目录\n\t\t\t-------------resources\t\t\t资源目录\n\t\t\t-------------scripts\t\t\t脚本文件\n\t\t\t---------test \t\t\t\t测试目录\n\t\t\t-------------java \t\t\t测试代码目录\n\t\t\t-------------resources\t\t\t测试资源目录\n\t\t\t---------site     \t\t\t站点资源目录\n\t\t\t-----target\t\t\t\t结果目录\n\t\t\t---------classes \t\t\t编译生成class目录\n\t\t\t---------test-classes \t\t\t编译生成class目录\n\t\t\t---------site     \t\t\t站点资源目录\n\t\t\t-----pom.xml  \t\t\t\tmodule1的Maven配置文件\n\t\t----module2\t\t\t\t\tmodule2根目录\n\t\t\t------src\t \t\n\t\t\t---------main\n\t\t\t-------------java\t\t\t源码目录\n\t\t\t-------------resources\t\t\t资源目录\n\t\t\t-------------scripts\t\t\t脚本文件\n\t\t\t---------test \t\t\t\t测试目录\n\t\t\t-------------java \t\t\t测试代码目录\n\t\t\t-------------resources\t\t\t测试资源目录\n\t\t\t---------site     \t\t\t站点资源目录\n\t\t\t-----target\t\t\t\t结果目录\n\t\t\t---------classes \t\t\t编译生成class目录\n\t\t\t---------test-classes \t\t\t编译生成class目录\n\t\t\t---------site     \t\t\t站点资源目录\n\t\t\t-----pom.xml  \t\t  \t\tmodule2的Maven配置文件\n\t   ----pom.xml   \t\t\t\t\tProject的Maven配置文件\n\t```\n1. 典型示例如：\n\t\n\t下面是我从[okhttp官方github]中fork出来准备二次封装okhttp的项目结构:\n\t<!--\n\t![Maven项目目录结构.png](https://app.yinxiang.com/shard/s45/nl/2147483647/50a6fa2c-b7ed-41f6-9702-72ae2ef0b930//res/ae2bc4cb-e0b3-47d6-bbab-fe8ac6a9f244/skitch.png?resizeSmall&width=832)\n\t-->\n\t<!--\n\t![maven项目目录结构.png](https://upload-images.jianshu.io/upload_images/6322932-55587e4642649287.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\t-->\n\t![Maven项目目录结构.png](https://upload-images.jianshu.io/upload_images/6322932-3877cf45ed59a3f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\t\n\t\n### 1.3 统一的构建过程\n\n>统一的标准化构建过程约束，所有使用Maven构建的项目都遵循这一约束，不同的项目，只要都使用Maven来构建，那么，他们的构建逻辑几乎是一样的，不会再像没有Maven的年代，每个项目的构建逻辑都不一致，开发人员需要花额外的时间去理解不同项目不同的构建逻辑。例如：使用Ant构建的每一个项目几乎都拥有自己完全不同与其他项目的构建逻辑，因为，没有约定，构建逻辑完全是自定义的。\n\n<font color=\"red\">现在，你只要签出源码，然后运行: mvn install，你就能构建好这个项目。\n</font>\n\n### 1.4 Maven插件的全局性重用\n\nMaven 的核心其实不做什么实际的事情，除了解析一些 XML 文档，管理生命周期与插 件之外，它什么也不懂。Maven 被设计成将主要的职责委派给一组 Maven 插件，这些 插件可以影响 Maven 生命周期，提供对目标的访问。绝大多数 Maven 的动作发生于 Maven 插件的目标，如编译源码，打包二进制代码，发布站点和其它构建任务。你从 Apache 下载的 Maven 不知道如何打包 WAR 文件，也不知道如何运行单元测试，Maven 大部分的智能是由插件实现的，而插件从 Maven 仓库获得。事实上，第一次你用全新 的 Maven 安装运行诸如 mvn install 命令的时候，它会从中央 Maven 仓库下载大部 分核心 Maven 插件。这不仅仅是一个最小化 Maven 分发包大小的技巧，这种方式更能 让你升级插件以给你项目的构建提高能力。Maven 从远程仓库获取依赖和插件的这一事 实允许了构建逻辑的全局性重用。\n\nSurefire插件：是负责运行单元测试的插件，插件不断更新，支持JUnit3、TestNG、JUnit4；\n\nCompiler插件：负责进行编译，通过jar插件编程jar，通过aar插件生成aar。\n\n还有一些插件生成报告，运行 JRuby 和 Groovy 的代码，以及一 些用来向远程服务器发布站点的插件。而且插件在不断更新，我们只需要更新pom.xml中说引入的插件版本号，就能获得最新的插件功能。\n\nMaven 将一般的构建任务抽象成插件，同时这些 插件得到了很好的维护以及全局的共享，你不需要从头开始自定义你项目的构建系统然 后提供支持。你完全可以从 Maven 插件获益，这些插件有人维护，可以从远程仓库下 载到。这就是基于 Maven 插件的全局性重用。\n\n### 1.5 Maven、Ant、Gradle、Buildr、Nexus以及antlibs和Ivy\n\n<font color=\"red\">我们会很明确的说作为构建的基本技术，Maven 是 Ant 的更好选择。但使用 Maven 还是 Ant 的决定不是非此即彼的，Ant 在复杂的构建中还有它的位置。</font> 如果你目前的构建包含一些高度自定义的过程，或者你已经写了一些 Ant 脚本通过一 种明确的方法完成一个明确的过程，而这种过程不适合 Maven 标准，你仍然可以在 Maven 中用这些脚本。作为一个 Maven 的核心插件， Ant 还是可用的。自定义的插件 可以用 Ant 来实现，Maven 项目可以配置成在生命周期中运行 Ant 的脚本。\n\nAnt 在构建过程方面十分优秀，它是一个<font color=\"red\"><b>基于任务和依赖</b></font>的构建系统。每个任务包含一 组由 XML 编码的指令。有 copy 任务和 javac 任务，以及 jar 任务。在你使用 Ant 的时候，你为 Ant 提供特定的指令以编译和打包你的输出。\n没有诸如 antlibs 和 lvy 等技术的支持(<font color=\"red\">即使有了这些支持技术</font>)，Ant 给人感觉是自定义的程序化构建,配置过于复杂。\n\n一个典型的Ant构建脚本buid.xml：\n\n```\n<project name=\"my-project\" default=\"dist\" basedir=\".\"> \n\t<description>\n\t\tsimple example build file \n\t</description>\n\t<!-- set global properties for this build --> \n\t<property name=\"src\" location=\"src/main/java\"/> \n\t<property name=\"build\" location=\"target/classes\"/> \n\t<property name=\"dist\" location=\"target\"/>\n\t\n\t<target name=\"init\">\n\t\t<!-- Create the time stamp -->\n\t\t<tstamp/>\n\t\t<!-- Create the build directory structure used by compile --> \n\t\t<mkdir dir=\"org.apache.maven.model.Build@d7e661\"/>\n\t</target>\n\t\n\t<target name=\"compile\" depends=\"init\" description=\"compile the source \" >\n\t\t<!-- Compile the java code from ${src} into org.apache.maven.model.Build@d7e661 --> \n\t\t<javac srcdir=\"${src}\" \tdestdir=\"org.apache.maven.model.Build@d7e661\"/> \n\t</target>\n\t\n\t<target name=\"dist\" depends=\"compile\" description=\"generate the distribution\" >\n\t\t<!-- Create the distribution directory --> \n\t\t<mkdir dir=\"${dist}/lib\"/>\n\t<!-- Put everything in org.apache.maven.model.Build@d7e661 into the MyProject-${DSTAMP}.jar -->\n\t\t<jar jarfile=\"${dist}/lib/MyProject-${DSTAMP}.jar\" basedir=\"org.apache.maven.mod \n\t</target>\n\t\t\n\t<target name=\"clean\" description=\"clean up\" >\n\t\t<!-- Delete the org.apache.maven.model.Build@d7e661 and ${dist} directory trees -->\n\t\t<delete dir=\"org.apache.maven.model.Build@d7e661\"/>\n\t\t<delete dir=\"${dist}\"/>\n\t</target>\n</project>\n```\n等价的Maven配置文件pom.xml\n\n```\n<project> \n\t<modelVersion>4.0.0</modelVersion>\n\t<groupId>org.sonatype.mavenbook</groupId> \n\t<artifactId>my-project</artifactId> \n\t<version>1.0</version>\n\t<!-- packaging 默认就是jar类型-->\n\t<packaging>jar</packaging>\n</project>\n```\n\n### 1.6 Maven和Ant比较\n\n|类型|Apache Maven|Apache Ant|\n|----|----|----|\n|约定|Maven 拥有约定，因为你遵循了约定，它已经知道你的源代码在哪里。它把字节码放到 target/classes ，然后在 target 生成一个 JAR 文件|Ant 没有正式的约定如一个一般项目的目录结构，你必须明确的告诉 Ant 哪 里去找源代码，哪里放置输出。随着时间的推移，非正式的约定出现了，但是 它们还没有在产品中模式化|\n|声明和编写|Maven 是声明式的。你需要做的只是创建一个 pom.xml 文件然后将源代码放到默认的目录。Maven 会帮你处理其它的事情|Ant 是程序化的，你必须明确的告诉 Ant 做什么，什么时候做。你必须告诉 它去编译，然后复制，然后压缩|\n|生命周期|Maven 有一个生命周期，当你运行 mvn install 的时候被调用。这条命令告 诉 Maven 执行一系列的有序的步骤，直到到达你指定的生命周期。遍历生命 周期旅途中的一个影响就是，Maven 运行了许多默认的插件目标，这些目标完 成了像编译和创建一个 JAR 文件这样的工作|Ant 没有生命周期，你必须定义目标和目标之间的依赖。你必须手工为每个目 标附上一个任务序列|\n\n\n\n### 第二章 安装和运行Maven\n\n### 2.1 Maven安装和升级\n\t\n\t\t1. 执行 java -version 如果没有输出类似如下内容，则需要下载和安装JDK\n\t\t\tjava version \"1.6.0_02\"\n\t\t\tJava(TM) SE Runtime Environment (build 1.6.0_02-b06)\n\t\t\tJava HotSpot(TM) Client VM (build 1.6.0_02-b06, mixed mode, sharing)\n\t\t2. JDK下载地址：\n\t\t\thttp://www.oracle.com/technetwork/java/javase/downloads/index.html \n\t\t3. Maven下载地址：\n\t\t\thttps://maven.apache.org/download.cgi\n\t\t4. 安装Maven\n\t\t\thttps://maven.apache.org/install.html\n\t\t5. 升级Maven\n\t\t\t只需要删除已经安装的Maven目录，并重新下载，解压缩到相同的目录既可以。\n\t\n### 2.2 Maven全局目录结构\n\t\n\t\tLICENSE.txt\t包含了Apache Maven的软件许可证\n\t\tNOTICE.txt \t包含了一些Maven依赖的类库所需要 的通告及权限\n\t\tREADME.txt \t包含了一些安装指令\n\t\tbin/   \t\t包含了运行Maven的 mvn脚本\n\t\tboot/  \t\t包含了一个负责创建Maven运行所需要的类装载器的JAR文件(classwords-1.1.jar)\n\t\tconf/  \t\t包含了一个全局的settings.xml文件，该文件用 来自定义你机器上Maven的一些行为。\n\t\t\t\t\t但是如果你需要自定义Maven，更通常的做法是覆写 ~/.m2目录下的settings.xml文件，每个用户都有对应的这个目录。\n\t\tlib/   \t\t有了一个包含Maven核心的JAR文件(maven-2.0.9-uber.jar)\n\n### 2.3 用户相关配置和仓库\n\t\n\t\t~/.m2/settings.xml\t该文件包含了用户相关的认证，仓库和其它信息的配置，用来自定义Maven的行为\n\t\t~/.m2/repository/ \t该目录是你本地的仓库。当你从远程Maven仓库下载依赖的时候，Maven在你本地仓库存储了这个依赖的一个副本。\n\t\t\n### 2.4 如何获取Maven帮助\n\n|地址|描述|\n|---|----|\n|<http://maven.apache.org>|你首先应该看看这里，Maven的web站点包含了丰富的信息及文档。每个插件都有 几页的文档，这里还有一系列“快速开始”的文档，它们是本书内容的十分有帮 助的补充。虽然Maven站点包含了大量信息，它同时也可能让你迷惑沮丧。那里 提供了一个自定义的Google搜索框，以用来搜索已有的Maven站点信息，它能比 通用的Google搜索提供更好的结果。|\n|Maven User Mailing List|Maven用户邮件列表是用户问问题的地方。在你问问题之前，你可以先搜索一下 之前的讨论，有可能找到相关问题。问一个已经问过的问题，而不先查一下该问 题是否存在了，这种形式不太好。有很多有用的邮件列表归档浏览器，我们发现 Nabble最有用。你可以在这里浏览邮件列表:http://www.nabble.com/MavenUsers-f178.html。你也可以按照这里的指令来加入用户邮件列表:http:// maven.apache.org/mail-lists.html|\n|http://www.sonatype.com|Sonatype维护了一个本书的在线副本，以及其它Maven相关的指南|\n|<https://maven.apache.org/team-list.html>|Maven开发者邮件列表|\n\n### 2.5 使用Maven help插件\n\nMaven Help 插件有很多目标。通过help插件自己的describe目标可以查看help插件自身的描述。\n\nmvn help:describe -Dplugin=help\n\n|目标|描述|\n|----|----|\n|help:active-profiles|列出当前构建中活动的Profile(项目的，用户的，全局的)|\n|help:all-profiles|Displays a list of available profiles under the current project. Note: it will list all profiles for a project. If a profile comes up with a status inactive then there might be a need to set profile activation switches/property|\n|help:effective-pom|显示当前构建的实际POM，包含活动的Profile|\n|help:effective-settings|打印出项目的实际settings, 包括从全局的settings和用户级别settings继承的配置|\n|help:describe|描述插件的属性。它不需要在项目目录下运行。但是你必须提供你想要描述插件 的 groupId 和 artifactId|\n|help:evaluate|Evaluates Maven expressions given by the user in an interactive mode.|\n|help:help|Description: Display help information on maven-help-plugin. Call mvn help:help -Ddetail=true -Dgoal=<goal-name> to display parameter details|\n|help:system|Displays a list of the platform details like system properties and environment variables.|\n\n\n>1. 使用Maven help插件的mvn help:describe来查看其它插件、目标或者命令的描述：\n>9. mvn help:describe -Dcmd=install\n>10. mvn help:describe -Dcmd=help:describe\n>11. mvn help:describe -Dplugin=compiler   compiler是一个插件\n>12. mvn help:describe -Dcmd=compile       compile是compiler插件的一个目标\n>13. mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull\n>14. mvn help:describe -Dplugin=help\n>15. mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin\n>16. mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin\n>17. 查看help插件的描述: mvn help:describe -Dplugin=help\n>18. 查看更详细的细节+1: mvn help:describe -Dplugin=help -Dfull\n>19. 查看更详细的细节+2: mvn help:help -Ddetail=true\n>20. 查看更详细的细节+2: mvn help:describe -Dplugin=help -Ddetail=true\n>1. Dmojo指定插件目标：mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull\n\n1. 在maven-archetype-quickstart项目中执行 mvn help:effective-pom 可以查看到实际pom中内容如下：\n\n```\n\t\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t\t<!-- ====================================================================== -->\n\t\t<!--                                                                        -->\n\t\t<!-- Generated by Maven Help Plugin on 2018-05-16T23:17:54+08:00            -->\n\t\t<!-- See: http://maven.apache.org/plugins/maven-help-plugin/                -->\n\t\t<!--                                                                        -->\n\t\t<!-- ====================================================================== -->\n\t\t<!-- ====================================================================== -->\n\t\t<!--                                                                        -->\n\t\t<!-- Effective POM for project                                              -->\n\t\t<!-- 'com.silence:maven-archetype-quickstart:jar:0.0.1-SNAPSHOT'            -->\n\t\t<!--                                                                        -->\n\t\t<!-- ====================================================================== -->\n\t\t<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t\t  <modelVersion>4.0.0</modelVersion>\n\t\t  <groupId>com.silence</groupId>\n\t\t  <artifactId>maven-archetype-quickstart</artifactId>\n\t\t  <version>0.0.1-SNAPSHOT</version>\n\t\t  <name>maven-archetype-quickstart</name>\n\t\t  <url>http://www.example.com</url>\n\t\t  <properties>\n\t\t    <maven.compiler.source>1.7</maven.compiler.source>\n\t\t    <maven.compiler.target>1.7</maven.compiler.target>\n\t\t    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t  </properties>\n\t\t  <dependencies>\n\t\t    <dependency>\n\t\t      <groupId>junit</groupId>\n\t\t      <artifactId>junit</artifactId>\n\t\t      <version>4.11</version>\n\t\t      <scope>test</scope>\n\t\t    </dependency>\n\t\t  </dependencies>\n\t\t  <repositories>\n\t\t    <repository>\n\t\t      <snapshots>\n\t\t        <enabled>false</enabled>\n\t\t      </snapshots>\n\t\t      <id>central</id>\n\t\t      <name>Central Repository</name>\n\t\t      <url>https://repo.maven.apache.org/maven2</url>\n\t\t    </repository>\n\t\t  </repositories>\n\t\t  <pluginRepositories>\n\t\t    <pluginRepository>\n\t\t      <releases>\n\t\t        <updatePolicy>never</updatePolicy>\n\t\t      </releases>\n\t\t      <snapshots>\n\t\t        <enabled>false</enabled>\n\t\t      </snapshots>\n\t\t      <id>central</id>\n\t\t      <name>Central Repository</name>\n\t\t      <url>https://repo.maven.apache.org/maven2</url>\n\t\t    </pluginRepository>\n\t\t  </pluginRepositories>\n\t\t  <build>\n\t\t    <sourceDirectory>/environment/myeclipse/maven-archetype-quickstart/src/main/java</sourceDirectory>\n\t\t    <scriptSourceDirectory>/environment/myeclipse/maven-archetype-quickstart/src/main/scripts</scriptSourceDirectory>\n\t\t    <testSourceDirectory>/environment/myeclipse/maven-archetype-quickstart/src/test/java</testSourceDirectory>\n\t\t    <outputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/classes</outputDirectory>\n\t\t    <testOutputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/test-classes</testOutputDirectory>\n\t\t    <resources>\n\t\t      <resource>\n\t\t        <directory>/environment/myeclipse/maven-archetype-quickstart/src/main/resources</directory>\n\t\t      </resource>\n\t\t    </resources>\n\t\t    <testResources>\n\t\t      <testResource>\n\t\t        <directory>/environment/myeclipse/maven-archetype-quickstart/src/test/resources</directory>\n\t\t      </testResource>\n\t\t    </testResources>\n\t\t    <directory>/environment/myeclipse/maven-archetype-quickstart/target</directory>\n\t\t    <finalName>maven-archetype-quickstart-0.0.1-SNAPSHOT</finalName>\n\t\t    <pluginManagement>\n\t\t      <plugins>\n\t\t        <plugin>\n\t\t          <artifactId>maven-antrun-plugin</artifactId>\n\t\t          <version>1.3</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-assembly-plugin</artifactId>\n\t\t          <version>2.2-beta-5</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-dependency-plugin</artifactId>\n\t\t          <version>2.8</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-release-plugin</artifactId>\n\t\t          <version>2.3.2</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-clean-plugin</artifactId>\n\t\t          <version>3.0.0</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-resources-plugin</artifactId>\n\t\t          <version>3.0.2</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-compiler-plugin</artifactId>\n\t\t          <version>3.7.0</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-surefire-plugin</artifactId>\n\t\t          <version>2.20.1</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-jar-plugin</artifactId>\n\t\t          <version>3.0.2</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-install-plugin</artifactId>\n\t\t          <version>2.5.2</version>\n\t\t        </plugin>\n\t\t        <plugin>\n\t\t          <artifactId>maven-deploy-plugin</artifactId>\n\t\t          <version>2.8.2</version>\n\t\t        </plugin>\n\t\t      </plugins>\n\t\t    </pluginManagement>\n\t\t    <plugins>\n\t\t      <plugin>\n\t\t        <artifactId>maven-clean-plugin</artifactId>\n\t\t        <version>3.0.0</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-clean</id>\n\t\t            <phase>clean</phase>\n\t\t            <goals>\n\t\t              <goal>clean</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-install-plugin</artifactId>\n\t\t        <version>2.5.2</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-install</id>\n\t\t            <phase>install</phase>\n\t\t            <goals>\n\t\t              <goal>install</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-resources-plugin</artifactId>\n\t\t        <version>3.0.2</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-resources</id>\n\t\t            <phase>process-resources</phase>\n\t\t            <goals>\n\t\t              <goal>resources</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t          <execution>\n\t\t            <id>default-testResources</id>\n\t\t            <phase>process-test-resources</phase>\n\t\t            <goals>\n\t\t              <goal>testResources</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-surefire-plugin</artifactId>\n\t\t        <version>2.20.1</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-test</id>\n\t\t            <phase>test</phase>\n\t\t            <goals>\n\t\t              <goal>test</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-compiler-plugin</artifactId>\n\t\t        <version>3.7.0</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-testCompile</id>\n\t\t            <phase>test-compile</phase>\n\t\t            <goals>\n\t\t              <goal>testCompile</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t          <execution>\n\t\t            <id>default-compile</id>\n\t\t            <phase>compile</phase>\n\t\t            <goals>\n\t\t              <goal>compile</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-jar-plugin</artifactId>\n\t\t        <version>3.0.2</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-jar</id>\n\t\t            <phase>package</phase>\n\t\t            <goals>\n\t\t              <goal>jar</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-deploy-plugin</artifactId>\n\t\t        <version>2.8.2</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-deploy</id>\n\t\t            <phase>deploy</phase>\n\t\t            <goals>\n\t\t              <goal>deploy</goal>\n\t\t            </goals>\n\t\t          </execution>\n\t\t        </executions>\n\t\t      </plugin>\n\t\t      <plugin>\n\t\t        <artifactId>maven-site-plugin</artifactId>\n\t\t        <version>3.3</version>\n\t\t        <executions>\n\t\t          <execution>\n\t\t            <id>default-site</id>\n\t\t            <phase>site</phase>\n\t\t            <goals>\n\t\t              <goal>site</goal>\n\t\t            </goals>\n\t\t            <configuration>\n\t\t              <outputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/site</outputDirectory>\n\t\t              <reportPlugins>\n\t\t                <reportPlugin>\n\t\t                  <groupId>org.apache.maven.plugins</groupId>\n\t\t                  <artifactId>maven-project-info-reports-plugin</artifactId>\n\t\t                </reportPlugin>\n\t\t              </reportPlugins>\n\t\t            </configuration>\n\t\t          </execution>\n\t\t          <execution>\n\t\t            <id>default-deploy</id>\n\t\t            <phase>site-deploy</phase>\n\t\t            <goals>\n\t\t              <goal>deploy</goal>\n\t\t            </goals>\n\t\t            <configuration>\n\t\t              <outputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/site</outputDirectory>\n\t\t              <reportPlugins>\n\t\t                <reportPlugin>\n\t\t                  <groupId>org.apache.maven.plugins</groupId>\n\t\t                  <artifactId>maven-project-info-reports-plugin</artifactId>\n\t\t                </reportPlugin>\n\t\t              </reportPlugins>\n\t\t            </configuration>\n\t\t          </execution>\n\t\t        </executions>\n\t\t        <configuration>\n\t\t          <outputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/site</outputDirectory>\n\t\t          <reportPlugins>\n\t\t            <reportPlugin>\n\t\t              <groupId>org.apache.maven.plugins</groupId>\n\t\t              <artifactId>maven-project-info-reports-plugin</artifactId>\n\t\t            </reportPlugin>\n\t\t          </reportPlugins>\n\t\t        </configuration>\n\t\t      </plugin>\n\t\t    </plugins>\n\t\t  </build>\n\t\t  <reporting>\n\t\t    <outputDirectory>/environment/myeclipse/maven-archetype-quickstart/target/site</outputDirectory>\n\t\t  </reporting>\n\t\t</project>\n```\n2. 在maven-archetype-quickstart项目中执行 mvn help:effective-settings 可以查看到实际pom中内容如下:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- ====================================================================== -->\n<!--                                                                        -->\n<!-- Generated by Maven Help Plugin on 2018-05-16T23:35:31+08:00            -->\n<!-- See: http://maven.apache.org/plugins/maven-help-plugin/                -->\n<!--                                                                        -->\n<!-- ====================================================================== -->\n<!-- ====================================================================== -->\n<!--                                                                        -->\n<!-- Effective Settings for 'violet' on 'yexiaochaideMacBook-Pro.local'     -->\n<!--                                                                        -->\n<!-- ====================================================================== -->\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd\">\n  <localRepository>/Users/violet/.m2/repository</localRepository>\n  <pluginGroups>\n    <pluginGroup>org.apache.maven.plugins</pluginGroup>\n    <pluginGroup>org.codehaus.mojo</pluginGroup>\n  </pluginGroups>\n</settings>\n```\n3. 执行mvn help:describe得到以下错误信息，显示了正确的使用方法。\n\n```\n\t\t[ERROR] Failed to execute goal org.apache.maven.plugins:maven-help-plugin:3.0.1:describe (default-cli) on project maven-archetype-quickstart: You must specify either: both 'groupId' and 'artifactId' parameters OR a 'plugin' parameter OR a 'cmd' parameter. For instance:\n\t\t[ERROR]   # mvn help:describe -Dcmd=install\n\t\t[ERROR] or\n\t\t[ERROR]   # mvn help:describe -Dcmd=help:describe\n\t\t[ERROR] or\n\t\t[ERROR]   # mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin\n\t\t[ERROR] or\n\t\t[ERROR]   # mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin\n\t\t[ERROR] \n\t\t[ERROR] Try 'mvn help:help -Ddetail=true' for more information.\n```\n\t\t\t\t\n4. 执行mvn help:describe -Dcmd=install 显示结果如下：\n\n```\t\t\n\t\tmvn help:describe -Dcmd=install\n\t\t\n\t\t[INFO] Scanning for projects...\n\t\t[INFO] \n\t\t[INFO] ------------------------------------------------------------------------\n\t\t[INFO] Building maven-archetype-quickstart 0.0.1-SNAPSHOT\n\t\t[INFO] ------------------------------------------------------------------------\n\t\t[INFO] \n\t\t[INFO] --- maven-help-plugin:3.0.1:describe (default-cli) @ maven-archetype-quickstart ---\n\t\t[INFO] 'install' is a phase corresponding to this plugin:\n\t\torg.apache.maven.plugins:maven-install-plugin:2.4:install\n\t\t\n\t\tIt is a part of the lifecycle for the POM packaging 'jar'. This lifecycle includes the following phases:\n\t\t* validate: Not defined\n\t\t* initialize: Not defined\n\t\t* generate-sources: Not defined\n\t\t* process-sources: Not defined\n\t\t* generate-resources: Not defined\n\t\t* process-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:resources\n\t\t* compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:compile\n\t\t* process-classes: Not defined\n\t\t* generate-test-sources: Not defined\n\t\t* process-test-sources: Not defined\n\t\t* generate-test-resources: Not defined\n\t\t* process-test-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:testResources\n\t\t* test-compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile\n\t\t* process-test-classes: Not defined\n\t\t* test: org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test\n\t\t* prepare-package: Not defined\n\t\t* package: org.apache.maven.plugins:maven-jar-plugin:2.4:jar\n\t\t* pre-integration-test: Not defined\n\t\t* integration-test: Not defined\n\t\t* post-integration-test: Not defined\n\t\t* verify: Not defined\n\t\t* install: org.apache.maven.plugins:maven-install-plugin:2.4:install\n\t\t* deploy: org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy\n```\n\n\n\n\n### 2.6 由上可知\\<packaging\\>jar\\</packaging\\>的生命周期如下：\n\n\t\t* validate: Not defined\n\t\t* initialize: Not defined\n\t\t* generate-sources: Not defined\n\t\t* process-sources: Not defined\n\t\t* generate-resources: Not defined\n\t\t* process-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:resources\n\t\t* compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:compile\n\t\t* process-classes: Not defined\n\t\t* generate-test-sources: Not defined\n\t\t* process-test-sources: Not defined\n\t\t* generate-test-resources: Not defined\n\t\t* process-test-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:testResources\n\t\t* test-compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile\n\t\t* process-test-classes: Not defined\n\t\t* test: org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test\n\t\t* prepare-package: Not defined\n\t\t* package: org.apache.maven.plugins:maven-jar-plugin:2.4:jar\n\t\t* pre-integration-test: Not defined\n\t\t* integration-test: Not defined\n\t\t* post-integration-test: Not defined\n\t\t* verify: Not defined\n\t\t* install: org.apache.maven.plugins:maven-install-plugin:2.4:install\n\t\t* deploy: org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy\n\n### 第三章 一个简单的Maven项目\n\n### 3.1 规则\n>1. 当提到一个插件目标的时候，我们常常用速记符号:pluginId:goalId。 例如，当提到Archetype插件的create目标的时候，我们写 成archetype:create\n\n### 3.2 使用archetype:generate创建Maven框架项目\n\t\t\n>1. <del>mvn archetype:create</del> 方式已经过时\n>1. mvn archetype:generate 现在，使用generate选择适合模板来创建项目\n>1. mvn help:effective-pom 查看完成的pom.xml\n\n### 3.3 传递性依赖(transitive dependencies)\n\t\t\n让我们看一下你运行前面的样例的时候那些下载到你本地仓库的依赖。看一下这个目 录:~/.m2/repository/junit/junit/3.8.1/。如果你一直跟着本章的样例，那么这里会 有文件junit-3.8.1.jar 和junit-3.8.1.pom，还有Maven用来验证已下载构件准确性的 校验和文件。需要注意的是Maven不只是下载JUnit的JAR文件，它同时为这个JUnit依赖 下载了一个POM文件。Maven同时下载构件和POM文件的这种行为，对Maven支持传递性依 赖来说非常重要。\n\n### 3.4 依赖范围(dependency scope)\n\n\ttest、compile、provided\n\nSimple项目的pom.xml包含了 一个依赖——junit:junit:jar:3.8.1——范围是test。当一个依赖的范围是test的 时候，说明它在Compiler插件运行compile目标的时候是不可用的。它只有在运 行compiler:testCompile和surefire:test目标的时候才会被加入到classpath中。\n\n你也可以配置Maven，使用provided范围，让它排除WAR文件中特定的依赖。provided范 围告诉Maven一个依赖在编译的时候需要，但是它不应该被捆绑在构建的输出中。当你 开发web应用的时候provided范围变得十分有用，你需要通过Servlet API来编译你的代 码，但是你不希望Servlet API的JAR文件包含在你web应用的WEB-INF/lib目录中\n\n### 3.5 站点生成和报告 (Site Generation and Reporting)\n\n\tmvn site\n\n这将会运行site生命周期阶段。它不像默认生命周期那样，管理代码生成，操作资源， 编译，打包等等。Site生命周期只关心处理在src/site目录下的site内容，还有生成 报告。在这个命令运行过之后，你将会在target/site目录下看到一个项目web站点。载 入target/site/index.html你会看到项目站点的基本外貌\n\n### 3.6 定制站点报告\\<reporting\\>\\</reporting\\>\n```\n报告配置在<reporting></reporting>下，而插件配置在<plugins></plugins>下\n\t\nClover报告：\t检查单元测试覆盖率\nJXR报告：\t\t生成HTML源代码相互间引用，这在代码审查的时候非常有用\nPMD报告：\t\t告针对各种编码问题来分析源代码\nJDepend报告：\t分析源代码中各个包之间的依赖\n```\nMaven提供了很完整的可配置的报告，像Clover报告检 查单元测试覆盖率，JXR报告生成HTML源代码相互间引用，这在代码审查的时候非常有 用，PMD报告针对各种编码问题来分析源代码，JDepend报告分析源代码中各个包之间的 依赖。通过在pom.xml中配置那些报告被包含在构建中，站点报告就可以被定制了。\n\t\t\n### 第四章 定制一个Maven项目\n\n[Maven simple-weather示例项目Git地址]\n```\nsimple-weather相关依赖：\n\t\nLog4j\nDom4j\nJaxen\nVelocity\nMaven Exec 插件 ：  $ mvn help:describe -Dplugin=exec -Dfull\n```\n### 4.1 查看Maven项目依赖\n\n```\n1. mvn dependency:resolve\n\t\n2. mvn dependency:tree 查看依赖关系树\n\t\n3. mvn install -X  查看完整的依赖踪迹，包含那些因为冲突或者其它原因而被 拒绝引入的构件，打开 Maven 的调试标记运行\n```\n### 4.2 添加测试范围依赖\n\n```\n<project> \n \t...\n\t<dependencies> \n\t\t...\n\t\t<dependency> \n\t\t\t<groupId>org.apache.commons</groupId> \n\t\t\t<artifactId>commons-io</artifactId> \n\t\t\t<version>1.3.2</version> \n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t... \n\t</dependencies>\n</project>\n```\t\n\n### 4.3 添加单元测试资源\n\n一个单元测试需要访问针对测试的一组资源。 通常你需要在测试 classpath 中 存储一些包含期望结果的文件，以及包含模拟输入的文件。 在本项目中，我们为 YahooParserTest 准备了一个名为 ny-weather.xml 的测试 XML 文档，还有一个名为 format-expected.dat 的文件，包含了 WeatherFormatter 的期望输出。format-expected.dat文件内容如下：\n\t\n\t*********************************\n\t Current Weather Conditions for:\n\t  New York, NY, US\n\t  \n\t Temperature: 39\n\t   Condition: Fair\n\t    Humidity: 67\n\t  Wind Chill: 39\n\t*********************************\n\n预先设定了所有值，判断获取到的数据经过Velocity模板格式化之后是否和预期一致。\n\n### 4.4 执行单元测试\n\n\t1. mvn test\n\t\n\t2. 忽略测试失败：<testFailureIgnore>true</testFailureIgnore> \n\t\t<project> \n\t\t\t[...]\n\t\t\t<build> \n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin> \n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId> \n\t\t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId> \n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<testFailureIgnore>true</testFailureIgnore> \n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin> \n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t\t[...] \n\t\t</project>\n\t\n\t3. 命令行动态设置忽略测试失败：\n\tmvn test -Dmaven.test.failure.ignore=true\n\t\n\t4. 当项目的单元测试十分耗时的时候，并不是每一次执行install都需要执行单元测试的，所以我们可以设置跳过单元测试来节约时间。\n\t\t<project> \n\t\t\t[...]\n\t\t\t<build> \n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin> \n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId> \n\t\t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<skip>true</skip> \n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin> \n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t\t[...] \n\t\t</project>\n\n\t或者命令行动态设置：\n\tmvn install -Dmaven.test.skip=true\n\n### 4.5 使用Maven Assembly 插件制作软件分发包\n\t\n\t配置Maven Assembly插件：\n\t\t<project> \n\t\t\t[...]\n\t\t\t<build> \n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin> \n\t\t\t\t\t\t<artifactId>maven-assembly-plugin</artifactId>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<descriptorRefs> \n\t\t\t\t\t\t\t\t\t<descriptorRef>jar-with-dependencies</descriptorRef>\n\t\t\t\t\t\t\t</descriptorRefs> \n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin> \n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t\t[...] \n\t\t</project>\n\t\n\t如上配置好Assembly插件后，可以通过如下命令来构建：\n\tmvn install assembly:assembly\n\n\n### 第五章 一个简单的Web应用\n\n[Maven simple-weather示例项目Git地址]\n\n### 5.1 创建web应用\n\n\tmvn archetype:generate\n\t在列出的模板中选择需要的，输入数字编号。\n\n\tpom.xml文件中最根本的区别在于：\n\t<packaging>war</packaging>\n\n### 5.2 Servlet容器Jetty插件配置使用\n\n\t1. 配置Jetty插件\n\t<project> \n\t\t[...]\n\t\t<build> \n\t\t\t<finalName>simple-webapp</finalName> \n\t\t\t<plugins>\n\t\t\t\t<plugin> \n\t\t\t\t\t<groupId>org.mortbay.jetty</groupId> \n\t\t\t\t\t<artifactId>maven-jetty-plugin</artifactId>\n\t\t\t\t</plugin> \n\t\t\t</plugins>\n\t\t</build>\n\t\t[...] \n\t</project>\n\t\n\t2. 启动Jetty服务器\n\tmvn jetty:run\n\t\n### 5.3 创建和配置Servlet程序\n\n为了把servlet 添加到你的 web 应用，并且使其与请求路径匹配， 需要添加如下的 servlet 和 servlet-mapping 元素至你项目的 web.xml 文件。 文件 web.xml 可以在目录 src/main/webapp/WEB-INF 中找到。\n\t\t\n\t<!DOCTYPE web-app PUBLIC\n\t\"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\" \"http://java.sun.com/dtd/web-app_2_3.dtd\" >\n\t<web-app>\n\t\t<display-name>Archetype Created Web Application</display-name> \n\t\t<servlet>\n\t\t\t<servlet-name>simple</servlet-name>\n\t\t\t<servlet-class>org.sonatype.mavenbook.web.SimpleServlet</servlet-class> \t\n\t\t</servlet>\n\t\t<servlet-mapping>\n\t\t\t<servlet-name>simple</servlet-name>\n\t\t\t<url-pattern>/simple</url-pattern> \n\t\t</servlet-mapping>\n\t</web-app>\n\n### 5.4 添加Servlet API支持\n\n\t到目前为止，直接执行：mvn compile 会失败，因为我们还没有为web项目添加Servlet支持。\n\t\n为了编写一个 servlet ，我们需要添加 Servlet API 作为项目依赖。 Servlet 规格说明是一个 JAR 文件，它能从 Sun Microsystems 的站点下载到 http:// java.sun.com/products/servlet/download.html 。JAR 文件下载好之后你需要把它 安装到位于 ~/.m2/repository 的 Maven 本地仓库。你必须为所有 Sun Microsystems 维护的 J2EE API 重复同样的过程，包括 JNDI， JDBC， Servlet， JSP， JTA， 以 及其它。 如果你不想这么做因为觉得这样太无聊了，其实不只有你这么认为。 幸 运的是，有一种更简单的方法来下载所有这些类库并安装到本地仓库 —— Apache Geronimo 的独立的开源实现。\n\n添加像 JSP API 或者 Servlet API 这样的依赖现在很简单明了了，不再需要你从 web 站点手工下载 JAR 文件然后再安装到本地仓库。 关键是你必须知道去哪里找，使用 什么 groupId， artifactId， 和 version 来引用恰当的 Apache Geronimo 实现。给 pom.xml 添加如下的依赖元素以添加对 Servlet 规格说明 API 的依赖。.\n\n\t添加 Servlet 2.4 规格说明作为依赖：\n\t（你必须看一下Maven 的公共仓库来决定使用什么版本。 最好使用某个规格说明实现的最新版本）\n\t<project> \n\t\t[...]\n\t\t<dependencies> \n\t\t\t[...]\n\t\t\t<dependency> \n\t\t\t\t<groupId>org.apache.geronimo.specs</groupId>\n\t\t\t\t<artifactId>geronimo-servlet_2.4_spec</artifactId>\n\t\t\t\t<version>1.1.1</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency> \n\t\t</dependencies> \n\t\t[...]\n\t</project>\n\n如果你对在这个简单 web 应用编写自定义 JSP 标签感兴趣，你将需要添加对 JSP 2.0 规格说明的依赖。 使用以下配置来加入这个依赖。\n\n\t<project> \n\t\t[...]\n\t\t<dependencies> \n\t\t\t[...]\n\t\t\t<dependency> \n\t\t\t\t<groupId>org.apache.geronimo.specs</groupId>\n\t\t\t\t<artifactId>geronimo-jsp_2.0_spec</artifactId>\n\t\t\t\t<version>1.1</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\t\t</dependencies>\n\t\t[...]\n\t</project>\n\n### 5.6 运行Servlet\n\n在添加好这个 Servlet 规格说明依赖之后，运行 mvn clean install ，然后运行 mvn jetty:run\n\t\n\t\tmvn clean install\n\t\tmvn jetty:run\n\t\t\n命令行访问index.html页面，查看控制台输出：\n\n\t\tcurl http://localhost:8080/simple-webapp/simple\n\n\n### 第六章 一个多模块项目\n\n[Maven simple-weather示例项目Git地址]    \n\n[The Definitive Guide]\n\n### 6.1 多模块项目结构图父POM\n一个多模块项目通过一个父POM引用一个或多个子模块来定义，并且\\<packaging>pom\\</packaging>。如下所示：\n\t\n\t<project xmlns=\"http://maven.apache.org/POM/4.0.0\" \n\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n\t\t\t\t\t\t\thttp://maven.apache.org/maven-v4_0_0.xsd\"> \n\t\t<modelVersion>4.0.0</modelVersion>\n\t\t<groupId>org.sonatype.mavenbook.ch06</groupId>\n\t\t<artifactId>simple-parent</artifactId>\n\t\t<packaging>pom</packaging>\n\t\t<version>1.0</version>\n\t\t<name>Chapter 6 Simple Parent Project</name>\n\t\t\n\t\t<modules> \n\t\t\t<module>simple-weather</module> \n\t\t\t<module>simple-webapp</module>\n\t\t</modules>\n\t\t<build> \n\t\t\t<pluginManagement>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<source>1.5</source>\n\t\t\t\t\t\t\t<target>1.5</target>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</pluginManagement>\n\t\t</build>\n\t\t<dependencies> \n\t\t\t<dependency>\n\t\t\t\t<groupId>junit</groupId>\n\t\t\t\t<artifactId>junit</artifactId>\n\t\t\t\t<version>3.8.1</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\t\t</dependencies>\n\t</project>\n\n注意simple-parent定义了一组Maven坐 标:groupId是org.sonatype.mavenbook，artifactId是simple-parent，version是1.0。 这个父项目不像之前的项目那样创建一个JAR或者一个WAR，它仅仅是一个引用其它 Maven项目的POM。像simple-parent这样仅仅提供项目对象模型的项目，正确的的打包 类型是pom。pom.xml中下一部分列出了项目的子模块。这些模块在modules元素中定义， 每个modules元素对应了一个simple-parent/目录下的子目录。Maven知道去这些子目录 寻找pom.xml文件，并且，在构建的simp-parent的时候，它会将这些子模块包含到要构 建的项目中。\n\n最后，我们定义了一些将会被所有子模块继承的设置。simple-parent的build部 分配置了所有Java编译的目标是Java 5 JVM。因为compiler插件默认绑定到了生 命周期，我们就可以使用pluginManagement部分来配置。我们将会在后面的章节 详细讨论pluginManagement，区分为默认的插件提供配置和真正的绑定插件是很 容易的。dependencies元素将JUnit 3.8.1添加为一个全局的依赖。build配置和 dependencies都会被所有的子模块继承。使用POM继承允许你添加一些全局的依赖如 JUnit和Log4J。\n\n### 6.2 子POM\n\t\n\t每个子pom都需要定义\\<parent>标签，值全部一样。\n\t\n\t<parent>\n\t    <groupId>org.sonatype.mavenbook.optimize</groupId>\n\t    <artifactId>simple-parent</artifactId>\n\t    <version>1.0-SNAPSHOT</version>\n  \t</parent>\n\n### 6.3 构建多模块项目\n\n\t在parent-project中执行：\n\tmvn clean install\n\n### 6.4 运行多模块项目\n\t\n\t在parent-project中执行：\n\tmvn jetty:run\n\nJetty启动之后，在浏览器载入形如：http://localhost:8080/simple-webapp/weather? zip=01201，你应该看到格式化的天气输出.\n\t\n当Maven执行一个带有子模块的项目的时候，Maven首先载入父POM，然后定位所有的子 模块POM。Maven然后将所有这些项目的POM放入到一个称为Maven 反应堆(Reactor)的 东西中，由它负责分析模块之间的依赖关系。这个反应堆处理组件的排序，以确保相互 独立的模块能以适当的顺序被编译和安装。\n\n\t\n### 第七章 多模块企业级项目\n\n[Maven simple-weather示例项目Git地址]    \n\n![Maven多模块项目结构图](http://book.huihoo.com/maven-the-definitive-guide/multimodule-web-spring_projects.png)\n\n### 7.1 Hibernate项目运行\n\t\n\t1. 首先需要使用Hibernate3插件构造数据库\n\t\tmvn hibernate3:hbm2ddl\n\t2. 运行到web容器\n\t\tmvn jetty:run\n\n### 7.2 运行命令行程序\n\n\t1. 运行Maven Assembly插 件的assembly目标\n\t\tmvn assembly:assembly\n\t2. 调用Hibernate3插件的hbm2ddl目标来创建 HSQLDB数据库\n\t\tmvn hibernate3:hbm2ddl\n\t3. 运行命令行\n\t\tjava -cp target/simple-command-jar-with-dependencies.jar \\ org.sonatype.mavenbook.weather.Main 60202\n\t\t\n### 第八章 优化和重构POM\n\n### 8.1 POM清理，清理重复的内容\n### 8.2 优化依赖，被一个以上的module共同依赖的库，应该统一放入父POM的\\<dependencyManagement\\>中定义，并在这些module中删除依赖的版本\\<version>\\</version\\>\n\t例如， 优化后的父POM如下：\n\t\t<project> \n\t\t\t...\n\t\t\t<dependencyManagement> \n\t\t\t\t<dependencies>\n\t\t\t\t\t<dependency> \n\t\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t\t<artifactId>hibernate-annotations</artifactId>\n\t\t\t\t\t\t<version>3.3.0.ga</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t\t<artifactId>hibernate</artifactId>\n\t\t\t\t\t\t<version>3.3.0.ga</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t</dependencies>\n\t\t\t</dependencyManagement> \t\t\n\t\t\t...\n\t\t<project> \n\t优化后的子POM：\n\t\t<project> \n\t\t\t...\n\t\t\t<dependencies>\n\t\t\t\t<dependency> \n\t\t\t\t\t<groupId> org.hibernate</groupId>\n\t\t\t\t\t<artifactId>hibernate-annotations</artifactId>\n\t\t\t\t</dependency>\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t<artifactId>hibernate-commons-annotations</artifactId>\n\t\t\t\t</dependency>\n\t\t\t</dependencies>\n\t\t\t...\n\t\t<project> \n\t\t\t\t\n### 8.3 可预测的共通发布的相同版本号抽取。例如hibernate和hibernate-annotations的版本号总是相同的。\n\t\t\t<project> \n\t\t\t...\n\t\t\t<properties>\n\t\t\t\t<hibernate.annotations.version>3.3.0.ga<hibernate.annotations.version>\n    \t\t</properties>\n\t\t\t<dependencyManagement> \n\t\t\t\t<dependencies>\n\t\t\t\t\t<dependency> \n\t\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t\t<artifactId>hibernate-annotations</artifactId>\n\t\t\t\t\t\t<version>${hibernate.annotations.version}</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t\t<artifactId>hibernate-commons-annotations</artifactId>\n\t\t\t\t\t\t<version>${hibernate.annotations.version}</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t</dependencies>\n\t\t\t</dependencyManagement> \t\t\n\t\t\t...\n\t\t<project> \n\n### 8.4 解决兄弟module之间的依赖冲突\n\t\n\t1. 方案一：将依赖都抽象到父POM中\n\t2. 方案二：在兄弟目录中，都使用内建属性来动态获取Version。例如：${parent.version}.\n\n为兄弟项目使用内置的项目version和groupId 使用{project.version}和org.sonatype.mavenbook来引用兄弟项目。兄弟项目 基本上一直共享同样的groupId，也基本上一直共享同样的发布版本。使用0.6- SNAPSHOT可以帮你避免前面提到的兄弟版本不一致问题。\n\n### 8.5 优化插件\n\t1. 插件的版本号也可以定义成properties\n\t2. 使用Maven Dependency插件进行优化\n\t\tmvn dependency:analyze\n\t\tmvn dependency:tree\n\n### 第九章 项目对象模型\n![项目对象模型](https://images2015.cnblogs.com/blog/737467/201511/737467-20151101222148700-2134239729.png)\n\t\n\t项目对象模型包含了四类描述和配置：\n\t1. 项目总体信息 General Project Information\n\t2. 构建设置 Build Settings\n\t3. 构建环境 Build Environment\n\t \t构建环境包含了一些能在不同使用环境中激活的profile。例如，在开发过程 中你可能会想要将应用部署到一个而开发服务器上，\n\t \t而在产品环境中你会需要将 应用部署到产品服务器上。构建环境为特定的环境定制了构建设置，\n\t \t通常它还会 由~/.m2中的自定义settings.xml补充。这个settings文件将会在第 11 章\n\t \t构建 Profile中，以及第 A.1 节 “简介中”的附录 A,附录: Settings细节小节中 讨论。\n\t4. POM关系 POM Relationships\n\n### 9.1 超级POM\n\t\n\t超级POM位置：\n\t/usr/local/maven/lib/maven-2.0.9-uber.jar中的包org.apache.maven.project目录下pom-4.0.0.xml\n\t\n### 9.2 项目版本号\nMaven中的版本包含 了以下部分:主版本，次版本，增量版本，和限定版本号\n\n\t版本号格式： <major version>.<minor version>.<incremental version>-<qualifier>\n\n版本“1.3.5”由一个主版本1，一个次版本3，和一个增量版本5。而一个 版本“5”只有主版本5，没有次版本和增量版本。限定版本用来标识里程碑构建: alpha和beta发布，限定版本通过连字符与主版本，次版本或增量版本隔离。例如，版 本“1.3-beta-01”有一个主版本1，次版本3，和一个限定版本“beta-01”\t\n\n当你想要在你的POM中使用版本界限的时候，保持你的版本号与标准一致十分重要。 在第 9.4.3 节 “依赖版本界限”中介绍的版本界限，允许你声明一个带有版本界限的 依赖，只有你遵循标准的时候该功能才被支持。因为Maven根据本节中介绍的版本号格 式来对版本进行排序。\n\n如果你的版本号与格式<主版本>.<次版本>.<增量版本>-<限定版本>相匹配，它就能被 正确的比较;“1.2.3”将被评价成是一个比“1.0.2”更新的构件，这种比较基于主版 本，次版本，和增量版本的数值。如果你的版本发布号没有符合本节介绍的标准，那么 你的版本号只会根据字符串被比较;“1.0.1b”和“1.2.0b”会使用字符串比较。\n\n### 9.3 构建版本号\n\n我们还需要对版本号的限定版本进行排序。以版本号“1.2.3-alpha-2”和“1.2.3- alpha-10”为例，这里“alpha-2”对应了第二次alpha构建，而“alpha-10”对应了第 十次alpha构建。虽然“alpha-10”应该被认为是比“alpha-2”更新的构建，但Maven 排序的结果是“alpha-10”比“alpha-2”更旧，问题的原因就是我们刚才讨论的Maven 处理版本号的方式。\n\nMaven会将限定版本后面的数字认作一个构建版本。换句话说，这里限定版本 是“alpha”，而构建版本是2。虽然Maven被设计成将构建版本和限定版本分离，但 目前这种解析还是失效的。因此，“alpha-2”和“alpha-10”是使用字符串进行比较 的，而根据字母和数字“alpha-10”在“alpha-2”前面。要避开这种限制，你需要对 你的限定版本使用一些技巧。如果你使用“alpha-02”和“alpha-10”，这个问题就消 除了，一旦Maven能正确的解析版本构建号之后，这种工作方式也还是能用。\n\n### 9.4 SNAPSHOT版本\n\t只能用于开发阶段，默认不会从远程仓库查找，但也可以通过设置来允许上传到远程仓库。\n\n### 9.5 LATEST 和 RELEASE 版本\n\t不建议使用，在开发阶段方便，但也可以能因为遗忘疏忽带来意想不到的后果。\n\n### 9.6 变量和属性引用\n\n一、变量引用\n\nMaven提供了三个隐式的变量，可以用来访问环境变量、POM信息和Maven Settings：\n\n1. env \t\t暴露了你操作系统或者shell的环境变量\n2. project\tproject变量暴露了POM。你可以使用点标记(.)的路径来引用POM元素的值。\n\t\t\t\n\t\t例如，在本节中我们使用过groupId和artifactId来设置构建配置 中的finalName元素。\n\t\t这个属性引用的语法是:org.sonatype.mavenbook- ${project.artifactId}\t\n3. settings\t暴露了Maven settings信息。可以使用点标记(.)的路径来引用settings.xml文件中元素的值\n\t\n\t\t例如，${settings.offline}会引用~/.m2/ settings.xml文件中offline元素的值\n\n二、属性引用\n\n除了上面这三个隐式的变量，你还可以引用系统属性，以及任何在Maven POM中和构建\nprofile中自定义的属性组\n\n1. 系统属性\n\t\n\t\tJava系统属性 \n\t\t所有可以通过java.lang.System中getProperties()方法访问的属性都被暴露成POM属性。\n\t\t一些系统属性的例子是:hudson，/home/hudson，/usr/lib/jvm/ java-1.6.0-openjdk-1.6.0.0/jre，\n\t\t和Linux。一个完整的系统属性列表可以 在java.lang.System类的Javadoc中找到。\n\t\t\n\t\t我们还可以通过pom.xml或者settings.xml中的properties元素设置自己的属 性，\n\t\t或者还可以使用外部载入的文件中属性。如果你在pom.xml中设置了一个名 为fooBar的属性，\n\t\t该属性就可以通过${fooBar}引用。当你构建一个系统，它针 对不同的部署环境过滤资源，\n\t\t那么自定义属性就变得十分有用。这里是在POM中 设置${foo}=bar的语法:\n\t\t<properties> \n\t\t\t<foo>bar</foo>\n\t\t</properties>\n\t\n2. Maven POM中自定义的属性组\n3. 构建profile中自定义的属性组\n\n### 9.7 依赖范围\n依赖范围控制哪些依赖在哪些classpath中可用，哪些依赖包含在一个应用中\n\n|依赖范围|描述|代码示例|\n|----|------|----|\n|compile(编译范围)|compile是默认的范围;如果没有提供一个范围，那该依赖的范围就是编译范 围。编译范围依赖在所有的classpath中可用，同时它们也会被打包。|\\<scope>compile\\</scope>|\n|provided(已提供范围)|provided依赖只有在当JDK或者一个容器已提供该依赖之后才使用。例如，如果 你开发了一个web应用，你可能在编译classpath中需要可用的Servlet API来编 译一个servlet，但是你不会想要在打包好的WAR中包含这个Servlet API;这个 Servlet API JAR由你的应用服务器或者servlet容器提供。已提供范围的依赖在 编译classpath(不是运行时)可用。它们不是传递性的，也不会被打包|\\<scope>compile\\</scope>|\n|runtime(运行时范围)|runtime依赖在运行和测试系统的时候需要，但在编译的时候不需要。比如，你 可能在编译的时候只需要JDBC API JAR，而只有在运行的时候才需要JDBC驱动实 现。|\\<scope>compile\\</scope>|\n|test(测试范围)|test范围依赖 在一般的 编译和运行时都不需要，它们只有在测试编译和测试运 行阶段可用。测试范围依赖在之前介绍过|\\<scope>compile\\</scope>|\n|system(系统范围)|system范围依赖与provided类似，但是你必须显式的提供一个对于本地系统中 JAR文件的路径。这么做是为了允许基于本地对象编译，而这些对象是系统类库 的一部分。这样的构件应该是一直可用的，Maven也不会在仓库中去寻找它。如 果你将一个依赖范围设置成系统范围，你必须同时提供一个systemPath元素。注 意该范围是不推荐使用的(你应该一直尽量去从公共或定制的Maven仓库中引用 依赖)|\\<scope>compile\\</scope>|\n||||\n|可选依赖|编译这个项目的时候你需要两个依赖类库EHCache和SwarmCache，但是你不希望在使用你类库的项 目中，这两个依赖类库同时作为传递性运行时依赖出现。<b>在理想的世界中，你不需要使用可选依赖。</b>你可以将EHCache相关的代码放到my- project-ehcache子模块中，将SwarmCache相关的代码放到my-project-swarmcache子模 块中，而非创建一个带有一系列可选依赖的大项目。这样，其它项目就可以只引用特定 实现的项目，发挥传递性依赖的功效，而不用去引用my-project项目，再自己声明特定 的依赖。|\\<dependency><br>\\<groupId>swarmcache\\</groupId> \\<artifactId>swarmcache\\</artifactId><br>\\<version>1.0RC2\\</version><font color=\"red\"><br>\\<optional>true\\</optional></font><br>\\</dependency>|\n\n### 9.8 依赖版本界限\n你并不是必须为依赖声明某个特定的版本，你可以指定一个满足给定依赖的版本界限。\n\n例如，你可以指定你的项目依赖于JUnit的3.8或以上版本，或者说依赖于JUnit 1.2.10 和1.2.14之间的某个版本。你可以使用如下的字符来围绕一个或多个版本号，来实现版 本界限。\n\n|版本界限字符|示例|描述|\n|----|----|----|\n|(,) 不包含量词|(1.2.3,2.5.8)|支持从1.2.3到2.5.8之间的所有版本,开区间|\n|[,] 包含量词|[1.2.3,2.5.8]|支持从1.2.3到2.5.8之间的所有版本,闭区间|\n||[1.2.3,2.5.8)|支持从1.2.3到2.5.8之间的所有版本,左闭右开区间|\n||(1.2.3,2.5.8]|支持从1.2.3到2.5.8之间的所有版本,左开右闭区间|\n||[1.2.3,)|支持所有大于1.2.3的版本|\n||(,2.5.8]|支持所有小于2.5.8的版本|\n||[1.2.3]|只支持1.2.3版本|\n\n### 9.9 传递性依赖和范围\n\n“依赖范围”中提到的每种依赖范围不仅仅影响声明项目中的依赖范围，它也对所传递性依赖起作用。表达该信息最简单的方式是通过一张表来表述：<b>范围如何影响传递性依赖</b>\n\n|直接范围|传递性范围||||\n|----|----|----|----|----|\n||<b>compile</b>|<b>provided</b>|<b>runtime</b>|<b>test</b>|\n|<b>compile</b>|compile|-|runtime|-|\n|<b>provided</b>| provided |provided| provided |-|\n|<b>runtime</b>| runtime |-|runtime|-|\n|<b>test</b>| test |-|test|-|\n\n\tA----compile---->B   B----compile---->C   结果： A---->compile---->C \n\tA----compile---->B   B----provided--->C   结果： A---->不依赖于---->C\n\tA----compile---->B   B----runtime---->C   结果： A---->runtime---->C  \n\tA----compile---->B   B----test------->C   结果： A---->不依赖于---->C  \n\n\tA----provided--->B   B----compile---->C   结果： A---->provided---->C \n\tA----provided--->B   B----provided--->C   结果： A---->provided---->C\n\tA----provided--->B   B----runtime---->C   结果： A---->provided---->C  \n\tA----provided--->B   B----test------->C   结果： A---->不依赖于----->C\n\t\n\tA----runtime---->B   B----compile---->C   结果： A---->runtime---->C \n\tA----runtime---->B   B----provided--->C   结果： A---->不依赖于---->C\n\tA----runtime---->B   B----runtime---->C   结果： A---->runtime---->C  \n\tA----runtime---->B   B----test------->C   结果： A---->不依赖于---->C  \n\t\n\tA------test----->B   B----compile---->C   结果： A----->test----->C \n\tA------test----->B   B----provided--->C   结果： A---->不依赖于---->C\n\tA------test----->B   B----runtime---->C   结果： A----->test----->C  \n\tA------test----->B   B----test------->C   结果： A---->不依赖于---->C  \n\n### 9.10 冲突解决-排除一个传递性依赖\n排除一个传递性依赖：\\<exclusion>\\</exclusion>\n\n\t<dependency> \n\t\t<groupId>org.sonatype.mavenbook</groupId>\n\t\t<artifactId>project-a</artifactId> \n\t\t<version>1.0</version>\n\t\t<exclusions>\n\t\t\t<exclusion> \n\t\t\t\t<groupId>org.sonatype.mavenbook</groupId> \n\t\t\t\t<artifactId>project-b</artifactId>\n\t\t\t</exclusion> \n\t\t</exclusions>\n\t</dependency>\n\n排除并替换一个传递性依赖    \n其实就是排除一个传递性依赖，然后再添加一个同样的依赖来起到替换的作用\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t<artifactId>hibernate</artifactId>\n\t\t\t<version>3.2.5.ga</version>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<groupId>javax.transaction</groupId> \n\t\t\t\t\t<artifactId>jta</artifactId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.geronimo.specs</groupId>\n\t\t\t<artifactId>geronimo-jta_1.1_spec</artifactId>\n\t\t\t<version>1.1</version>\n\t\t</dependency> \n\t</dependencies>\n\t\n\n四种可能需要排除替换的情况：\n\n1. 构建的groupId和artifactId已经更改了，而当前的项目需要一个与传递性 依赖不同名称的版本——结果是classpath中出现了同样项目的两份内容。 一般来说Maven会捕捉到这种冲突并且使用该项目的一个单独的版本，但是 当artifactId和artifactId不一样的时候，Maven就会认为它们是两种不同的类 库。\n2. 某个构件没有在你的项目中被使用，而且该传递性依赖没有被标志为可选依赖。 在这种情况下，你可能想要排除这种依赖，因为它不是你的系统需要的东西，你 要尽量减少应用程序分发时的类库数目。\n3. 一个构件已经在运行时的容器中提供了，因此不应该被包含在你的构件中。该情 况的一个例子是，如果一个依赖依赖于如Servlet API的东西，并且你又要确保 这样的依赖没有包含在web应用的WEB-INF/lib目录中。\n4. 为了排除一个可能是多个实现的API的依赖。这种情况在例 9.8 “排除并替换一 个传递性依赖”中阐述;有一个Sun API，需要点击许可证，并且需要耗时的手 工安装到自定义仓库，对于同样的API有可免费分发版本，在中央Maven仓库中可 用(Geronimo's JTA 实现)\n\n### 9.11 依赖管理\n\n父POM中dependencyManagement元素中为你提供了一种方式来统一依赖版本号，使用pom.xml中的dependencyManagement元素能让你在子项目中引用一个依赖而不用显式的列出版本号。\n\n注意：如果子项目定义了一个版本，它将覆盖顶层POM 的dependencyManagement元素中的版本。那就是:只有在子项目没有直接声明一个版本 的时候，dependencyManagement定义的版本才会被使用。\n\n### 9.12 项目继承\n\nPOM继承关系图：\n\n![POM继承关系图](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1527092792721&di=c572597d764f196d1dd77148ae07808b&imgtype=jpg&src=http%3A%2F%2Fimg1.imgtn.bdimg.com%2Fit%2Fu%3D2335801681%2C471830450%26fm%3D214%26gp%3D0.jpg)\n\n有些情况你会想要一个项目从父POM中继承一些值。你可能正构建一个大型的系统，你 不想一遍又一遍的重复同样的依赖元素。如果你的项目通过parent元素使用继承，你 就可以避免这种重复。当一个项目声明一个parent的时候，它从父项目的POM中继承信 息。它也可以覆盖父POM中的值，或者添加一些新的值。\n\n所有的Maven POM从父POM中继承值。如果一个POM没有通过parent元素指定一个直 接的父项目，那这个POM就会从超级POM继承值。\n\n\t项目继承方式如下：\n\t<project> \n\t\t<parent>\n\t\t\t<groupId>com.training.killerapp</groupId>\n\t\t\t<artifactId>a-parent</artifactId>\n\t\t\t<version>1.0-SNAPSHOT</version>\n\t\t</parent> \n\t\t<artifactId>project-a</artifactId> \n\t\t...\n\t</project>\n\t\n当一个项目指定一个父项目的时候，Maven在读取当前项目的POM之前，会使用这个 父POM作为起始点。它继承所有东西，包括groupId和version。你会注意到project- a没有指定groupId和version，它们从a-parent继承而来。有了parent元素，一个 POM就只需要定义一个artifactId。但这不是强制的，project-a可以有一个不同 的groupId和version，但如果不提供值，Maven就会使用在父POM中指定的值。如果你 开始使用Maven来管理和构建大型的多模块项目，你就会常常创建许多共享一组通用 的groupId和version的项目。\n\n当你继承一个POM，你可以选择直接使用继承的POM信息，或者选择覆盖它。以下是一个 Maven POM从它父POM中继承的项目列表:\n\n1. 定义符(groupId和artifactId中至少有一个必须被覆盖) \n2. 依赖\n3. 开发者和贡献者\n4. 插件列表\n5. 报告列表\n6. 插件执行 (id匹配的执行会被合并) \n7. 插件配置\n\n### 9.13 POM 最佳实践\n\n1. 创建一个集中管理依赖的pom项目 baseDeps 关键在于：<b>\\<packaing>pom\\</packaging></b>\n\t\n\t\t<project>\n\t\t\t<groupId>org.sonatype.mavenbook</groupId>\n\t\t\t<artifactId>persistence-deps</artifactId>\n\t\t\t<version>1.0</version>\n\t\t\t<packaging>pom</packaging>\n\t\t\t<dependencies>\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t<artifactId>hibernate</artifactId>\n\t\t\t\t\t<version>${hibernateVersion}</version>\n\t\t\t\t</dependency>\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t\t\t<artifactId>hibernate-annotations</artifactId>\n\t\t\t\t\t<version>${hibernateAnnotationsVersion}</version>\n\t\t\t\t</dependency>\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>org.springframework</groupId>\n\t\t\t\t\t<artifactId>spring-hibernate3</artifactId>\n\t\t\t\t\t<version>${springVersion}</version>\n\t\t\t\t</dependency>\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>mysql</groupId>\n\t\t\t\t\t<artifactId>mysql-connector-java</artifactId>\n\t\t\t\t\t<version>${mysqlVersion}</version>\n\t\t\t\t</dependency>\n\t\t\t</dependencies>\n\t\t\t<properties>\n\t\t\t\t<mysqlVersion>(5.1,)</mysqlVersion>\n\t\t\t\t<springVersion>(2.0.6,)</springVersion>\n\t\t\t\t<hibernateVersion>3.2.5.ga</hibernateVersion>\n\t\t\t\t<hibernateAnnotationsVersion>3.3.0.ga</hibernateAnnotationsVersion>\n\t\t\t</properties>\n\t\t</project>\n\n2. 执行mvn install  将baseDeps pom类型项目安装到maven仓库。\n3. 在其他项目中声明对baseDeps项目的依赖，关键在于\\<type>pom\\</type>\n\n\t\t<project>\n\t\t\t<description>This is a project requiring JDBC</description>\n\t\t\t...\n\t\t\t<dependencies>\n\t\t\t\t...\n\t\t\t\t<dependency>\n\t\t\t\t\t<groupId>org.sonatype.mavenbook</groupId>\n\t\t\t\t\t<artifactId>baseDeps</artifactId>\n\t\t\t\t\t<version>1.0</version>\n\t\t\t\t\t<type>pom</type>\n\t\t\t\t</dependency>\n\t\t\t</dependencies>\n\t\t</project>\n4. 继承 VS 多模块\n\n\t![继承 VS 多模块](https://books.sonatype.com/mvnref-book/reference/figs/web/pom_book-example.png)\n\n5. 多模块企业级项目\n\n\t![实际应用多模块企业级项目](https://books.sonatype.com/mvnref-book/reference/figs/web/pom_real_multi.png)\n\n### 第十章 构建生命周期\n\n### 第十一章 构建Profile\n\n### 11.1 什么是构建Profile\n\nProfile能让你为一个特殊的环境自定义一个特殊的构建;profile使得不同环境间构建 的可移植性成为可能。\n\nProfile可以配置package信息: debug, log等\nProfile可以配置生产环境信息: develop版本，product版本，release版本等\nProfile可以配置渠道信息：googleplay，360，豌豆荚等\n更多的时候渠道分发包，使用Assembly插件来构建是非常适合的。\n\nProfile类似gradle中的 Flavors配置，可以配置打出不同的包。\n\nMaven中的profile是一组可选的配置，可以用来设置或者覆盖配置默认值。有了 profile，你就可以为不同的环境定制构建。profile可以在pom.xml中配置，并给定一 个id。然后你就可以在运行Maven的时候使用的命令行标记告诉Maven运行特定profile 中的目标。以下pom.xml使用production profile覆盖了默认的Compiler插件设置。\n\n\t<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n\thttp://maven.apache.org/maven-v4_0_0.xsd\">\n\t\t<modelVersion>4.0.0</modelVersion>\n\t\t<groupId>org.sonatype.mavenbook</groupId>\n\t\t<artifactId>simple</artifactId>\n\t\t<packaging>jar</packaging>\n\t\t<version>1.0-SNAPSHOT</version>\n\t\t<name>simple</name>\n\t\t<url>http://maven.apache.org</url>\n\t\t<dependencies>\n\t\t\t<dependency>\n\t\t\t\t<groupId>junit</groupId>\n\t\t\t\t<artifactId>junit</artifactId>\n\t\t\t\t<version>3.8.1</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\t\t</dependencies>\n\t\t<profiles>\n\t\t\t...\n\t\t\t<profile>\n\t\t\t\t<id>production</id>\n\t\t\t\t...\n\t\t\t\t<build>\n\t\t\t\t\t...\n\t\t\t\t\t<plugins>\n\t\t\t\t\t\t<plugin>\n\t\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t\t<debug>false</debug>\n\t\t\t\t\t\t\t\t<optimize>true</optimize>\n\t\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t</plugin>\n\t\t\t\t\t</plugins>\n\t\t\t\t</build>\n\t\t\t</profile>\n\t\t</profiles>\n\t</project>\n\n### 11.2 profile的语法\n|序号|描述|\n|----|----|\n|1|pom.xml中的profiles元素，它包含了一个或者多个profile元素。由于profile覆 盖了pom.xml中的默认设置，profiles通常是pom.xml中的最后一个元素。|\n|2|每个profile必须要有一个id元素。这个id元素包含的名字将在命令行调用profile 时被用到。我们可以通过传给Maven一个-P<profile_id>参数来调用profile。|\n|3|一个profile元素可以包含很多其它元素，只要这些元素可以出现在POM XML文档 的project元素下面。本例中，我们覆盖了Compiler插件的行为，因此必须覆盖插 件配置，该配置通常位于一个build和一个plugins元素下面|\n|4|我们覆盖了Maven Compiler插件的配置。确保通过production profile产生的字 节码不会包含调试信息，并且字节码会被编译器优化|\n\n要使用production profile来运行mvn install，你需要在命令行传入-Pproduction参 数。要验证production profile覆盖了默认的Compiler插件配置，可以像这样以开启调 试输出(-X) 的方式运行Maven。\n\n\tmvn clean install -Pproduction -X\n\t\nProfile中允许覆盖整个pom.xml，其节点可以如下：\n\n\t<project>\n\t\t<profiles>\n\t\t\t<profile>\n\t\t\t\t<build>\n\t\t\t\t\t<defaultGoal>...</defaultGoal>\n\t\t\t\t\t<finalName>...</finalName>\n\t\t\t\t\t<resources>...</resources>\n\t\t\t\t\t<testResources>...</testResources>\n\t\t\t\t\t<plugins>...</plugins>\n\t\t\t\t</build>\n\t\t\t\t<reporting>...</reporting>\n\t\t\t\t<modules>...</modules>\n\t\t\t\t<dependencies>...</dependencies>\n\t\t\t\t<dependencyManagement>...</dependencyManagement>\n\t\t\t\t<distributionManagement>...</distributionManagement>\n\t\t\t\t<repositories>...</repositories>\n\t\t\t\t<pluginRepositories>...</pluginRepositories>\n\t\t\t\t<properties>...</properties>\n\t\t\t</profile>\n\t\t</profiles>\n\t</project>\n\n### 11.3 激活Profile\n\n\t当jdk为1.6时，jdk16这个profile会被激活（activation）\n\t<profiles>\n\t\t<profile>\n\t\t\t<id>jdk16</id>\n\t\t\t<activation>\n\t\t\t\t<jdk>1.6</jdk>\n\t\t\t</activation>\n\t\t\t<modules>\n\t\t\t\t<module>simple-script</module>\n\t\t\t</modules>\n\t\t</profile>\n\t</profiles>\n\t\n### 11.4 当所有条件满足时才会激活Profile\n\n\t<project>\n\t\t...\n\t\t<profiles>\n\t\t\t<profile>\n\t\t\t\t<id>dev</id>\n\t\t\t\t<activation>\n\t\t\t\t\t<activeByDefault>false</activeByDefault>\n\t\t\t\t\t<jdk>1.5</jdk>\n\t\t\t\t\t<os>\n\t\t\t\t\t\t<name>Windows XP</name>\n\t\t\t\t\t\t<family>Windows</family>\n\t\t\t\t\t\t<arch>x86</arch>\n\t\t\t\t\t\t<version>5.1.2600</version>\n\t\t\t\t\t</os>\n\t\t\t\t\t<property>\n\t\t\t\t\t\t<name>mavenVersion</name>\n\t\t\t\t\t\t<value>2.0.5</value>\n\t\t\t\t\t</property>\n\t\t\t\t\t<file>\n\t\t\t\t\t\t<exists>file2.properties</exists>\n\t\t\t\t\t\t<missing>file1.properties</missing>\n\t\t\t\t\t</file>\n\t\t\t\t</activation>\n\t\t\t\t...\n\t\t\t</profile>\n\t\t</profiles>\n\t</project>\n\t\n### 11.5 属性缺失时激活Profile\n\n\t<project>\n\t\t...\n\t\t<profiles>\n\t\t\t<profile>\n\t\t\t\t<id>development</id>\n\t\t\t\t<activation>\n\t\t\t\t\t<property>\n\t\t\t\t\t\t<name>!environment.type</name>\n\t\t\t\t\t</property>\n\t\t\t\t</activation>\n\t\t\t</profile>\n\t\t</profiles>\n\t</project>\n\t\n### 11.6 外部Profile，将pom.xml中profile抽取成单独的profile.xml\n\n\t<profiles>\n\t<profile>\n\t\t<id>development</id>\n\t\t<build>\n\t\t\t<plugins>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<debug>true</debug>\n\t\t\t\t\t\t<optimize>false</optimize>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</build>\n\t</profile>\n\t<profile>\n\t\t<id>production</id>\n\t\t<build>\n\t\t\t<plugins>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<debug>false</debug>\n\t\t\t\t\t\t<optimize>true</optimize>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</build>\n\t</profile>\n\t</profiles>\n\n### 11.7 Settings Profile\n\nSettings Profile可以同时应用到你的所有maven构建中，就相当于默认profile,可以在以下两个地方定义Settings Profile。\n\t\n\t1. 定义在 ~/.m2/settings.xml中\n\t2. 定义在 /usr/local/maven/conf/settings.xml中\n配置方式如：\n\t\n\t<settings>\n\t\t<profiles>\n\t\t\t<profile>\n\t\t\t\t<id>dev</id>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-jar-plugin</artifactId>\n\t\t\t\t\t<executions>\n\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t<goal>sign</goal>\n\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t</execution>\n\t\t\t\t\t</executions>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<keystore>/home/tobrien/java/keystore</keystore>\n\t\t\t\t\t\t<alias>tobrien</alias>\n\t\t\t\t\t\t<storepass>s3cr3tp@ssw0rd</storepass>\n\t\t\t\t\t\t<signedjar>\n\t\t\t\t\t\t\t/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/c\n\t\t\t\t\t\t</signedjar>\n\t\t\t\t\t\t<verify>true</verify>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t</profile>\n\t\t</profiles>\n\t</settings>\n\n\n### 11.8 列出活动的Profiles\n\n\tmvn help:active-profiles\n\t\n### 11.9 可以通过default profile来设定一些属性值\n\n\t例如：下面设置了一个activeByDefault = true的profile，并且将environment.type设置成dev。以后我们可以在pom.xml中根据environment.type是否等于dev来执行一些逻辑。\n\t<settings>\n\t\t<profiles>\n\t\t\t<profile>\n\t\t\t\t<activation>\n\t\t\t\t\t<activeByDefault>true</activeByDefault>\n\t\t\t\t</activation>\n\t\t\t\t<properties>\n\t\t\t\t\t<environment.type>dev</environment.type>\n\t\t\t\t</properties>\n\t\t\t</profile>\n\t\t</profiles>\n\t</settings>\n\n\n### Maven套件\n\nMarkdown文件中图片制作与超链接获取\n\n\n### 1. 上传图片到印象笔记\n\t\t1. 登陆《印象笔记》和《圈点》\n\t\t2. 打开印象笔记《圈点》\n\t\t3. 在圈点中编辑图片，然后点击同步。\n\t\t4. 打开《印象笔记》，找到刚才用《圈点》编辑并同步的图片笔记，不要打开。\n\t\t5. 在笔记上点击鼠标右键-->复制笔记链接\n\t\t6. 在浏览器中打开此链接\n\t\t7. 在打开的网页中需要的图片上点击鼠标右键-->复制图片地址\n\t\t8. 制作成如下图片链接样式即可  ![定义一个图片名称](复制的图片地址)\n\n### 2. 上传笔记到简书\n\t\t1. control + c 复制准备好的图片\n\t\t2. 登陆《简书》\n\t\t3. 点击-->写文章-->新建文章-->control + v 粘贴图片到文章编辑框，并等待上传，\n \t\t   上传完成之后会在文章编辑框生成 markdown 图片链接。直接拷贝到markdown文档中即可。\n\n### 3. 上传图片到其他图片服务器\n\n\n[okhttp官方github]:https://github.com/square/okhttp\n[Linux命令大全]:http://man.linuxde.net\n[计算机书籍在线阅读]:https://books.sonatype.com/\n[Maven权威指南在线阅读]:https://www.sonatype.com/\n[Maven plugins列表]:https://maven.apache.org/plugins/index.html\n[Maven常用插件]:http://iffiffj.iteye.com/blog/1661936\n[Maven simple-weather示例项目Git地址]:https://github.com/Farubaba/simple-example\n[The Definitive Guide]:http://book.huihoo.com/maven-the-definitive-guide/multimodule-web-spring.html\n\n\n\n","slug":"Maven权威指南笔记","published":1,"updated":"2018-08-09T09:57:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmn77hl40062js6sdtf0bsva","content":"<h3 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h3><blockquote>\n<ol>\n<li><a href=\"http://man.linuxde.net\" target=\"_blank\" rel=\"noopener\">Linux命令大全</a></li>\n<li>Maven权威指南</li>\n<li><a href=\"https://maven.apache.org/plugins/index.html\" target=\"_blank\" rel=\"noopener\">Maven plugins列表</a></li>\n<li><a href=\"http://iffiffj.iteye.com/blog/1661936\" target=\"_blank\" rel=\"noopener\">Maven常用插件</a></li>\n</ol>\n</blockquote>\n<h3 id=\"Maven关键概念汇总\"><a href=\"#Maven关键概念汇总\" class=\"headerlink\" title=\"Maven关键概念汇总\"></a>Maven关键概念汇总</h3><blockquote>\n<ol>\n<li>插件 Maven Plugin</li>\n<li>目标 goal 和 目标前缀 goal Prefix</li>\n<li>坐标(coordinates) 由 groupId，artifactId, packaging, version 共同确定</li>\n<li>构建生命周期 build Lifecycle</li>\n<li>生命周期阶段 phase</li>\n<li>标准目录结构 Maven Standard Directory Layout</li>\n<li>项目对象模型 Project Object Model</li>\n<li>约定优于配置 Convention Over Configuration</li>\n<li>Maven仓库 (repositories)</li>\n<li>依赖管理 (dependency management)</li>\n<li>使用maven help插件的mvn help:describe来查看其它插件、目标或者命令的描述：<blockquote>\n<ol>\n<li>mvn help:describe -Dcmd=install</li>\n<li>mvn help:describe -Dcmd=help:describe</li>\n<li>mvn help:describe -Dplugin=compiler   <font color=\"#DC524A\">compiler是一个插件</font></li>\n<li>mvn help:describe -Dcmd=compile  <font color=\"#DC524A\">compile是compiler插件的一个目标</font></li>\n<li>mvn help:describe -Dplugin=comp iler -Dmojo=compile -Dfull</li>\n<li>mvn help:describe -Dplugin=help </li>\n<li>mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin</li>\n<li>mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin</li>\n<li>查看help插件的描述: mvn help:describe -Dplugin=help</li>\n<li>查看更详细的细节+1: mvn help:describe -Dplugin=help -Dfull</li>\n<li>查看更详细的细节+2: mvn help:help -Ddetail=true</li>\n<li>查看更详细的细节+2: mvn help:describe -Dplugin=help -Ddetail=true</li>\n<li>Dmojo指定插件目标：mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull</li>\n</ol>\n</blockquote>\n</li>\n<li>“-D<name>=<value>“这种格式不是Maven定义的，它其实是Java用来设置系统属性的方式，可以通过“java -help”查看 Java的解释。Maven的bin目录下的脚本文件仅仅是把属性传入Java而已</value></name></li>\n<li>传递性依赖(transitive dependencies)</li>\n<li>依赖范围(dependency scope) : test、compile、provided</li>\n<li>站点生成和报告 (Site Generation and Reporting) : mvn site</li>\n<li>Maven Assembly 是一个用来创建你应用程序特有分发包的插件。</li>\n</ol>\n</blockquote>\n<h3 id=\"POM-xml标准标签格式-Profile中也可以包含全部这些标签\"><a href=\"#POM-xml标准标签格式-Profile中也可以包含全部这些标签\" class=\"headerlink\" title=\"POM.xml标准标签格式, Profile中也可以包含全部这些标签\"></a>POM.xml标准标签格式, Profile中也可以包含全部这些标签</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;project&gt;</span><br><span class=\"line\">\t&lt;build&gt;</span><br><span class=\"line\">\t\t&lt;defaultGoal&gt;...&lt;/defaultGoal&gt;</span><br><span class=\"line\">\t\t&lt;finalName&gt;...&lt;/finalName&gt;</span><br><span class=\"line\">\t\t&lt;resources&gt;...&lt;/resources&gt;</span><br><span class=\"line\">\t\t&lt;testResources&gt;...&lt;/testResources&gt;</span><br><span class=\"line\">\t\t&lt;plugins&gt;...&lt;/plugins&gt;</span><br><span class=\"line\">\t&lt;/build&gt;</span><br><span class=\"line\">\t&lt;reporting&gt;...&lt;/reporting&gt;</span><br><span class=\"line\">\t&lt;modules&gt;...&lt;/modules&gt;</span><br><span class=\"line\">\t&lt;dependencies&gt;...&lt;/dependencies&gt;</span><br><span class=\"line\">\t&lt;dependencyManagement&gt;...&lt;/dependencyManagement&gt;</span><br><span class=\"line\">\t&lt;distributionManagement&gt;...&lt;/distributionManagement&gt;</span><br><span class=\"line\">\t&lt;repositories&gt;...&lt;/repositories&gt;</span><br><span class=\"line\">\t&lt;pluginRepositories&gt;...&lt;/pluginRepositories&gt;</span><br><span class=\"line\">\t&lt;properties&gt;...&lt;/properties&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"相关名称总汇：\"><a href=\"#相关名称总汇：\" class=\"headerlink\" title=\"相关名称总汇：\"></a>相关名称总汇：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IOC容器：Plexus、Guice、Spring</span><br><span class=\"line\">Struts、Tapesty、Wicket、JSF、Waffle、Hibernate、Velocity</span><br></pre></td></tr></table></figure>\n<h3 id=\"第一章-介绍Apache-Maven\"><a href=\"#第一章-介绍Apache-Maven\" class=\"headerlink\" title=\"第一章 介绍Apache Maven\"></a>第一章 介绍Apache Maven</h3><h3 id=\"1-1-Maven是什么？\"><a href=\"#1-1-Maven是什么？\" class=\"headerlink\" title=\"1.1 Maven是什么？\"></a>1.1 Maven是什么？</h3><p>Maven是一个构建工具，一个项目管理工具。</p>\n<p>像Ant这样的构建工具只关注预处理，编译，打包，测试和分发。Maven不仅关注预处理，编译，打包，测试和分发，还可以生成报告， 生成Web站点，并且帮助推动工作团队成员间的交流。</p>\n<p>一个更正式的 Apache Maven1 的定义: Maven是一个项目管理工具，它包含了一个项 目对象模型 (Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在 生命周期阶段(phase)中插件(plugin)目标(goal)的逻辑。 当你使用Maven的时候，你 用一个明确定义的项目对象模型来描述你的项目，然后 Maven 可以应用横切的逻辑， 这些逻辑来自一组共享的(或者自定义的)插件        </p>\n<h3 id=\"1-2-约定优于配置-Convention-Over-Configuration\"><a href=\"#1-2-约定优于配置-Convention-Over-Configuration\" class=\"headerlink\" title=\"1.2 约定优于配置(Convention Over Configuration)\"></a>1.2 约定优于配置(Convention Over Configuration)</h3><p>在没有自定义的情况下，Maven有如下约定：</p>\n<ol>\n<li><p>源代码假定是在:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/main/java</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>资源文件假定是在:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/main/resources</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试代码假定是在: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/test</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>项目假定会产生一个 JAR 文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/hudson/ hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/target</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Maven 假定你想要把编译好的字节码放到:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/target/classes</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当然，只要你遵循Maven的这一约定，几乎不需要做任何配置，就可以结合maven的插件来完成所有事情，但也仍然允许你自定义修改这些约定。</p>\n</li>\n<li><p>Maven的标准约定的目录结构如下：</p>\n<p> <font color=\"red\">在一个Maven项目中执行 mvn help:effective-pom 可以查看到这些约定被配置在pom.xml中</font></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--projectName \t\t\t\t\t\t项目根目录或者module根目录</span><br><span class=\"line\">-----src</span><br><span class=\"line\">---------main</span><br><span class=\"line\">-------------java\t\t\t\t\t源码目录src/main/java</span><br><span class=\"line\">-------------resources\t\t\t\t\t资源目录src/main/resources</span><br><span class=\"line\">-------------scripts\t\t\t\t\t脚本文件src/main/scripts</span><br><span class=\"line\">---------test \t\t\t\t\t\t测试目录src/test</span><br><span class=\"line\">-------------java \t\t\t\t\t测试代码目录src/test/java</span><br><span class=\"line\">-------------resources\t\t\t\t\t测试资源目录src/test/resources</span><br><span class=\"line\">---------site     \t\t\t\t\t站点资源目录src/site</span><br><span class=\"line\">-----target\t\t\t\t\t\t结果目录</span><br><span class=\"line\">---------classes \t\t\t\t\t编译生成class目录target/classes</span><br><span class=\"line\">---------test-classes \t\t\t\t\t编译生成class目录target/test-classes</span><br><span class=\"line\">---------site     \t\t\t\t\t站点资源目录target/site</span><br><span class=\"line\">-----pom.xml  \t\t\t\t\t\tMaven配置文件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>多module项目结构如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--projectName \t\t\t\t\t\t项目根目录</span><br><span class=\"line\">\t----module1\t\t\t\t\tmodule1根目录</span><br><span class=\"line\">\t\t------src\t \t</span><br><span class=\"line\">\t\t---------main</span><br><span class=\"line\">\t\t-------------java\t\t\t源码目录</span><br><span class=\"line\">\t\t-------------resources\t\t\t资源目录</span><br><span class=\"line\">\t\t-------------scripts\t\t\t脚本文件</span><br><span class=\"line\">\t\t---------test \t\t\t\t测试目录</span><br><span class=\"line\">\t\t-------------java \t\t\t测试代码目录</span><br><span class=\"line\">\t\t-------------resources\t\t\t测试资源目录</span><br><span class=\"line\">\t\t---------site     \t\t\t站点资源目录</span><br><span class=\"line\">\t\t-----target\t\t\t\t结果目录</span><br><span class=\"line\">\t\t---------classes \t\t\t编译生成class目录</span><br><span class=\"line\">\t\t---------test-classes \t\t\t编译生成class目录</span><br><span class=\"line\">\t\t---------site     \t\t\t站点资源目录</span><br><span class=\"line\">\t\t-----pom.xml  \t\t\t\tmodule1的Maven配置文件</span><br><span class=\"line\">\t----module2\t\t\t\t\tmodule2根目录</span><br><span class=\"line\">\t\t------src\t \t</span><br><span class=\"line\">\t\t---------main</span><br><span class=\"line\">\t\t-------------java\t\t\t源码目录</span><br><span class=\"line\">\t\t-------------resources\t\t\t资源目录</span><br><span class=\"line\">\t\t-------------scripts\t\t\t脚本文件</span><br><span class=\"line\">\t\t---------test \t\t\t\t测试目录</span><br><span class=\"line\">\t\t-------------java \t\t\t测试代码目录</span><br><span class=\"line\">\t\t-------------resources\t\t\t测试资源目录</span><br><span class=\"line\">\t\t---------site     \t\t\t站点资源目录</span><br><span class=\"line\">\t\t-----target\t\t\t\t结果目录</span><br><span class=\"line\">\t\t---------classes \t\t\t编译生成class目录</span><br><span class=\"line\">\t\t---------test-classes \t\t\t编译生成class目录</span><br><span class=\"line\">\t\t---------site     \t\t\t站点资源目录</span><br><span class=\"line\">\t\t-----pom.xml  \t\t  \t\tmodule2的Maven配置文件</span><br><span class=\"line\">   ----pom.xml   \t\t\t\t\tProject的Maven配置文件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>典型示例如：</p>\n<p> 下面是我从<a href=\"https://github.com/square/okhttp\" target=\"_blank\" rel=\"noopener\">okhttp官方github</a>中fork出来准备二次封装okhttp的项目结构:</p>\n <!--\n ![Maven项目目录结构.png](https://app.yinxiang.com/shard/s45/nl/2147483647/50a6fa2c-b7ed-41f6-9702-72ae2ef0b930//res/ae2bc4cb-e0b3-47d6-bbab-fe8ac6a9f244/skitch.png?resizeSmall&width=832)\n -->\n <!--\n ![maven项目目录结构.png](https://upload-images.jianshu.io/upload_images/6322932-55587e4642649287.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n -->\n<p> <img src=\"https://upload-images.jianshu.io/upload_images/6322932-3877cf45ed59a3f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Maven项目目录结构.png\"></p>\n</li>\n</ol>\n<h3 id=\"1-3-统一的构建过程\"><a href=\"#1-3-统一的构建过程\" class=\"headerlink\" title=\"1.3 统一的构建过程\"></a>1.3 统一的构建过程</h3><blockquote>\n<p>统一的标准化构建过程约束，所有使用Maven构建的项目都遵循这一约束，不同的项目，只要都使用Maven来构建，那么，他们的构建逻辑几乎是一样的，不会再像没有Maven的年代，每个项目的构建逻辑都不一致，开发人员需要花额外的时间去理解不同项目不同的构建逻辑。例如：使用Ant构建的每一个项目几乎都拥有自己完全不同与其他项目的构建逻辑，因为，没有约定，构建逻辑完全是自定义的。</p>\n</blockquote>\n<font color=\"red\">现在，你只要签出源码，然后运行: mvn install，你就能构建好这个项目。<br></font>\n\n<h3 id=\"1-4-Maven插件的全局性重用\"><a href=\"#1-4-Maven插件的全局性重用\" class=\"headerlink\" title=\"1.4 Maven插件的全局性重用\"></a>1.4 Maven插件的全局性重用</h3><p>Maven 的核心其实不做什么实际的事情，除了解析一些 XML 文档，管理生命周期与插 件之外，它什么也不懂。Maven 被设计成将主要的职责委派给一组 Maven 插件，这些 插件可以影响 Maven 生命周期，提供对目标的访问。绝大多数 Maven 的动作发生于 Maven 插件的目标，如编译源码，打包二进制代码，发布站点和其它构建任务。你从 Apache 下载的 Maven 不知道如何打包 WAR 文件，也不知道如何运行单元测试，Maven 大部分的智能是由插件实现的，而插件从 Maven 仓库获得。事实上，第一次你用全新 的 Maven 安装运行诸如 mvn install 命令的时候，它会从中央 Maven 仓库下载大部 分核心 Maven 插件。这不仅仅是一个最小化 Maven 分发包大小的技巧，这种方式更能 让你升级插件以给你项目的构建提高能力。Maven 从远程仓库获取依赖和插件的这一事 实允许了构建逻辑的全局性重用。</p>\n<p>Surefire插件：是负责运行单元测试的插件，插件不断更新，支持JUnit3、TestNG、JUnit4；</p>\n<p>Compiler插件：负责进行编译，通过jar插件编程jar，通过aar插件生成aar。</p>\n<p>还有一些插件生成报告，运行 JRuby 和 Groovy 的代码，以及一 些用来向远程服务器发布站点的插件。而且插件在不断更新，我们只需要更新pom.xml中说引入的插件版本号，就能获得最新的插件功能。</p>\n<p>Maven 将一般的构建任务抽象成插件，同时这些 插件得到了很好的维护以及全局的共享，你不需要从头开始自定义你项目的构建系统然 后提供支持。你完全可以从 Maven 插件获益，这些插件有人维护，可以从远程仓库下 载到。这就是基于 Maven 插件的全局性重用。</p>\n<h3 id=\"1-5-Maven、Ant、Gradle、Buildr、Nexus以及antlibs和Ivy\"><a href=\"#1-5-Maven、Ant、Gradle、Buildr、Nexus以及antlibs和Ivy\" class=\"headerlink\" title=\"1.5 Maven、Ant、Gradle、Buildr、Nexus以及antlibs和Ivy\"></a>1.5 Maven、Ant、Gradle、Buildr、Nexus以及antlibs和Ivy</h3><p><font color=\"red\">我们会很明确的说作为构建的基本技术，Maven 是 Ant 的更好选择。但使用 Maven 还是 Ant 的决定不是非此即彼的，Ant 在复杂的构建中还有它的位置。</font> 如果你目前的构建包含一些高度自定义的过程，或者你已经写了一些 Ant 脚本通过一 种明确的方法完成一个明确的过程，而这种过程不适合 Maven 标准，你仍然可以在 Maven 中用这些脚本。作为一个 Maven 的核心插件， Ant 还是可用的。自定义的插件 可以用 Ant 来实现，Maven 项目可以配置成在生命周期中运行 Ant 的脚本。</p>\n<p>Ant 在构建过程方面十分优秀，它是一个<font color=\"red\"><b>基于任务和依赖</b></font>的构建系统。每个任务包含一 组由 XML 编码的指令。有 copy 任务和 javac 任务，以及 jar 任务。在你使用 Ant 的时候，你为 Ant 提供特定的指令以编译和打包你的输出。<br>没有诸如 antlibs 和 lvy 等技术的支持(<font color=\"red\">即使有了这些支持技术</font>)，Ant 给人感觉是自定义的程序化构建,配置过于复杂。</p>\n<p>一个典型的Ant构建脚本buid.xml：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;project name=&quot;my-project&quot; default=&quot;dist&quot; basedir=&quot;.&quot;&gt; </span><br><span class=\"line\">\t&lt;description&gt;</span><br><span class=\"line\">\t\tsimple example build file </span><br><span class=\"line\">\t&lt;/description&gt;</span><br><span class=\"line\">\t&lt;!-- set global properties for this build --&gt; </span><br><span class=\"line\">\t&lt;property name=&quot;src&quot; location=&quot;src/main/java&quot;/&gt; </span><br><span class=\"line\">\t&lt;property name=&quot;build&quot; location=&quot;target/classes&quot;/&gt; </span><br><span class=\"line\">\t&lt;property name=&quot;dist&quot; location=&quot;target&quot;/&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;target name=&quot;init&quot;&gt;</span><br><span class=\"line\">\t\t&lt;!-- Create the time stamp --&gt;</span><br><span class=\"line\">\t\t&lt;tstamp/&gt;</span><br><span class=\"line\">\t\t&lt;!-- Create the build directory structure used by compile --&gt; </span><br><span class=\"line\">\t\t&lt;mkdir dir=&quot;org.apache.maven.model.Build@d7e661&quot;/&gt;</span><br><span class=\"line\">\t&lt;/target&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;target name=&quot;compile&quot; depends=&quot;init&quot; description=&quot;compile the source &quot; &gt;</span><br><span class=\"line\">\t\t&lt;!-- Compile the java code from $&#123;src&#125; into org.apache.maven.model.Build@d7e661 --&gt; </span><br><span class=\"line\">\t\t&lt;javac srcdir=&quot;$&#123;src&#125;&quot; \tdestdir=&quot;org.apache.maven.model.Build@d7e661&quot;/&gt; </span><br><span class=\"line\">\t&lt;/target&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;target name=&quot;dist&quot; depends=&quot;compile&quot; description=&quot;generate the distribution&quot; &gt;</span><br><span class=\"line\">\t\t&lt;!-- Create the distribution directory --&gt; </span><br><span class=\"line\">\t\t&lt;mkdir dir=&quot;$&#123;dist&#125;/lib&quot;/&gt;</span><br><span class=\"line\">\t&lt;!-- Put everything in org.apache.maven.model.Build@d7e661 into the MyProject-$&#123;DSTAMP&#125;.jar --&gt;</span><br><span class=\"line\">\t\t&lt;jar jarfile=&quot;$&#123;dist&#125;/lib/MyProject-$&#123;DSTAMP&#125;.jar&quot; basedir=&quot;org.apache.maven.mod </span><br><span class=\"line\">\t&lt;/target&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;target name=&quot;clean&quot; description=&quot;clean up&quot; &gt;</span><br><span class=\"line\">\t\t&lt;!-- Delete the org.apache.maven.model.Build@d7e661 and $&#123;dist&#125; directory trees --&gt;</span><br><span class=\"line\">\t\t&lt;delete dir=&quot;org.apache.maven.model.Build@d7e661&quot;/&gt;</span><br><span class=\"line\">\t\t&lt;delete dir=&quot;$&#123;dist&#125;&quot;/&gt;</span><br><span class=\"line\">\t&lt;/target&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<p>等价的Maven配置文件pom.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;project&gt; </span><br><span class=\"line\">\t&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class=\"line\">\t&lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt; </span><br><span class=\"line\">\t&lt;artifactId&gt;my-project&lt;/artifactId&gt; </span><br><span class=\"line\">\t&lt;version&gt;1.0&lt;/version&gt;</span><br><span class=\"line\">\t&lt;!-- packaging 默认就是jar类型--&gt;</span><br><span class=\"line\">\t&lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-Maven和Ant比较\"><a href=\"#1-6-Maven和Ant比较\" class=\"headerlink\" title=\"1.6 Maven和Ant比较\"></a>1.6 Maven和Ant比较</h3><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>Apache Maven</th>\n<th>Apache Ant</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>约定</td>\n<td>Maven 拥有约定，因为你遵循了约定，它已经知道你的源代码在哪里。它把字节码放到 target/classes ，然后在 target 生成一个 JAR 文件</td>\n<td>Ant 没有正式的约定如一个一般项目的目录结构，你必须明确的告诉 Ant 哪 里去找源代码，哪里放置输出。随着时间的推移，非正式的约定出现了，但是 它们还没有在产品中模式化</td>\n</tr>\n<tr>\n<td>声明和编写</td>\n<td>Maven 是声明式的。你需要做的只是创建一个 pom.xml 文件然后将源代码放到默认的目录。Maven 会帮你处理其它的事情</td>\n<td>Ant 是程序化的，你必须明确的告诉 Ant 做什么，什么时候做。你必须告诉 它去编译，然后复制，然后压缩</td>\n</tr>\n<tr>\n<td>生命周期</td>\n<td>Maven 有一个生命周期，当你运行 mvn install 的时候被调用。这条命令告 诉 Maven 执行一系列的有序的步骤，直到到达你指定的生命周期。遍历生命 周期旅途中的一个影响就是，Maven 运行了许多默认的插件目标，这些目标完 成了像编译和创建一个 JAR 文件这样的工作</td>\n<td>Ant 没有生命周期，你必须定义目标和目标之间的依赖。你必须手工为每个目 标附上一个任务序列</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"第二章-安装和运行Maven\"><a href=\"#第二章-安装和运行Maven\" class=\"headerlink\" title=\"第二章 安装和运行Maven\"></a>第二章 安装和运行Maven</h3><h3 id=\"2-1-Maven安装和升级\"><a href=\"#2-1-Maven安装和升级\" class=\"headerlink\" title=\"2.1 Maven安装和升级\"></a>2.1 Maven安装和升级</h3><pre><code>1. 执行 java -version 如果没有输出类似如下内容，则需要下载和安装JDK\n    java version &quot;1.6.0_02&quot;\n    Java(TM) SE Runtime Environment (build 1.6.0_02-b06)\n    Java HotSpot(TM) Client VM (build 1.6.0_02-b06, mixed mode, sharing)\n2. JDK下载地址：\n    http://www.oracle.com/technetwork/java/javase/downloads/index.html \n3. Maven下载地址：\n    https://maven.apache.org/download.cgi\n4. 安装Maven\n    https://maven.apache.org/install.html\n5. 升级Maven\n    只需要删除已经安装的Maven目录，并重新下载，解压缩到相同的目录既可以。\n</code></pre><h3 id=\"2-2-Maven全局目录结构\"><a href=\"#2-2-Maven全局目录结构\" class=\"headerlink\" title=\"2.2 Maven全局目录结构\"></a>2.2 Maven全局目录结构</h3><pre><code>LICENSE.txt    包含了Apache Maven的软件许可证\nNOTICE.txt     包含了一些Maven依赖的类库所需要 的通告及权限\nREADME.txt     包含了一些安装指令\nbin/           包含了运行Maven的 mvn脚本\nboot/          包含了一个负责创建Maven运行所需要的类装载器的JAR文件(classwords-1.1.jar)\nconf/          包含了一个全局的settings.xml文件，该文件用 来自定义你机器上Maven的一些行为。\n            但是如果你需要自定义Maven，更通常的做法是覆写 ~/.m2目录下的settings.xml文件，每个用户都有对应的这个目录。\nlib/           有了一个包含Maven核心的JAR文件(maven-2.0.9-uber.jar)\n</code></pre><h3 id=\"2-3-用户相关配置和仓库\"><a href=\"#2-3-用户相关配置和仓库\" class=\"headerlink\" title=\"2.3 用户相关配置和仓库\"></a>2.3 用户相关配置和仓库</h3><pre><code>~/.m2/settings.xml    该文件包含了用户相关的认证，仓库和其它信息的配置，用来自定义Maven的行为\n~/.m2/repository/     该目录是你本地的仓库。当你从远程Maven仓库下载依赖的时候，Maven在你本地仓库存储了这个依赖的一个副本。\n</code></pre><h3 id=\"2-4-如何获取Maven帮助\"><a href=\"#2-4-如何获取Maven帮助\" class=\"headerlink\" title=\"2.4 如何获取Maven帮助\"></a>2.4 如何获取Maven帮助</h3><table>\n<thead>\n<tr>\n<th>地址</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://maven.apache.org\" target=\"_blank\" rel=\"noopener\">http://maven.apache.org</a></td>\n<td>你首先应该看看这里，Maven的web站点包含了丰富的信息及文档。每个插件都有 几页的文档，这里还有一系列“快速开始”的文档，它们是本书内容的十分有帮 助的补充。虽然Maven站点包含了大量信息，它同时也可能让你迷惑沮丧。那里 提供了一个自定义的Google搜索框，以用来搜索已有的Maven站点信息，它能比 通用的Google搜索提供更好的结果。</td>\n</tr>\n<tr>\n<td>Maven User Mailing List</td>\n<td>Maven用户邮件列表是用户问问题的地方。在你问问题之前，你可以先搜索一下 之前的讨论，有可能找到相关问题。问一个已经问过的问题，而不先查一下该问 题是否存在了，这种形式不太好。有很多有用的邮件列表归档浏览器，我们发现 Nabble最有用。你可以在这里浏览邮件列表:<a href=\"http://www.nabble.com/MavenUsers-f178.html。你也可以按照这里的指令来加入用户邮件列表:http://\" target=\"_blank\" rel=\"noopener\">http://www.nabble.com/MavenUsers-f178.html。你也可以按照这里的指令来加入用户邮件列表:http://</a> maven.apache.org/mail-lists.html</td>\n</tr>\n<tr>\n<td><a href=\"http://www.sonatype.com\" target=\"_blank\" rel=\"noopener\">http://www.sonatype.com</a></td>\n<td>Sonatype维护了一个本书的在线副本，以及其它Maven相关的指南</td>\n</tr>\n<tr>\n<td><a href=\"https://maven.apache.org/team-list.html\" target=\"_blank\" rel=\"noopener\">https://maven.apache.org/team-list.html</a></td>\n<td>Maven开发者邮件列表</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-5-使用Maven-help插件\"><a href=\"#2-5-使用Maven-help插件\" class=\"headerlink\" title=\"2.5 使用Maven help插件\"></a>2.5 使用Maven help插件</h3><p>Maven Help 插件有很多目标。通过help插件自己的describe目标可以查看help插件自身的描述。</p>\n<p>mvn help:describe -Dplugin=help</p>\n<table>\n<thead>\n<tr>\n<th>目标</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>help:active-profiles</td>\n<td>列出当前构建中活动的Profile(项目的，用户的，全局的)</td>\n</tr>\n<tr>\n<td>help:all-profiles</td>\n<td>Displays a list of available profiles under the current project. Note: it will list all profiles for a project. If a profile comes up with a status inactive then there might be a need to set profile activation switches/property</td>\n</tr>\n<tr>\n<td>help:effective-pom</td>\n<td>显示当前构建的实际POM，包含活动的Profile</td>\n</tr>\n<tr>\n<td>help:effective-settings</td>\n<td>打印出项目的实际settings, 包括从全局的settings和用户级别settings继承的配置</td>\n</tr>\n<tr>\n<td>help:describe</td>\n<td>描述插件的属性。它不需要在项目目录下运行。但是你必须提供你想要描述插件 的 groupId 和 artifactId</td>\n</tr>\n<tr>\n<td>help:evaluate</td>\n<td>Evaluates Maven expressions given by the user in an interactive mode.</td>\n</tr>\n<tr>\n<td>help:help</td>\n<td>Description: Display help information on maven-help-plugin. Call mvn help:help -Ddetail=true -Dgoal=<goal-name> to display parameter details</goal-name></td>\n</tr>\n<tr>\n<td>help:system</td>\n<td>Displays a list of the platform details like system properties and environment variables.</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ol>\n<li>使用Maven help插件的mvn help:describe来查看其它插件、目标或者命令的描述：</li>\n<li>mvn help:describe -Dcmd=install</li>\n<li>mvn help:describe -Dcmd=help:describe</li>\n<li>mvn help:describe -Dplugin=compiler   compiler是一个插件</li>\n<li>mvn help:describe -Dcmd=compile       compile是compiler插件的一个目标</li>\n<li>mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull</li>\n<li>mvn help:describe -Dplugin=help</li>\n<li>mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin</li>\n<li>mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin</li>\n<li>查看help插件的描述: mvn help:describe -Dplugin=help</li>\n<li>查看更详细的细节+1: mvn help:describe -Dplugin=help -Dfull</li>\n<li>查看更详细的细节+2: mvn help:help -Ddetail=true</li>\n<li>查看更详细的细节+2: mvn help:describe -Dplugin=help -Ddetail=true</li>\n<li>Dmojo指定插件目标：mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull</li>\n</ol>\n</blockquote>\n<ol>\n<li>在maven-archetype-quickstart项目中执行 mvn help:effective-pom 可以查看到实际pom中内容如下：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- Generated by Maven Help Plugin on 2018-05-16T23:17:54+08:00            --&gt;</span><br><span class=\"line\">&lt;!-- See: http://maven.apache.org/plugins/maven-help-plugin/                --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- Effective POM for project                                              --&gt;</span><br><span class=\"line\">&lt;!-- &apos;com.silence:maven-archetype-quickstart:jar:0.0.1-SNAPSHOT&apos;            --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class=\"line\">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class=\"line\">  &lt;groupId&gt;com.silence&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;maven-archetype-quickstart&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\">  &lt;name&gt;maven-archetype-quickstart&lt;/name&gt;</span><br><span class=\"line\">  &lt;url&gt;http://www.example.com&lt;/url&gt;</span><br><span class=\"line\">  &lt;properties&gt;</span><br><span class=\"line\">    &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt;</span><br><span class=\"line\">    &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt;</span><br><span class=\"line\">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class=\"line\">  &lt;/properties&gt;</span><br><span class=\"line\">  &lt;dependencies&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class=\"line\">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class=\"line\">      &lt;version&gt;4.11&lt;/version&gt;</span><br><span class=\"line\">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">  &lt;/dependencies&gt;</span><br><span class=\"line\">  &lt;repositories&gt;</span><br><span class=\"line\">    &lt;repository&gt;</span><br><span class=\"line\">      &lt;snapshots&gt;</span><br><span class=\"line\">        &lt;enabled&gt;false&lt;/enabled&gt;</span><br><span class=\"line\">      &lt;/snapshots&gt;</span><br><span class=\"line\">      &lt;id&gt;central&lt;/id&gt;</span><br><span class=\"line\">      &lt;name&gt;Central Repository&lt;/name&gt;</span><br><span class=\"line\">      &lt;url&gt;https://repo.maven.apache.org/maven2&lt;/url&gt;</span><br><span class=\"line\">    &lt;/repository&gt;</span><br><span class=\"line\">  &lt;/repositories&gt;</span><br><span class=\"line\">  &lt;pluginRepositories&gt;</span><br><span class=\"line\">    &lt;pluginRepository&gt;</span><br><span class=\"line\">      &lt;releases&gt;</span><br><span class=\"line\">        &lt;updatePolicy&gt;never&lt;/updatePolicy&gt;</span><br><span class=\"line\">      &lt;/releases&gt;</span><br><span class=\"line\">      &lt;snapshots&gt;</span><br><span class=\"line\">        &lt;enabled&gt;false&lt;/enabled&gt;</span><br><span class=\"line\">      &lt;/snapshots&gt;</span><br><span class=\"line\">      &lt;id&gt;central&lt;/id&gt;</span><br><span class=\"line\">      &lt;name&gt;Central Repository&lt;/name&gt;</span><br><span class=\"line\">      &lt;url&gt;https://repo.maven.apache.org/maven2&lt;/url&gt;</span><br><span class=\"line\">    &lt;/pluginRepository&gt;</span><br><span class=\"line\">  &lt;/pluginRepositories&gt;</span><br><span class=\"line\">  &lt;build&gt;</span><br><span class=\"line\">    &lt;sourceDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/src/main/java&lt;/sourceDirectory&gt;</span><br><span class=\"line\">    &lt;scriptSourceDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/src/main/scripts&lt;/scriptSourceDirectory&gt;</span><br><span class=\"line\">    &lt;testSourceDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/src/test/java&lt;/testSourceDirectory&gt;</span><br><span class=\"line\">    &lt;outputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/classes&lt;/outputDirectory&gt;</span><br><span class=\"line\">    &lt;testOutputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/test-classes&lt;/testOutputDirectory&gt;</span><br><span class=\"line\">    &lt;resources&gt;</span><br><span class=\"line\">      &lt;resource&gt;</span><br><span class=\"line\">        &lt;directory&gt;/environment/myeclipse/maven-archetype-quickstart/src/main/resources&lt;/directory&gt;</span><br><span class=\"line\">      &lt;/resource&gt;</span><br><span class=\"line\">    &lt;/resources&gt;</span><br><span class=\"line\">    &lt;testResources&gt;</span><br><span class=\"line\">      &lt;testResource&gt;</span><br><span class=\"line\">        &lt;directory&gt;/environment/myeclipse/maven-archetype-quickstart/src/test/resources&lt;/directory&gt;</span><br><span class=\"line\">      &lt;/testResource&gt;</span><br><span class=\"line\">    &lt;/testResources&gt;</span><br><span class=\"line\">    &lt;directory&gt;/environment/myeclipse/maven-archetype-quickstart/target&lt;/directory&gt;</span><br><span class=\"line\">    &lt;finalName&gt;maven-archetype-quickstart-0.0.1-SNAPSHOT&lt;/finalName&gt;</span><br><span class=\"line\">    &lt;pluginManagement&gt;</span><br><span class=\"line\">      &lt;plugins&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;1.3&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.2-beta-5&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.8&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-release-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.3.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;3.0.0&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;3.7.0&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.20.1&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.5.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.8.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;/plugins&gt;</span><br><span class=\"line\">    &lt;/pluginManagement&gt;</span><br><span class=\"line\">    &lt;plugins&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;3.0.0&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-clean&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;clean&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;clean&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.5.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-install&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;install&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;install&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-resources&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;process-resources&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;resources&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-testResources&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;process-test-resources&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;testResources&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.20.1&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-test&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;test&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;test&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;3.7.0&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-testCompile&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;test-compile&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;testCompile&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-compile&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;compile&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;compile&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-jar&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;package&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;jar&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.8.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-deploy&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;deploy&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;deploy&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-site-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;3.3&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-site&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;site&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;site&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">            &lt;configuration&gt;</span><br><span class=\"line\">              &lt;outputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/site&lt;/outputDirectory&gt;</span><br><span class=\"line\">              &lt;reportPlugins&gt;</span><br><span class=\"line\">                &lt;reportPlugin&gt;</span><br><span class=\"line\">                  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class=\"line\">                  &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">                &lt;/reportPlugin&gt;</span><br><span class=\"line\">              &lt;/reportPlugins&gt;</span><br><span class=\"line\">            &lt;/configuration&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-deploy&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;site-deploy&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;deploy&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">            &lt;configuration&gt;</span><br><span class=\"line\">              &lt;outputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/site&lt;/outputDirectory&gt;</span><br><span class=\"line\">              &lt;reportPlugins&gt;</span><br><span class=\"line\">                &lt;reportPlugin&gt;</span><br><span class=\"line\">                  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class=\"line\">                  &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">                &lt;/reportPlugin&gt;</span><br><span class=\"line\">              &lt;/reportPlugins&gt;</span><br><span class=\"line\">            &lt;/configuration&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">        &lt;configuration&gt;</span><br><span class=\"line\">          &lt;outputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/site&lt;/outputDirectory&gt;</span><br><span class=\"line\">          &lt;reportPlugins&gt;</span><br><span class=\"line\">            &lt;reportPlugin&gt;</span><br><span class=\"line\">              &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class=\"line\">              &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;/reportPlugin&gt;</span><br><span class=\"line\">          &lt;/reportPlugins&gt;</span><br><span class=\"line\">        &lt;/configuration&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">    &lt;/plugins&gt;</span><br><span class=\"line\">  &lt;/build&gt;</span><br><span class=\"line\">  &lt;reporting&gt;</span><br><span class=\"line\">    &lt;outputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/site&lt;/outputDirectory&gt;</span><br><span class=\"line\">  &lt;/reporting&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在maven-archetype-quickstart项目中执行 mvn help:effective-settings 可以查看到实际pom中内容如下:</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- Generated by Maven Help Plugin on 2018-05-16T23:35:31+08:00            --&gt;</span><br><span class=\"line\">&lt;!-- See: http://maven.apache.org/plugins/maven-help-plugin/                --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- Effective Settings for &apos;violet&apos; on &apos;yexiaochaideMacBook-Pro.local&apos;     --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.1.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd&quot;&gt;</span><br><span class=\"line\">  &lt;localRepository&gt;/Users/violet/.m2/repository&lt;/localRepository&gt;</span><br><span class=\"line\">  &lt;pluginGroups&gt;</span><br><span class=\"line\">    &lt;pluginGroup&gt;org.apache.maven.plugins&lt;/pluginGroup&gt;</span><br><span class=\"line\">    &lt;pluginGroup&gt;org.codehaus.mojo&lt;/pluginGroup&gt;</span><br><span class=\"line\">  &lt;/pluginGroups&gt;</span><br><span class=\"line\">&lt;/settings&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>执行mvn help:describe得到以下错误信息，显示了正确的使用方法。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ERROR] Failed to execute goal org.apache.maven.plugins:maven-help-plugin:3.0.1:describe (default-cli) on project maven-archetype-quickstart: You must specify either: both &apos;groupId&apos; and &apos;artifactId&apos; parameters OR a &apos;plugin&apos; parameter OR a &apos;cmd&apos; parameter. For instance:</span><br><span class=\"line\">[ERROR]   # mvn help:describe -Dcmd=install</span><br><span class=\"line\">[ERROR] or</span><br><span class=\"line\">[ERROR]   # mvn help:describe -Dcmd=help:describe</span><br><span class=\"line\">[ERROR] or</span><br><span class=\"line\">[ERROR]   # mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin</span><br><span class=\"line\">[ERROR] or</span><br><span class=\"line\">[ERROR]   # mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin</span><br><span class=\"line\">[ERROR] </span><br><span class=\"line\">[ERROR] Try &apos;mvn help:help -Ddetail=true&apos; for more information.</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>执行mvn help:describe -Dcmd=install 显示结果如下：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe -Dcmd=install</span><br><span class=\"line\"></span><br><span class=\"line\">[INFO] Scanning for projects...</span><br><span class=\"line\">[INFO] </span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] Building maven-archetype-quickstart 0.0.1-SNAPSHOT</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] </span><br><span class=\"line\">[INFO] --- maven-help-plugin:3.0.1:describe (default-cli) @ maven-archetype-quickstart ---</span><br><span class=\"line\">[INFO] &apos;install&apos; is a phase corresponding to this plugin:</span><br><span class=\"line\">org.apache.maven.plugins:maven-install-plugin:2.4:install</span><br><span class=\"line\"></span><br><span class=\"line\">It is a part of the lifecycle for the POM packaging &apos;jar&apos;. This lifecycle includes the following phases:</span><br><span class=\"line\">* validate: Not defined</span><br><span class=\"line\">* initialize: Not defined</span><br><span class=\"line\">* generate-sources: Not defined</span><br><span class=\"line\">* process-sources: Not defined</span><br><span class=\"line\">* generate-resources: Not defined</span><br><span class=\"line\">* process-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:resources</span><br><span class=\"line\">* compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:compile</span><br><span class=\"line\">* process-classes: Not defined</span><br><span class=\"line\">* generate-test-sources: Not defined</span><br><span class=\"line\">* process-test-sources: Not defined</span><br><span class=\"line\">* generate-test-resources: Not defined</span><br><span class=\"line\">* process-test-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:testResources</span><br><span class=\"line\">* test-compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile</span><br><span class=\"line\">* process-test-classes: Not defined</span><br><span class=\"line\">* test: org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test</span><br><span class=\"line\">* prepare-package: Not defined</span><br><span class=\"line\">* package: org.apache.maven.plugins:maven-jar-plugin:2.4:jar</span><br><span class=\"line\">* pre-integration-test: Not defined</span><br><span class=\"line\">* integration-test: Not defined</span><br><span class=\"line\">* post-integration-test: Not defined</span><br><span class=\"line\">* verify: Not defined</span><br><span class=\"line\">* install: org.apache.maven.plugins:maven-install-plugin:2.4:install</span><br><span class=\"line\">* deploy: org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-由上可知-lt-packaging-jar-lt-packaging-的生命周期如下：\"><a href=\"#2-6-由上可知-lt-packaging-jar-lt-packaging-的生命周期如下：\" class=\"headerlink\" title=\"2.6 由上可知\\&lt;packaging>jar\\&lt;/packaging>的生命周期如下：\"></a>2.6 由上可知\\&lt;packaging>jar\\&lt;/packaging>的生命周期如下：</h3><pre><code>* validate: Not defined\n* initialize: Not defined\n* generate-sources: Not defined\n* process-sources: Not defined\n* generate-resources: Not defined\n* process-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:resources\n* compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:compile\n* process-classes: Not defined\n* generate-test-sources: Not defined\n* process-test-sources: Not defined\n* generate-test-resources: Not defined\n* process-test-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:testResources\n* test-compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile\n* process-test-classes: Not defined\n* test: org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test\n* prepare-package: Not defined\n* package: org.apache.maven.plugins:maven-jar-plugin:2.4:jar\n* pre-integration-test: Not defined\n* integration-test: Not defined\n* post-integration-test: Not defined\n* verify: Not defined\n* install: org.apache.maven.plugins:maven-install-plugin:2.4:install\n* deploy: org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy\n</code></pre><h3 id=\"第三章-一个简单的Maven项目\"><a href=\"#第三章-一个简单的Maven项目\" class=\"headerlink\" title=\"第三章 一个简单的Maven项目\"></a>第三章 一个简单的Maven项目</h3><h3 id=\"3-1-规则\"><a href=\"#3-1-规则\" class=\"headerlink\" title=\"3.1 规则\"></a>3.1 规则</h3><blockquote>\n<ol>\n<li>当提到一个插件目标的时候，我们常常用速记符号:pluginId:goalId。 例如，当提到Archetype插件的create目标的时候，我们写 成archetype:create</li>\n</ol>\n</blockquote>\n<h3 id=\"3-2-使用archetype-generate创建Maven框架项目\"><a href=\"#3-2-使用archetype-generate创建Maven框架项目\" class=\"headerlink\" title=\"3.2 使用archetype:generate创建Maven框架项目\"></a>3.2 使用archetype:generate创建Maven框架项目</h3><blockquote>\n<ol>\n<li><del>mvn archetype:create</del> 方式已经过时</li>\n<li>mvn archetype:generate 现在，使用generate选择适合模板来创建项目</li>\n<li>mvn help:effective-pom 查看完成的pom.xml</li>\n</ol>\n</blockquote>\n<h3 id=\"3-3-传递性依赖-transitive-dependencies\"><a href=\"#3-3-传递性依赖-transitive-dependencies\" class=\"headerlink\" title=\"3.3 传递性依赖(transitive dependencies)\"></a>3.3 传递性依赖(transitive dependencies)</h3><p>让我们看一下你运行前面的样例的时候那些下载到你本地仓库的依赖。看一下这个目 录:~/.m2/repository/junit/junit/3.8.1/。如果你一直跟着本章的样例，那么这里会 有文件junit-3.8.1.jar 和junit-3.8.1.pom，还有Maven用来验证已下载构件准确性的 校验和文件。需要注意的是Maven不只是下载JUnit的JAR文件，它同时为这个JUnit依赖 下载了一个POM文件。Maven同时下载构件和POM文件的这种行为，对Maven支持传递性依 赖来说非常重要。</p>\n<h3 id=\"3-4-依赖范围-dependency-scope\"><a href=\"#3-4-依赖范围-dependency-scope\" class=\"headerlink\" title=\"3.4 依赖范围(dependency scope)\"></a>3.4 依赖范围(dependency scope)</h3><pre><code>test、compile、provided\n</code></pre><p>Simple项目的pom.xml包含了 一个依赖——junit:junit:jar:3.8.1——范围是test。当一个依赖的范围是test的 时候，说明它在Compiler插件运行compile目标的时候是不可用的。它只有在运 行compiler:testCompile和surefire:test目标的时候才会被加入到classpath中。</p>\n<p>你也可以配置Maven，使用provided范围，让它排除WAR文件中特定的依赖。provided范 围告诉Maven一个依赖在编译的时候需要，但是它不应该被捆绑在构建的输出中。当你 开发web应用的时候provided范围变得十分有用，你需要通过Servlet API来编译你的代 码，但是你不希望Servlet API的JAR文件包含在你web应用的WEB-INF/lib目录中</p>\n<h3 id=\"3-5-站点生成和报告-Site-Generation-and-Reporting\"><a href=\"#3-5-站点生成和报告-Site-Generation-and-Reporting\" class=\"headerlink\" title=\"3.5 站点生成和报告 (Site Generation and Reporting)\"></a>3.5 站点生成和报告 (Site Generation and Reporting)</h3><pre><code>mvn site\n</code></pre><p>这将会运行site生命周期阶段。它不像默认生命周期那样，管理代码生成，操作资源， 编译，打包等等。Site生命周期只关心处理在src/site目录下的site内容，还有生成 报告。在这个命令运行过之后，你将会在target/site目录下看到一个项目web站点。载 入target/site/index.html你会看到项目站点的基本外貌</p>\n<h3 id=\"3-6-定制站点报告-lt-reporting-lt-reporting\"><a href=\"#3-6-定制站点报告-lt-reporting-lt-reporting\" class=\"headerlink\" title=\"3.6 定制站点报告\\&lt;reporting>\\&lt;/reporting>\"></a>3.6 定制站点报告\\&lt;reporting>\\&lt;/reporting></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">报告配置在&lt;reporting&gt;&lt;/reporting&gt;下，而插件配置在&lt;plugins&gt;&lt;/plugins&gt;下</span><br><span class=\"line\">\t</span><br><span class=\"line\">Clover报告：\t检查单元测试覆盖率</span><br><span class=\"line\">JXR报告：\t\t生成HTML源代码相互间引用，这在代码审查的时候非常有用</span><br><span class=\"line\">PMD报告：\t\t告针对各种编码问题来分析源代码</span><br><span class=\"line\">JDepend报告：\t分析源代码中各个包之间的依赖</span><br></pre></td></tr></table></figure>\n<p>Maven提供了很完整的可配置的报告，像Clover报告检 查单元测试覆盖率，JXR报告生成HTML源代码相互间引用，这在代码审查的时候非常有 用，PMD报告针对各种编码问题来分析源代码，JDepend报告分析源代码中各个包之间的 依赖。通过在pom.xml中配置那些报告被包含在构建中，站点报告就可以被定制了。</p>\n<h3 id=\"第四章-定制一个Maven项目\"><a href=\"#第四章-定制一个Maven项目\" class=\"headerlink\" title=\"第四章 定制一个Maven项目\"></a>第四章 定制一个Maven项目</h3><p><a href=\"https://github.com/Farubaba/simple-example\" target=\"_blank\" rel=\"noopener\">Maven simple-weather示例项目Git地址</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">simple-weather相关依赖：</span><br><span class=\"line\">\t</span><br><span class=\"line\">Log4j</span><br><span class=\"line\">Dom4j</span><br><span class=\"line\">Jaxen</span><br><span class=\"line\">Velocity</span><br><span class=\"line\">Maven Exec 插件 ：  $ mvn help:describe -Dplugin=exec -Dfull</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-1-查看Maven项目依赖\"><a href=\"#4-1-查看Maven项目依赖\" class=\"headerlink\" title=\"4.1 查看Maven项目依赖\"></a>4.1 查看Maven项目依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. mvn dependency:resolve</span><br><span class=\"line\">\t</span><br><span class=\"line\">2. mvn dependency:tree 查看依赖关系树</span><br><span class=\"line\">\t</span><br><span class=\"line\">3. mvn install -X  查看完整的依赖踪迹，包含那些因为冲突或者其它原因而被 拒绝引入的构件，打开 Maven 的调试标记运行</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-添加测试范围依赖\"><a href=\"#4-2-添加测试范围依赖\" class=\"headerlink\" title=\"4.2 添加测试范围依赖\"></a>4.2 添加测试范围依赖</h3><pre><code>&lt;project&gt; \n     ...\n    &lt;dependencies&gt; \n        ...\n        &lt;dependency&gt; \n            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt; \n            &lt;artifactId&gt;commons-io&lt;/artifactId&gt; \n            &lt;version&gt;1.3.2&lt;/version&gt; \n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    ... \n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre><h3 id=\"4-3-添加单元测试资源\"><a href=\"#4-3-添加单元测试资源\" class=\"headerlink\" title=\"4.3 添加单元测试资源\"></a>4.3 添加单元测试资源</h3><p>一个单元测试需要访问针对测试的一组资源。 通常你需要在测试 classpath 中 存储一些包含期望结果的文件，以及包含模拟输入的文件。 在本项目中，我们为 YahooParserTest 准备了一个名为 ny-weather.xml 的测试 XML 文档，还有一个名为 format-expected.dat 的文件，包含了 WeatherFormatter 的期望输出。format-expected.dat文件内容如下：</p>\n<pre><code>*********************************\n Current Weather Conditions for:\n  New York, NY, US\n\n Temperature: 39\n   Condition: Fair\n    Humidity: 67\n  Wind Chill: 39\n*********************************\n</code></pre><p>预先设定了所有值，判断获取到的数据经过Velocity模板格式化之后是否和预期一致。</p>\n<h3 id=\"4-4-执行单元测试\"><a href=\"#4-4-执行单元测试\" class=\"headerlink\" title=\"4.4 执行单元测试\"></a>4.4 执行单元测试</h3><pre><code>1. mvn test\n\n2. 忽略测试失败：&lt;testFailureIgnore&gt;true&lt;/testFailureIgnore&gt; \n    &lt;project&gt; \n        [...]\n        &lt;build&gt; \n            &lt;plugins&gt;\n                &lt;plugin&gt; \n                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; \n                    &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt; \n                    &lt;configuration&gt;\n                        &lt;testFailureIgnore&gt;true&lt;/testFailureIgnore&gt; \n                    &lt;/configuration&gt;\n                &lt;/plugin&gt; \n            &lt;/plugins&gt;\n        &lt;/build&gt;\n        [...] \n    &lt;/project&gt;\n\n3. 命令行动态设置忽略测试失败：\nmvn test -Dmaven.test.failure.ignore=true\n\n4. 当项目的单元测试十分耗时的时候，并不是每一次执行install都需要执行单元测试的，所以我们可以设置跳过单元测试来节约时间。\n    &lt;project&gt; \n        [...]\n        &lt;build&gt; \n            &lt;plugins&gt;\n                &lt;plugin&gt; \n                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; \n                    &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\n                    &lt;configuration&gt;\n                        &lt;skip&gt;true&lt;/skip&gt; \n                    &lt;/configuration&gt;\n                &lt;/plugin&gt; \n            &lt;/plugins&gt;\n        &lt;/build&gt;\n        [...] \n    &lt;/project&gt;\n\n或者命令行动态设置：\nmvn install -Dmaven.test.skip=true\n</code></pre><h3 id=\"4-5-使用Maven-Assembly-插件制作软件分发包\"><a href=\"#4-5-使用Maven-Assembly-插件制作软件分发包\" class=\"headerlink\" title=\"4.5 使用Maven Assembly 插件制作软件分发包\"></a>4.5 使用Maven Assembly 插件制作软件分发包</h3><pre><code>配置Maven Assembly插件：\n    &lt;project&gt; \n        [...]\n        &lt;build&gt; \n            &lt;plugins&gt;\n                &lt;plugin&gt; \n                    &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\n                    &lt;configuration&gt;\n                        &lt;descriptorRefs&gt; \n                                &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\n                        &lt;/descriptorRefs&gt; \n                    &lt;/configuration&gt;\n                &lt;/plugin&gt; \n            &lt;/plugins&gt;\n        &lt;/build&gt;\n        [...] \n    &lt;/project&gt;\n\n如上配置好Assembly插件后，可以通过如下命令来构建：\nmvn install assembly:assembly\n</code></pre><h3 id=\"第五章-一个简单的Web应用\"><a href=\"#第五章-一个简单的Web应用\" class=\"headerlink\" title=\"第五章 一个简单的Web应用\"></a>第五章 一个简单的Web应用</h3><p><a href=\"https://github.com/Farubaba/simple-example\" target=\"_blank\" rel=\"noopener\">Maven simple-weather示例项目Git地址</a></p>\n<h3 id=\"5-1-创建web应用\"><a href=\"#5-1-创建web应用\" class=\"headerlink\" title=\"5.1 创建web应用\"></a>5.1 创建web应用</h3><pre><code>mvn archetype:generate\n在列出的模板中选择需要的，输入数字编号。\n\npom.xml文件中最根本的区别在于：\n&lt;packaging&gt;war&lt;/packaging&gt;\n</code></pre><h3 id=\"5-2-Servlet容器Jetty插件配置使用\"><a href=\"#5-2-Servlet容器Jetty插件配置使用\" class=\"headerlink\" title=\"5.2 Servlet容器Jetty插件配置使用\"></a>5.2 Servlet容器Jetty插件配置使用</h3><pre><code>1. 配置Jetty插件\n&lt;project&gt; \n    [...]\n    &lt;build&gt; \n        &lt;finalName&gt;simple-webapp&lt;/finalName&gt; \n        &lt;plugins&gt;\n            &lt;plugin&gt; \n                &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt; \n                &lt;artifactId&gt;maven-jetty-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt; \n        &lt;/plugins&gt;\n    &lt;/build&gt;\n    [...] \n&lt;/project&gt;\n\n2. 启动Jetty服务器\nmvn jetty:run\n</code></pre><h3 id=\"5-3-创建和配置Servlet程序\"><a href=\"#5-3-创建和配置Servlet程序\" class=\"headerlink\" title=\"5.3 创建和配置Servlet程序\"></a>5.3 创建和配置Servlet程序</h3><p>为了把servlet 添加到你的 web 应用，并且使其与请求路径匹配， 需要添加如下的 servlet 和 servlet-mapping 元素至你项目的 web.xml 文件。 文件 web.xml 可以在目录 src/main/webapp/WEB-INF 中找到。</p>\n<pre><code>&lt;!DOCTYPE web-app PUBLIC\n&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot; &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;\n&lt;web-app&gt;\n    &lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt; \n    &lt;servlet&gt;\n        &lt;servlet-name&gt;simple&lt;/servlet-name&gt;\n        &lt;servlet-class&gt;org.sonatype.mavenbook.web.SimpleServlet&lt;/servlet-class&gt;     \n    &lt;/servlet&gt;\n    &lt;servlet-mapping&gt;\n        &lt;servlet-name&gt;simple&lt;/servlet-name&gt;\n        &lt;url-pattern&gt;/simple&lt;/url-pattern&gt; \n    &lt;/servlet-mapping&gt;\n&lt;/web-app&gt;\n</code></pre><h3 id=\"5-4-添加Servlet-API支持\"><a href=\"#5-4-添加Servlet-API支持\" class=\"headerlink\" title=\"5.4 添加Servlet API支持\"></a>5.4 添加Servlet API支持</h3><pre><code>到目前为止，直接执行：mvn compile 会失败，因为我们还没有为web项目添加Servlet支持。\n</code></pre><p>为了编写一个 servlet ，我们需要添加 Servlet API 作为项目依赖。 Servlet 规格说明是一个 JAR 文件，它能从 Sun Microsystems 的站点下载到 http:// java.sun.com/products/servlet/download.html 。JAR 文件下载好之后你需要把它 安装到位于 ~/.m2/repository 的 Maven 本地仓库。你必须为所有 Sun Microsystems 维护的 J2EE API 重复同样的过程，包括 JNDI， JDBC， Servlet， JSP， JTA， 以 及其它。 如果你不想这么做因为觉得这样太无聊了，其实不只有你这么认为。 幸 运的是，有一种更简单的方法来下载所有这些类库并安装到本地仓库 —— Apache Geronimo 的独立的开源实现。</p>\n<p>添加像 JSP API 或者 Servlet API 这样的依赖现在很简单明了了，不再需要你从 web 站点手工下载 JAR 文件然后再安装到本地仓库。 关键是你必须知道去哪里找，使用 什么 groupId， artifactId， 和 version 来引用恰当的 Apache Geronimo 实现。给 pom.xml 添加如下的依赖元素以添加对 Servlet 规格说明 API 的依赖。.</p>\n<pre><code>添加 Servlet 2.4 规格说明作为依赖：\n（你必须看一下Maven 的公共仓库来决定使用什么版本。 最好使用某个规格说明实现的最新版本）\n&lt;project&gt; \n    [...]\n    &lt;dependencies&gt; \n        [...]\n        &lt;dependency&gt; \n            &lt;groupId&gt;org.apache.geronimo.specs&lt;/groupId&gt;\n            &lt;artifactId&gt;geronimo-servlet_2.4_spec&lt;/artifactId&gt;\n            &lt;version&gt;1.1.1&lt;/version&gt;\n            &lt;scope&gt;provided&lt;/scope&gt;\n        &lt;/dependency&gt; \n    &lt;/dependencies&gt; \n    [...]\n&lt;/project&gt;\n</code></pre><p>如果你对在这个简单 web 应用编写自定义 JSP 标签感兴趣，你将需要添加对 JSP 2.0 规格说明的依赖。 使用以下配置来加入这个依赖。</p>\n<pre><code>&lt;project&gt; \n    [...]\n    &lt;dependencies&gt; \n        [...]\n        &lt;dependency&gt; \n            &lt;groupId&gt;org.apache.geronimo.specs&lt;/groupId&gt;\n            &lt;artifactId&gt;geronimo-jsp_2.0_spec&lt;/artifactId&gt;\n            &lt;version&gt;1.1&lt;/version&gt;\n            &lt;scope&gt;provided&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    [...]\n&lt;/project&gt;\n</code></pre><h3 id=\"5-6-运行Servlet\"><a href=\"#5-6-运行Servlet\" class=\"headerlink\" title=\"5.6 运行Servlet\"></a>5.6 运行Servlet</h3><p>在添加好这个 Servlet 规格说明依赖之后，运行 mvn clean install ，然后运行 mvn jetty:run</p>\n<pre><code>mvn clean install\nmvn jetty:run\n</code></pre><p>命令行访问index.html页面，查看控制台输出：</p>\n<pre><code>curl http://localhost:8080/simple-webapp/simple\n</code></pre><h3 id=\"第六章-一个多模块项目\"><a href=\"#第六章-一个多模块项目\" class=\"headerlink\" title=\"第六章 一个多模块项目\"></a>第六章 一个多模块项目</h3><p><a href=\"https://github.com/Farubaba/simple-example\" target=\"_blank\" rel=\"noopener\">Maven simple-weather示例项目Git地址</a>    </p>\n<p><a href=\"http://book.huihoo.com/maven-the-definitive-guide/multimodule-web-spring.html\" target=\"_blank\" rel=\"noopener\">The Definitive Guide</a></p>\n<h3 id=\"6-1-多模块项目结构图父POM\"><a href=\"#6-1-多模块项目结构图父POM\" class=\"headerlink\" title=\"6.1 多模块项目结构图父POM\"></a>6.1 多模块项目结构图父POM</h3><p>一个多模块项目通过一个父POM引用一个或多个子模块来定义，并且\\<packaging>pom\\</packaging>。如下所示：</p>\n<pre><code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; \n    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n    xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0\n                        http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt; \n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;groupId&gt;org.sonatype.mavenbook.ch06&lt;/groupId&gt;\n    &lt;artifactId&gt;simple-parent&lt;/artifactId&gt;\n    &lt;packaging&gt;pom&lt;/packaging&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;name&gt;Chapter 6 Simple Parent Project&lt;/name&gt;\n\n    &lt;modules&gt; \n        &lt;module&gt;simple-weather&lt;/module&gt; \n        &lt;module&gt;simple-webapp&lt;/module&gt;\n    &lt;/modules&gt;\n    &lt;build&gt; \n        &lt;pluginManagement&gt;\n            &lt;plugins&gt;\n                &lt;plugin&gt;\n                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                    &lt;configuration&gt;\n                        &lt;source&gt;1.5&lt;/source&gt;\n                        &lt;target&gt;1.5&lt;/target&gt;\n                    &lt;/configuration&gt;\n                &lt;/plugin&gt;\n            &lt;/plugins&gt;\n        &lt;/pluginManagement&gt;\n    &lt;/build&gt;\n    &lt;dependencies&gt; \n        &lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;/groupId&gt;\n            &lt;artifactId&gt;junit&lt;/artifactId&gt;\n            &lt;version&gt;3.8.1&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre><p>注意simple-parent定义了一组Maven坐 标:groupId是org.sonatype.mavenbook，artifactId是simple-parent，version是1.0。 这个父项目不像之前的项目那样创建一个JAR或者一个WAR，它仅仅是一个引用其它 Maven项目的POM。像simple-parent这样仅仅提供项目对象模型的项目，正确的的打包 类型是pom。pom.xml中下一部分列出了项目的子模块。这些模块在modules元素中定义， 每个modules元素对应了一个simple-parent/目录下的子目录。Maven知道去这些子目录 寻找pom.xml文件，并且，在构建的simp-parent的时候，它会将这些子模块包含到要构 建的项目中。</p>\n<p>最后，我们定义了一些将会被所有子模块继承的设置。simple-parent的build部 分配置了所有Java编译的目标是Java 5 JVM。因为compiler插件默认绑定到了生 命周期，我们就可以使用pluginManagement部分来配置。我们将会在后面的章节 详细讨论pluginManagement，区分为默认的插件提供配置和真正的绑定插件是很 容易的。dependencies元素将JUnit 3.8.1添加为一个全局的依赖。build配置和 dependencies都会被所有的子模块继承。使用POM继承允许你添加一些全局的依赖如 JUnit和Log4J。</p>\n<h3 id=\"6-2-子POM\"><a href=\"#6-2-子POM\" class=\"headerlink\" title=\"6.2 子POM\"></a>6.2 子POM</h3><pre><code>每个子pom都需要定义\\&lt;parent&gt;标签，值全部一样。\n\n&lt;parent&gt;\n    &lt;groupId&gt;org.sonatype.mavenbook.optimize&lt;/groupId&gt;\n    &lt;artifactId&gt;simple-parent&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n  &lt;/parent&gt;\n</code></pre><h3 id=\"6-3-构建多模块项目\"><a href=\"#6-3-构建多模块项目\" class=\"headerlink\" title=\"6.3 构建多模块项目\"></a>6.3 构建多模块项目</h3><pre><code>在parent-project中执行：\nmvn clean install\n</code></pre><h3 id=\"6-4-运行多模块项目\"><a href=\"#6-4-运行多模块项目\" class=\"headerlink\" title=\"6.4 运行多模块项目\"></a>6.4 运行多模块项目</h3><pre><code>在parent-project中执行：\nmvn jetty:run\n</code></pre><p>Jetty启动之后，在浏览器载入形如：<a href=\"http://localhost:8080/simple-webapp/weather\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/simple-webapp/weather</a>? zip=01201，你应该看到格式化的天气输出.</p>\n<p>当Maven执行一个带有子模块的项目的时候，Maven首先载入父POM，然后定位所有的子 模块POM。Maven然后将所有这些项目的POM放入到一个称为Maven 反应堆(Reactor)的 东西中，由它负责分析模块之间的依赖关系。这个反应堆处理组件的排序，以确保相互 独立的模块能以适当的顺序被编译和安装。</p>\n<h3 id=\"第七章-多模块企业级项目\"><a href=\"#第七章-多模块企业级项目\" class=\"headerlink\" title=\"第七章 多模块企业级项目\"></a>第七章 多模块企业级项目</h3><p><a href=\"https://github.com/Farubaba/simple-example\" target=\"_blank\" rel=\"noopener\">Maven simple-weather示例项目Git地址</a>    </p>\n<p><img src=\"http://book.huihoo.com/maven-the-definitive-guide/multimodule-web-spring_projects.png\" alt=\"Maven多模块项目结构图\"></p>\n<h3 id=\"7-1-Hibernate项目运行\"><a href=\"#7-1-Hibernate项目运行\" class=\"headerlink\" title=\"7.1 Hibernate项目运行\"></a>7.1 Hibernate项目运行</h3><pre><code>1. 首先需要使用Hibernate3插件构造数据库\n    mvn hibernate3:hbm2ddl\n2. 运行到web容器\n    mvn jetty:run\n</code></pre><h3 id=\"7-2-运行命令行程序\"><a href=\"#7-2-运行命令行程序\" class=\"headerlink\" title=\"7.2 运行命令行程序\"></a>7.2 运行命令行程序</h3><pre><code>1. 运行Maven Assembly插 件的assembly目标\n    mvn assembly:assembly\n2. 调用Hibernate3插件的hbm2ddl目标来创建 HSQLDB数据库\n    mvn hibernate3:hbm2ddl\n3. 运行命令行\n    java -cp target/simple-command-jar-with-dependencies.jar \\ org.sonatype.mavenbook.weather.Main 60202\n</code></pre><h3 id=\"第八章-优化和重构POM\"><a href=\"#第八章-优化和重构POM\" class=\"headerlink\" title=\"第八章 优化和重构POM\"></a>第八章 优化和重构POM</h3><h3 id=\"8-1-POM清理，清理重复的内容\"><a href=\"#8-1-POM清理，清理重复的内容\" class=\"headerlink\" title=\"8.1 POM清理，清理重复的内容\"></a>8.1 POM清理，清理重复的内容</h3><h3 id=\"8-2-优化依赖，被一个以上的module共同依赖的库，应该统一放入父POM的-lt-dependencyManagement-中定义，并在这些module中删除依赖的版本-lt-version\"><a href=\"#8-2-优化依赖，被一个以上的module共同依赖的库，应该统一放入父POM的-lt-dependencyManagement-中定义，并在这些module中删除依赖的版本-lt-version\" class=\"headerlink\" title=\"8.2 优化依赖，被一个以上的module共同依赖的库，应该统一放入父POM的\\&lt;dependencyManagement>中定义，并在这些module中删除依赖的版本\\\\&lt;/version>\"></a>8.2 优化依赖，被一个以上的module共同依赖的库，应该统一放入父POM的\\&lt;dependencyManagement>中定义，并在这些module中删除依赖的版本\\<version>\\&lt;/version></version></h3><pre><code>例如， 优化后的父POM如下：\n    &lt;project&gt; \n        ...\n        &lt;dependencyManagement&gt; \n            &lt;dependencies&gt;\n                &lt;dependency&gt; \n                    &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                    &lt;artifactId&gt;hibernate-annotations&lt;/artifactId&gt;\n                    &lt;version&gt;3.3.0.ga&lt;/version&gt;\n                &lt;/dependency&gt;\n                &lt;dependency&gt;\n                    &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                    &lt;artifactId&gt;hibernate&lt;/artifactId&gt;\n                    &lt;version&gt;3.3.0.ga&lt;/version&gt;\n                &lt;/dependency&gt;\n            &lt;/dependencies&gt;\n        &lt;/dependencyManagement&gt;         \n        ...\n    &lt;project&gt; \n优化后的子POM：\n    &lt;project&gt; \n        ...\n        &lt;dependencies&gt;\n            &lt;dependency&gt; \n                &lt;groupId&gt; org.hibernate&lt;/groupId&gt;\n                &lt;artifactId&gt;hibernate-annotations&lt;/artifactId&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                &lt;artifactId&gt;hibernate-commons-annotations&lt;/artifactId&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n        ...\n    &lt;project&gt; \n</code></pre><h3 id=\"8-3-可预测的共通发布的相同版本号抽取。例如hibernate和hibernate-annotations的版本号总是相同的。\"><a href=\"#8-3-可预测的共通发布的相同版本号抽取。例如hibernate和hibernate-annotations的版本号总是相同的。\" class=\"headerlink\" title=\"8.3 可预测的共通发布的相同版本号抽取。例如hibernate和hibernate-annotations的版本号总是相同的。\"></a>8.3 可预测的共通发布的相同版本号抽取。例如hibernate和hibernate-annotations的版本号总是相同的。</h3><pre><code>    &lt;project&gt; \n    ...\n    &lt;properties&gt;\n        &lt;hibernate.annotations.version&gt;3.3.0.ga&lt;hibernate.annotations.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencyManagement&gt; \n        &lt;dependencies&gt;\n            &lt;dependency&gt; \n                &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                &lt;artifactId&gt;hibernate-annotations&lt;/artifactId&gt;\n                &lt;version&gt;${hibernate.annotations.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                &lt;artifactId&gt;hibernate-commons-annotations&lt;/artifactId&gt;\n                &lt;version&gt;${hibernate.annotations.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;         \n    ...\n&lt;project&gt; \n</code></pre><h3 id=\"8-4-解决兄弟module之间的依赖冲突\"><a href=\"#8-4-解决兄弟module之间的依赖冲突\" class=\"headerlink\" title=\"8.4 解决兄弟module之间的依赖冲突\"></a>8.4 解决兄弟module之间的依赖冲突</h3><pre><code>1. 方案一：将依赖都抽象到父POM中\n2. 方案二：在兄弟目录中，都使用内建属性来动态获取Version。例如：${parent.version}.\n</code></pre><p>为兄弟项目使用内置的项目version和groupId 使用{project.version}和org.sonatype.mavenbook来引用兄弟项目。兄弟项目 基本上一直共享同样的groupId，也基本上一直共享同样的发布版本。使用0.6- SNAPSHOT可以帮你避免前面提到的兄弟版本不一致问题。</p>\n<h3 id=\"8-5-优化插件\"><a href=\"#8-5-优化插件\" class=\"headerlink\" title=\"8.5 优化插件\"></a>8.5 优化插件</h3><pre><code>1. 插件的版本号也可以定义成properties\n2. 使用Maven Dependency插件进行优化\n    mvn dependency:analyze\n    mvn dependency:tree\n</code></pre><h3 id=\"第九章-项目对象模型\"><a href=\"#第九章-项目对象模型\" class=\"headerlink\" title=\"第九章 项目对象模型\"></a>第九章 项目对象模型</h3><p><img src=\"https://images2015.cnblogs.com/blog/737467/201511/737467-20151101222148700-2134239729.png\" alt=\"项目对象模型\"></p>\n<pre><code>项目对象模型包含了四类描述和配置：\n1. 项目总体信息 General Project Information\n2. 构建设置 Build Settings\n3. 构建环境 Build Environment\n     构建环境包含了一些能在不同使用环境中激活的profile。例如，在开发过程 中你可能会想要将应用部署到一个而开发服务器上，\n     而在产品环境中你会需要将 应用部署到产品服务器上。构建环境为特定的环境定制了构建设置，\n     通常它还会 由~/.m2中的自定义settings.xml补充。这个settings文件将会在第 11 章\n     构建 Profile中，以及第 A.1 节 “简介中”的附录 A,附录: Settings细节小节中 讨论。\n4. POM关系 POM Relationships\n</code></pre><h3 id=\"9-1-超级POM\"><a href=\"#9-1-超级POM\" class=\"headerlink\" title=\"9.1 超级POM\"></a>9.1 超级POM</h3><pre><code>超级POM位置：\n/usr/local/maven/lib/maven-2.0.9-uber.jar中的包org.apache.maven.project目录下pom-4.0.0.xml\n</code></pre><h3 id=\"9-2-项目版本号\"><a href=\"#9-2-项目版本号\" class=\"headerlink\" title=\"9.2 项目版本号\"></a>9.2 项目版本号</h3><p>Maven中的版本包含 了以下部分:主版本，次版本，增量版本，和限定版本号</p>\n<pre><code>版本号格式： &lt;major version&gt;.&lt;minor version&gt;.&lt;incremental version&gt;-&lt;qualifier&gt;\n</code></pre><p>版本“1.3.5”由一个主版本1，一个次版本3，和一个增量版本5。而一个 版本“5”只有主版本5，没有次版本和增量版本。限定版本用来标识里程碑构建: alpha和beta发布，限定版本通过连字符与主版本，次版本或增量版本隔离。例如，版 本“1.3-beta-01”有一个主版本1，次版本3，和一个限定版本“beta-01”    </p>\n<p>当你想要在你的POM中使用版本界限的时候，保持你的版本号与标准一致十分重要。 在第 9.4.3 节 “依赖版本界限”中介绍的版本界限，允许你声明一个带有版本界限的 依赖，只有你遵循标准的时候该功能才被支持。因为Maven根据本节中介绍的版本号格 式来对版本进行排序。</p>\n<p>如果你的版本号与格式&lt;主版本&gt;.&lt;次版本&gt;.&lt;增量版本&gt;-&lt;限定版本&gt;相匹配，它就能被 正确的比较;“1.2.3”将被评价成是一个比“1.0.2”更新的构件，这种比较基于主版 本，次版本，和增量版本的数值。如果你的版本发布号没有符合本节介绍的标准，那么 你的版本号只会根据字符串被比较;“1.0.1b”和“1.2.0b”会使用字符串比较。</p>\n<h3 id=\"9-3-构建版本号\"><a href=\"#9-3-构建版本号\" class=\"headerlink\" title=\"9.3 构建版本号\"></a>9.3 构建版本号</h3><p>我们还需要对版本号的限定版本进行排序。以版本号“1.2.3-alpha-2”和“1.2.3- alpha-10”为例，这里“alpha-2”对应了第二次alpha构建，而“alpha-10”对应了第 十次alpha构建。虽然“alpha-10”应该被认为是比“alpha-2”更新的构建，但Maven 排序的结果是“alpha-10”比“alpha-2”更旧，问题的原因就是我们刚才讨论的Maven 处理版本号的方式。</p>\n<p>Maven会将限定版本后面的数字认作一个构建版本。换句话说，这里限定版本 是“alpha”，而构建版本是2。虽然Maven被设计成将构建版本和限定版本分离，但 目前这种解析还是失效的。因此，“alpha-2”和“alpha-10”是使用字符串进行比较 的，而根据字母和数字“alpha-10”在“alpha-2”前面。要避开这种限制，你需要对 你的限定版本使用一些技巧。如果你使用“alpha-02”和“alpha-10”，这个问题就消 除了，一旦Maven能正确的解析版本构建号之后，这种工作方式也还是能用。</p>\n<h3 id=\"9-4-SNAPSHOT版本\"><a href=\"#9-4-SNAPSHOT版本\" class=\"headerlink\" title=\"9.4 SNAPSHOT版本\"></a>9.4 SNAPSHOT版本</h3><pre><code>只能用于开发阶段，默认不会从远程仓库查找，但也可以通过设置来允许上传到远程仓库。\n</code></pre><h3 id=\"9-5-LATEST-和-RELEASE-版本\"><a href=\"#9-5-LATEST-和-RELEASE-版本\" class=\"headerlink\" title=\"9.5 LATEST 和 RELEASE 版本\"></a>9.5 LATEST 和 RELEASE 版本</h3><pre><code>不建议使用，在开发阶段方便，但也可以能因为遗忘疏忽带来意想不到的后果。\n</code></pre><h3 id=\"9-6-变量和属性引用\"><a href=\"#9-6-变量和属性引用\" class=\"headerlink\" title=\"9.6 变量和属性引用\"></a>9.6 变量和属性引用</h3><p>一、变量引用</p>\n<p>Maven提供了三个隐式的变量，可以用来访问环境变量、POM信息和Maven Settings：</p>\n<ol>\n<li>env         暴露了你操作系统或者shell的环境变量</li>\n<li><p>project    project变量暴露了POM。你可以使用点标记(.)的路径来引用POM元素的值。</p>\n<pre><code>例如，在本节中我们使用过groupId和artifactId来设置构建配置 中的finalName元素。\n这个属性引用的语法是:org.sonatype.mavenbook- ${project.artifactId}    \n</code></pre></li>\n<li><p>settings    暴露了Maven settings信息。可以使用点标记(.)的路径来引用settings.xml文件中元素的值</p>\n<pre><code>例如，${settings.offline}会引用~/.m2/ settings.xml文件中offline元素的值\n</code></pre></li>\n</ol>\n<p>二、属性引用</p>\n<p>除了上面这三个隐式的变量，你还可以引用系统属性，以及任何在Maven POM中和构建<br>profile中自定义的属性组</p>\n<ol>\n<li><p>系统属性</p>\n<pre><code>Java系统属性 \n所有可以通过java.lang.System中getProperties()方法访问的属性都被暴露成POM属性。\n一些系统属性的例子是:hudson，/home/hudson，/usr/lib/jvm/ java-1.6.0-openjdk-1.6.0.0/jre，\n和Linux。一个完整的系统属性列表可以 在java.lang.System类的Javadoc中找到。\n\n我们还可以通过pom.xml或者settings.xml中的properties元素设置自己的属 性，\n或者还可以使用外部载入的文件中属性。如果你在pom.xml中设置了一个名 为fooBar的属性，\n该属性就可以通过${fooBar}引用。当你构建一个系统，它针 对不同的部署环境过滤资源，\n那么自定义属性就变得十分有用。这里是在POM中 设置${foo}=bar的语法:\n&lt;properties&gt; \n    &lt;foo&gt;bar&lt;/foo&gt;\n&lt;/properties&gt;\n</code></pre></li>\n<li><p>Maven POM中自定义的属性组</p>\n</li>\n<li>构建profile中自定义的属性组</li>\n</ol>\n<h3 id=\"9-7-依赖范围\"><a href=\"#9-7-依赖范围\" class=\"headerlink\" title=\"9.7 依赖范围\"></a>9.7 依赖范围</h3><p>依赖范围控制哪些依赖在哪些classpath中可用，哪些依赖包含在一个应用中</p>\n<table>\n<thead>\n<tr>\n<th>依赖范围</th>\n<th>描述</th>\n<th>代码示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>compile(编译范围)</td>\n<td>compile是默认的范围;如果没有提供一个范围，那该依赖的范围就是编译范 围。编译范围依赖在所有的classpath中可用，同时它们也会被打包。</td>\n<td>\\<scope>compile\\</scope></td>\n</tr>\n<tr>\n<td>provided(已提供范围)</td>\n<td>provided依赖只有在当JDK或者一个容器已提供该依赖之后才使用。例如，如果 你开发了一个web应用，你可能在编译classpath中需要可用的Servlet API来编 译一个servlet，但是你不会想要在打包好的WAR中包含这个Servlet API;这个 Servlet API JAR由你的应用服务器或者servlet容器提供。已提供范围的依赖在 编译classpath(不是运行时)可用。它们不是传递性的，也不会被打包</td>\n<td>\\<scope>compile\\</scope></td>\n</tr>\n<tr>\n<td>runtime(运行时范围)</td>\n<td>runtime依赖在运行和测试系统的时候需要，但在编译的时候不需要。比如，你 可能在编译的时候只需要JDBC API JAR，而只有在运行的时候才需要JDBC驱动实 现。</td>\n<td>\\<scope>compile\\</scope></td>\n</tr>\n<tr>\n<td>test(测试范围)</td>\n<td>test范围依赖 在一般的 编译和运行时都不需要，它们只有在测试编译和测试运 行阶段可用。测试范围依赖在之前介绍过</td>\n<td>\\<scope>compile\\</scope></td>\n</tr>\n<tr>\n<td>system(系统范围)</td>\n<td>system范围依赖与provided类似，但是你必须显式的提供一个对于本地系统中 JAR文件的路径。这么做是为了允许基于本地对象编译，而这些对象是系统类库 的一部分。这样的构件应该是一直可用的，Maven也不会在仓库中去寻找它。如 果你将一个依赖范围设置成系统范围，你必须同时提供一个systemPath元素。注 意该范围是不推荐使用的(你应该一直尽量去从公共或定制的Maven仓库中引用 依赖)</td>\n<td>\\<scope>compile\\</scope></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>可选依赖</td>\n<td>编译这个项目的时候你需要两个依赖类库EHCache和SwarmCache，但是你不希望在使用你类库的项 目中，这两个依赖类库同时作为传递性运行时依赖出现。<b>在理想的世界中，你不需要使用可选依赖。</b>你可以将EHCache相关的代码放到my- project-ehcache子模块中，将SwarmCache相关的代码放到my-project-swarmcache子模 块中，而非创建一个带有一系列可选依赖的大项目。这样，其它项目就可以只引用特定 实现的项目，发挥传递性依赖的功效，而不用去引用my-project项目，再自己声明特定 的依赖。</td>\n<td>\\<dependency><br>\\<groupid>swarmcache\\</groupid> \\<artifactid>swarmcache\\</artifactid><br>\\<version>1.0RC2\\</version><font color=\"red\"><br>\\<optional>true\\</optional></font><br>\\</dependency></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"9-8-依赖版本界限\"><a href=\"#9-8-依赖版本界限\" class=\"headerlink\" title=\"9.8 依赖版本界限\"></a>9.8 依赖版本界限</h3><p>你并不是必须为依赖声明某个特定的版本，你可以指定一个满足给定依赖的版本界限。</p>\n<p>例如，你可以指定你的项目依赖于JUnit的3.8或以上版本，或者说依赖于JUnit 1.2.10 和1.2.14之间的某个版本。你可以使用如下的字符来围绕一个或多个版本号，来实现版 本界限。</p>\n<table>\n<thead>\n<tr>\n<th>版本界限字符</th>\n<th>示例</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>(,) 不包含量词</td>\n<td>(1.2.3,2.5.8)</td>\n<td>支持从1.2.3到2.5.8之间的所有版本,开区间</td>\n</tr>\n<tr>\n<td>[,] 包含量词</td>\n<td>[1.2.3,2.5.8]</td>\n<td>支持从1.2.3到2.5.8之间的所有版本,闭区间</td>\n</tr>\n<tr>\n<td></td>\n<td>[1.2.3,2.5.8)</td>\n<td>支持从1.2.3到2.5.8之间的所有版本,左闭右开区间</td>\n</tr>\n<tr>\n<td></td>\n<td>(1.2.3,2.5.8]</td>\n<td>支持从1.2.3到2.5.8之间的所有版本,左开右闭区间</td>\n</tr>\n<tr>\n<td></td>\n<td>[1.2.3,)</td>\n<td>支持所有大于1.2.3的版本</td>\n</tr>\n<tr>\n<td></td>\n<td>(,2.5.8]</td>\n<td>支持所有小于2.5.8的版本</td>\n</tr>\n<tr>\n<td></td>\n<td>[1.2.3]</td>\n<td>只支持1.2.3版本</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"9-9-传递性依赖和范围\"><a href=\"#9-9-传递性依赖和范围\" class=\"headerlink\" title=\"9.9 传递性依赖和范围\"></a>9.9 传递性依赖和范围</h3><p>“依赖范围”中提到的每种依赖范围不仅仅影响声明项目中的依赖范围，它也对所传递性依赖起作用。表达该信息最简单的方式是通过一张表来表述：<b>范围如何影响传递性依赖</b></p>\n<table>\n<thead>\n<tr>\n<th>直接范围</th>\n<th>传递性范围</th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td><b>compile</b></td>\n<td><b>provided</b></td>\n<td><b>runtime</b></td>\n<td><b>test</b></td>\n</tr>\n<tr>\n<td><b>compile</b></td>\n<td>compile</td>\n<td>-</td>\n<td>runtime</td>\n<td>-</td>\n</tr>\n<tr>\n<td><b>provided</b></td>\n<td>provided</td>\n<td>provided</td>\n<td>provided</td>\n<td>-</td>\n</tr>\n<tr>\n<td><b>runtime</b></td>\n<td>runtime</td>\n<td>-</td>\n<td>runtime</td>\n<td>-</td>\n</tr>\n<tr>\n<td><b>test</b></td>\n<td>test</td>\n<td>-</td>\n<td>test</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<pre><code>A----compile----&gt;B   B----compile----&gt;C   结果： A----&gt;compile----&gt;C \nA----compile----&gt;B   B----provided---&gt;C   结果： A----&gt;不依赖于----&gt;C\nA----compile----&gt;B   B----runtime----&gt;C   结果： A----&gt;runtime----&gt;C  \nA----compile----&gt;B   B----test-------&gt;C   结果： A----&gt;不依赖于----&gt;C  \n\nA----provided---&gt;B   B----compile----&gt;C   结果： A----&gt;provided----&gt;C \nA----provided---&gt;B   B----provided---&gt;C   结果： A----&gt;provided----&gt;C\nA----provided---&gt;B   B----runtime----&gt;C   结果： A----&gt;provided----&gt;C  \nA----provided---&gt;B   B----test-------&gt;C   结果： A----&gt;不依赖于-----&gt;C\n\nA----runtime----&gt;B   B----compile----&gt;C   结果： A----&gt;runtime----&gt;C \nA----runtime----&gt;B   B----provided---&gt;C   结果： A----&gt;不依赖于----&gt;C\nA----runtime----&gt;B   B----runtime----&gt;C   结果： A----&gt;runtime----&gt;C  \nA----runtime----&gt;B   B----test-------&gt;C   结果： A----&gt;不依赖于----&gt;C  \n\nA------test-----&gt;B   B----compile----&gt;C   结果： A-----&gt;test-----&gt;C \nA------test-----&gt;B   B----provided---&gt;C   结果： A----&gt;不依赖于----&gt;C\nA------test-----&gt;B   B----runtime----&gt;C   结果： A-----&gt;test-----&gt;C  \nA------test-----&gt;B   B----test-------&gt;C   结果： A----&gt;不依赖于----&gt;C  \n</code></pre><h3 id=\"9-10-冲突解决-排除一个传递性依赖\"><a href=\"#9-10-冲突解决-排除一个传递性依赖\" class=\"headerlink\" title=\"9.10 冲突解决-排除一个传递性依赖\"></a>9.10 冲突解决-排除一个传递性依赖</h3><p>排除一个传递性依赖：\\<exclusion>\\</exclusion></p>\n<pre><code>&lt;dependency&gt; \n    &lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt;\n    &lt;artifactId&gt;project-a&lt;/artifactId&gt; \n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;exclusions&gt;\n        &lt;exclusion&gt; \n            &lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt; \n            &lt;artifactId&gt;project-b&lt;/artifactId&gt;\n        &lt;/exclusion&gt; \n    &lt;/exclusions&gt;\n&lt;/dependency&gt;\n</code></pre><p>排除并替换一个传递性依赖<br>其实就是排除一个传递性依赖，然后再添加一个同样的依赖来起到替换的作用</p>\n<pre><code>&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n        &lt;artifactId&gt;hibernate&lt;/artifactId&gt;\n        &lt;version&gt;3.2.5.ga&lt;/version&gt;\n        &lt;exclusions&gt;\n            &lt;exclusion&gt;\n                &lt;groupId&gt;javax.transaction&lt;/groupId&gt; \n                &lt;artifactId&gt;jta&lt;/artifactId&gt;\n            &lt;/exclusion&gt;\n        &lt;/exclusions&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.apache.geronimo.specs&lt;/groupId&gt;\n        &lt;artifactId&gt;geronimo-jta_1.1_spec&lt;/artifactId&gt;\n        &lt;version&gt;1.1&lt;/version&gt;\n    &lt;/dependency&gt; \n&lt;/dependencies&gt;\n</code></pre><p>四种可能需要排除替换的情况：</p>\n<ol>\n<li>构建的groupId和artifactId已经更改了，而当前的项目需要一个与传递性 依赖不同名称的版本——结果是classpath中出现了同样项目的两份内容。 一般来说Maven会捕捉到这种冲突并且使用该项目的一个单独的版本，但是 当artifactId和artifactId不一样的时候，Maven就会认为它们是两种不同的类 库。</li>\n<li>某个构件没有在你的项目中被使用，而且该传递性依赖没有被标志为可选依赖。 在这种情况下，你可能想要排除这种依赖，因为它不是你的系统需要的东西，你 要尽量减少应用程序分发时的类库数目。</li>\n<li>一个构件已经在运行时的容器中提供了，因此不应该被包含在你的构件中。该情 况的一个例子是，如果一个依赖依赖于如Servlet API的东西，并且你又要确保 这样的依赖没有包含在web应用的WEB-INF/lib目录中。</li>\n<li>为了排除一个可能是多个实现的API的依赖。这种情况在例 9.8 “排除并替换一 个传递性依赖”中阐述;有一个Sun API，需要点击许可证，并且需要耗时的手 工安装到自定义仓库，对于同样的API有可免费分发版本，在中央Maven仓库中可 用(Geronimo’s JTA 实现)</li>\n</ol>\n<h3 id=\"9-11-依赖管理\"><a href=\"#9-11-依赖管理\" class=\"headerlink\" title=\"9.11 依赖管理\"></a>9.11 依赖管理</h3><p>父POM中dependencyManagement元素中为你提供了一种方式来统一依赖版本号，使用pom.xml中的dependencyManagement元素能让你在子项目中引用一个依赖而不用显式的列出版本号。</p>\n<p>注意：如果子项目定义了一个版本，它将覆盖顶层POM 的dependencyManagement元素中的版本。那就是:只有在子项目没有直接声明一个版本 的时候，dependencyManagement定义的版本才会被使用。</p>\n<h3 id=\"9-12-项目继承\"><a href=\"#9-12-项目继承\" class=\"headerlink\" title=\"9.12 项目继承\"></a>9.12 项目继承</h3><p>POM继承关系图：</p>\n<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1527092792721&amp;di=c572597d764f196d1dd77148ae07808b&amp;imgtype=jpg&amp;src=http%3A%2F%2Fimg1.imgtn.bdimg.com%2Fit%2Fu%3D2335801681%2C471830450%26fm%3D214%26gp%3D0.jpg\" alt=\"POM继承关系图\"></p>\n<p>有些情况你会想要一个项目从父POM中继承一些值。你可能正构建一个大型的系统，你 不想一遍又一遍的重复同样的依赖元素。如果你的项目通过parent元素使用继承，你 就可以避免这种重复。当一个项目声明一个parent的时候，它从父项目的POM中继承信 息。它也可以覆盖父POM中的值，或者添加一些新的值。</p>\n<p>所有的Maven POM从父POM中继承值。如果一个POM没有通过parent元素指定一个直 接的父项目，那这个POM就会从超级POM继承值。</p>\n<pre><code>项目继承方式如下：\n&lt;project&gt; \n    &lt;parent&gt;\n        &lt;groupId&gt;com.training.killerapp&lt;/groupId&gt;\n        &lt;artifactId&gt;a-parent&lt;/artifactId&gt;\n        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n    &lt;/parent&gt; \n    &lt;artifactId&gt;project-a&lt;/artifactId&gt; \n    ...\n&lt;/project&gt;\n</code></pre><p>当一个项目指定一个父项目的时候，Maven在读取当前项目的POM之前，会使用这个 父POM作为起始点。它继承所有东西，包括groupId和version。你会注意到project- a没有指定groupId和version，它们从a-parent继承而来。有了parent元素，一个 POM就只需要定义一个artifactId。但这不是强制的，project-a可以有一个不同 的groupId和version，但如果不提供值，Maven就会使用在父POM中指定的值。如果你 开始使用Maven来管理和构建大型的多模块项目，你就会常常创建许多共享一组通用 的groupId和version的项目。</p>\n<p>当你继承一个POM，你可以选择直接使用继承的POM信息，或者选择覆盖它。以下是一个 Maven POM从它父POM中继承的项目列表:</p>\n<ol>\n<li>定义符(groupId和artifactId中至少有一个必须被覆盖) </li>\n<li>依赖</li>\n<li>开发者和贡献者</li>\n<li>插件列表</li>\n<li>报告列表</li>\n<li>插件执行 (id匹配的执行会被合并) </li>\n<li>插件配置</li>\n</ol>\n<h3 id=\"9-13-POM-最佳实践\"><a href=\"#9-13-POM-最佳实践\" class=\"headerlink\" title=\"9.13 POM 最佳实践\"></a>9.13 POM 最佳实践</h3><ol>\n<li><p>创建一个集中管理依赖的pom项目 baseDeps 关键在于：<b>\\<packaing>pom\\</packaing></b></p>\n<pre><code>&lt;project&gt;\n    &lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt;\n    &lt;artifactId&gt;persistence-deps&lt;/artifactId&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;packaging&gt;pom&lt;/packaging&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n            &lt;artifactId&gt;hibernate&lt;/artifactId&gt;\n            &lt;version&gt;${hibernateVersion}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n            &lt;artifactId&gt;hibernate-annotations&lt;/artifactId&gt;\n            &lt;version&gt;${hibernateAnnotationsVersion}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-hibernate3&lt;/artifactId&gt;\n            &lt;version&gt;${springVersion}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;version&gt;${mysqlVersion}&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    &lt;properties&gt;\n        &lt;mysqlVersion&gt;(5.1,)&lt;/mysqlVersion&gt;\n        &lt;springVersion&gt;(2.0.6,)&lt;/springVersion&gt;\n        &lt;hibernateVersion&gt;3.2.5.ga&lt;/hibernateVersion&gt;\n        &lt;hibernateAnnotationsVersion&gt;3.3.0.ga&lt;/hibernateAnnotationsVersion&gt;\n    &lt;/properties&gt;\n&lt;/project&gt;\n</code></pre></li>\n<li><p>执行mvn install  将baseDeps pom类型项目安装到maven仓库。</p>\n</li>\n<li><p>在其他项目中声明对baseDeps项目的依赖，关键在于\\<type>pom\\</type></p>\n<pre><code>&lt;project&gt;\n    &lt;description&gt;This is a project requiring JDBC&lt;/description&gt;\n    ...\n    &lt;dependencies&gt;\n        ...\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt;\n            &lt;artifactId&gt;baseDeps&lt;/artifactId&gt;\n            &lt;version&gt;1.0&lt;/version&gt;\n            &lt;type&gt;pom&lt;/type&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre></li>\n<li><p>继承 VS 多模块</p>\n<p> <img src=\"https://books.sonatype.com/mvnref-book/reference/figs/web/pom_book-example.png\" alt=\"继承 VS 多模块\"></p>\n</li>\n<li><p>多模块企业级项目</p>\n<p> <img src=\"https://books.sonatype.com/mvnref-book/reference/figs/web/pom_real_multi.png\" alt=\"实际应用多模块企业级项目\"></p>\n</li>\n</ol>\n<h3 id=\"第十章-构建生命周期\"><a href=\"#第十章-构建生命周期\" class=\"headerlink\" title=\"第十章 构建生命周期\"></a>第十章 构建生命周期</h3><h3 id=\"第十一章-构建Profile\"><a href=\"#第十一章-构建Profile\" class=\"headerlink\" title=\"第十一章 构建Profile\"></a>第十一章 构建Profile</h3><h3 id=\"11-1-什么是构建Profile\"><a href=\"#11-1-什么是构建Profile\" class=\"headerlink\" title=\"11.1 什么是构建Profile\"></a>11.1 什么是构建Profile</h3><p>Profile能让你为一个特殊的环境自定义一个特殊的构建;profile使得不同环境间构建 的可移植性成为可能。</p>\n<p>Profile可以配置package信息: debug, log等<br>Profile可以配置生产环境信息: develop版本，product版本，release版本等<br>Profile可以配置渠道信息：googleplay，360，豌豆荚等<br>更多的时候渠道分发包，使用Assembly插件来构建是非常适合的。</p>\n<p>Profile类似gradle中的 Flavors配置，可以配置打出不同的包。</p>\n<p>Maven中的profile是一组可选的配置，可以用来设置或者覆盖配置默认值。有了 profile，你就可以为不同的环境定制构建。profile可以在pom.xml中配置，并给定一 个id。然后你就可以在运行Maven的时候使用的命令行标记告诉Maven运行特定profile 中的目标。以下pom.xml使用production profile覆盖了默认的Compiler插件设置。</p>\n<pre><code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n    xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0\nhttp://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt;\n    &lt;artifactId&gt;simple&lt;/artifactId&gt;\n    &lt;packaging&gt;jar&lt;/packaging&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;simple&lt;/name&gt;\n    &lt;url&gt;http://maven.apache.org&lt;/url&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;/groupId&gt;\n            &lt;artifactId&gt;junit&lt;/artifactId&gt;\n            &lt;version&gt;3.8.1&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    &lt;profiles&gt;\n        ...\n        &lt;profile&gt;\n            &lt;id&gt;production&lt;/id&gt;\n            ...\n            &lt;build&gt;\n                ...\n                &lt;plugins&gt;\n                    &lt;plugin&gt;\n                        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                        &lt;configuration&gt;\n                            &lt;debug&gt;false&lt;/debug&gt;\n                            &lt;optimize&gt;true&lt;/optimize&gt;\n                        &lt;/configuration&gt;\n                    &lt;/plugin&gt;\n                &lt;/plugins&gt;\n            &lt;/build&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/project&gt;\n</code></pre><h3 id=\"11-2-profile的语法\"><a href=\"#11-2-profile的语法\" class=\"headerlink\" title=\"11.2 profile的语法\"></a>11.2 profile的语法</h3><table>\n<thead>\n<tr>\n<th>序号</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>pom.xml中的profiles元素，它包含了一个或者多个profile元素。由于profile覆 盖了pom.xml中的默认设置，profiles通常是pom.xml中的最后一个元素。</td>\n</tr>\n<tr>\n<td>2</td>\n<td>每个profile必须要有一个id元素。这个id元素包含的名字将在命令行调用profile 时被用到。我们可以通过传给Maven一个-P&lt;profile_id&gt;参数来调用profile。</td>\n</tr>\n<tr>\n<td>3</td>\n<td>一个profile元素可以包含很多其它元素，只要这些元素可以出现在POM XML文档 的project元素下面。本例中，我们覆盖了Compiler插件的行为，因此必须覆盖插 件配置，该配置通常位于一个build和一个plugins元素下面</td>\n</tr>\n<tr>\n<td>4</td>\n<td>我们覆盖了Maven Compiler插件的配置。确保通过production profile产生的字 节码不会包含调试信息，并且字节码会被编译器优化</td>\n</tr>\n</tbody>\n</table>\n<p>要使用production profile来运行mvn install，你需要在命令行传入-Pproduction参 数。要验证production profile覆盖了默认的Compiler插件配置，可以像这样以开启调 试输出(-X) 的方式运行Maven。</p>\n<pre><code>mvn clean install -Pproduction -X\n</code></pre><p>Profile中允许覆盖整个pom.xml，其节点可以如下：</p>\n<pre><code>&lt;project&gt;\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;build&gt;\n                &lt;defaultGoal&gt;...&lt;/defaultGoal&gt;\n                &lt;finalName&gt;...&lt;/finalName&gt;\n                &lt;resources&gt;...&lt;/resources&gt;\n                &lt;testResources&gt;...&lt;/testResources&gt;\n                &lt;plugins&gt;...&lt;/plugins&gt;\n            &lt;/build&gt;\n            &lt;reporting&gt;...&lt;/reporting&gt;\n            &lt;modules&gt;...&lt;/modules&gt;\n            &lt;dependencies&gt;...&lt;/dependencies&gt;\n            &lt;dependencyManagement&gt;...&lt;/dependencyManagement&gt;\n            &lt;distributionManagement&gt;...&lt;/distributionManagement&gt;\n            &lt;repositories&gt;...&lt;/repositories&gt;\n            &lt;pluginRepositories&gt;...&lt;/pluginRepositories&gt;\n            &lt;properties&gt;...&lt;/properties&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/project&gt;\n</code></pre><h3 id=\"11-3-激活Profile\"><a href=\"#11-3-激活Profile\" class=\"headerlink\" title=\"11.3 激活Profile\"></a>11.3 激活Profile</h3><pre><code>当jdk为1.6时，jdk16这个profile会被激活（activation）\n&lt;profiles&gt;\n    &lt;profile&gt;\n        &lt;id&gt;jdk16&lt;/id&gt;\n        &lt;activation&gt;\n            &lt;jdk&gt;1.6&lt;/jdk&gt;\n        &lt;/activation&gt;\n        &lt;modules&gt;\n            &lt;module&gt;simple-script&lt;/module&gt;\n        &lt;/modules&gt;\n    &lt;/profile&gt;\n&lt;/profiles&gt;\n</code></pre><h3 id=\"11-4-当所有条件满足时才会激活Profile\"><a href=\"#11-4-当所有条件满足时才会激活Profile\" class=\"headerlink\" title=\"11.4 当所有条件满足时才会激活Profile\"></a>11.4 当所有条件满足时才会激活Profile</h3><pre><code>&lt;project&gt;\n    ...\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;id&gt;dev&lt;/id&gt;\n            &lt;activation&gt;\n                &lt;activeByDefault&gt;false&lt;/activeByDefault&gt;\n                &lt;jdk&gt;1.5&lt;/jdk&gt;\n                &lt;os&gt;\n                    &lt;name&gt;Windows XP&lt;/name&gt;\n                    &lt;family&gt;Windows&lt;/family&gt;\n                    &lt;arch&gt;x86&lt;/arch&gt;\n                    &lt;version&gt;5.1.2600&lt;/version&gt;\n                &lt;/os&gt;\n                &lt;property&gt;\n                    &lt;name&gt;mavenVersion&lt;/name&gt;\n                    &lt;value&gt;2.0.5&lt;/value&gt;\n                &lt;/property&gt;\n                &lt;file&gt;\n                    &lt;exists&gt;file2.properties&lt;/exists&gt;\n                    &lt;missing&gt;file1.properties&lt;/missing&gt;\n                &lt;/file&gt;\n            &lt;/activation&gt;\n            ...\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/project&gt;\n</code></pre><h3 id=\"11-5-属性缺失时激活Profile\"><a href=\"#11-5-属性缺失时激活Profile\" class=\"headerlink\" title=\"11.5 属性缺失时激活Profile\"></a>11.5 属性缺失时激活Profile</h3><pre><code>&lt;project&gt;\n    ...\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;id&gt;development&lt;/id&gt;\n            &lt;activation&gt;\n                &lt;property&gt;\n                    &lt;name&gt;!environment.type&lt;/name&gt;\n                &lt;/property&gt;\n            &lt;/activation&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/project&gt;\n</code></pre><h3 id=\"11-6-外部Profile，将pom-xml中profile抽取成单独的profile-xml\"><a href=\"#11-6-外部Profile，将pom-xml中profile抽取成单独的profile-xml\" class=\"headerlink\" title=\"11.6 外部Profile，将pom.xml中profile抽取成单独的profile.xml\"></a>11.6 外部Profile，将pom.xml中profile抽取成单独的profile.xml</h3><pre><code>&lt;profiles&gt;\n&lt;profile&gt;\n    &lt;id&gt;development&lt;/id&gt;\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;debug&gt;true&lt;/debug&gt;\n                    &lt;optimize&gt;false&lt;/optimize&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/profile&gt;\n&lt;profile&gt;\n    &lt;id&gt;production&lt;/id&gt;\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;debug&gt;false&lt;/debug&gt;\n                    &lt;optimize&gt;true&lt;/optimize&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/profile&gt;\n&lt;/profiles&gt;\n</code></pre><h3 id=\"11-7-Settings-Profile\"><a href=\"#11-7-Settings-Profile\" class=\"headerlink\" title=\"11.7 Settings Profile\"></a>11.7 Settings Profile</h3><p>Settings Profile可以同时应用到你的所有maven构建中，就相当于默认profile,可以在以下两个地方定义Settings Profile。</p>\n<pre><code>1. 定义在 ~/.m2/settings.xml中\n2. 定义在 /usr/local/maven/conf/settings.xml中\n</code></pre><p>配置方式如：</p>\n<pre><code>&lt;settings&gt;\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;id&gt;dev&lt;/id&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;sign&lt;/goal&gt;\n                        &lt;/goals&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n                &lt;configuration&gt;\n                    &lt;keystore&gt;/home/tobrien/java/keystore&lt;/keystore&gt;\n                    &lt;alias&gt;tobrien&lt;/alias&gt;\n                    &lt;storepass&gt;s3cr3tp@ssw0rd&lt;/storepass&gt;\n                    &lt;signedjar&gt;\n                        /usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/c\n                    &lt;/signedjar&gt;\n                    &lt;verify&gt;true&lt;/verify&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/settings&gt;\n</code></pre><h3 id=\"11-8-列出活动的Profiles\"><a href=\"#11-8-列出活动的Profiles\" class=\"headerlink\" title=\"11.8 列出活动的Profiles\"></a>11.8 列出活动的Profiles</h3><pre><code>mvn help:active-profiles\n</code></pre><h3 id=\"11-9-可以通过default-profile来设定一些属性值\"><a href=\"#11-9-可以通过default-profile来设定一些属性值\" class=\"headerlink\" title=\"11.9 可以通过default profile来设定一些属性值\"></a>11.9 可以通过default profile来设定一些属性值</h3><pre><code>例如：下面设置了一个activeByDefault = true的profile，并且将environment.type设置成dev。以后我们可以在pom.xml中根据environment.type是否等于dev来执行一些逻辑。\n&lt;settings&gt;\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;activation&gt;\n                &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;\n            &lt;/activation&gt;\n            &lt;properties&gt;\n                &lt;environment.type&gt;dev&lt;/environment.type&gt;\n            &lt;/properties&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/settings&gt;\n</code></pre><h3 id=\"Maven套件\"><a href=\"#Maven套件\" class=\"headerlink\" title=\"Maven套件\"></a>Maven套件</h3><p>Markdown文件中图片制作与超链接获取</p>\n<h3 id=\"1-上传图片到印象笔记\"><a href=\"#1-上传图片到印象笔记\" class=\"headerlink\" title=\"1. 上传图片到印象笔记\"></a>1. 上传图片到印象笔记</h3><pre><code>1. 登陆《印象笔记》和《圈点》\n2. 打开印象笔记《圈点》\n3. 在圈点中编辑图片，然后点击同步。\n4. 打开《印象笔记》，找到刚才用《圈点》编辑并同步的图片笔记，不要打开。\n5. 在笔记上点击鼠标右键--&gt;复制笔记链接\n6. 在浏览器中打开此链接\n7. 在打开的网页中需要的图片上点击鼠标右键--&gt;复制图片地址\n8. 制作成如下图片链接样式即可  ![定义一个图片名称](复制的图片地址)\n</code></pre><h3 id=\"2-上传笔记到简书\"><a href=\"#2-上传笔记到简书\" class=\"headerlink\" title=\"2. 上传笔记到简书\"></a>2. 上传笔记到简书</h3><pre><code>1. control + c 复制准备好的图片\n2. 登陆《简书》\n3. 点击--&gt;写文章--&gt;新建文章--&gt;control + v 粘贴图片到文章编辑框，并等待上传，\n    上传完成之后会在文章编辑框生成 markdown 图片链接。直接拷贝到markdown文档中即可。\n</code></pre><h3 id=\"3-上传图片到其他图片服务器\"><a href=\"#3-上传图片到其他图片服务器\" class=\"headerlink\" title=\"3. 上传图片到其他图片服务器\"></a>3. 上传图片到其他图片服务器</h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h3><blockquote>\n<ol>\n<li><a href=\"http://man.linuxde.net\" target=\"_blank\" rel=\"noopener\">Linux命令大全</a></li>\n<li>Maven权威指南</li>\n<li><a href=\"https://maven.apache.org/plugins/index.html\" target=\"_blank\" rel=\"noopener\">Maven plugins列表</a></li>\n<li><a href=\"http://iffiffj.iteye.com/blog/1661936\" target=\"_blank\" rel=\"noopener\">Maven常用插件</a></li>\n</ol>\n</blockquote>\n<h3 id=\"Maven关键概念汇总\"><a href=\"#Maven关键概念汇总\" class=\"headerlink\" title=\"Maven关键概念汇总\"></a>Maven关键概念汇总</h3><blockquote>\n<ol>\n<li>插件 Maven Plugin</li>\n<li>目标 goal 和 目标前缀 goal Prefix</li>\n<li>坐标(coordinates) 由 groupId，artifactId, packaging, version 共同确定</li>\n<li>构建生命周期 build Lifecycle</li>\n<li>生命周期阶段 phase</li>\n<li>标准目录结构 Maven Standard Directory Layout</li>\n<li>项目对象模型 Project Object Model</li>\n<li>约定优于配置 Convention Over Configuration</li>\n<li>Maven仓库 (repositories)</li>\n<li>依赖管理 (dependency management)</li>\n<li>使用maven help插件的mvn help:describe来查看其它插件、目标或者命令的描述：<blockquote>\n<ol>\n<li>mvn help:describe -Dcmd=install</li>\n<li>mvn help:describe -Dcmd=help:describe</li>\n<li>mvn help:describe -Dplugin=compiler   <font color=\"#DC524A\">compiler是一个插件</font></li>\n<li>mvn help:describe -Dcmd=compile  <font color=\"#DC524A\">compile是compiler插件的一个目标</font></li>\n<li>mvn help:describe -Dplugin=comp iler -Dmojo=compile -Dfull</li>\n<li>mvn help:describe -Dplugin=help </li>\n<li>mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin</li>\n<li>mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin</li>\n<li>查看help插件的描述: mvn help:describe -Dplugin=help</li>\n<li>查看更详细的细节+1: mvn help:describe -Dplugin=help -Dfull</li>\n<li>查看更详细的细节+2: mvn help:help -Ddetail=true</li>\n<li>查看更详细的细节+2: mvn help:describe -Dplugin=help -Ddetail=true</li>\n<li>Dmojo指定插件目标：mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull</li>\n</ol>\n</blockquote>\n</li>\n<li>“-D<name>=<value>“这种格式不是Maven定义的，它其实是Java用来设置系统属性的方式，可以通过“java -help”查看 Java的解释。Maven的bin目录下的脚本文件仅仅是把属性传入Java而已</value></name></li>\n<li>传递性依赖(transitive dependencies)</li>\n<li>依赖范围(dependency scope) : test、compile、provided</li>\n<li>站点生成和报告 (Site Generation and Reporting) : mvn site</li>\n<li>Maven Assembly 是一个用来创建你应用程序特有分发包的插件。</li>\n</ol>\n</blockquote>\n<h3 id=\"POM-xml标准标签格式-Profile中也可以包含全部这些标签\"><a href=\"#POM-xml标准标签格式-Profile中也可以包含全部这些标签\" class=\"headerlink\" title=\"POM.xml标准标签格式, Profile中也可以包含全部这些标签\"></a>POM.xml标准标签格式, Profile中也可以包含全部这些标签</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;project&gt;</span><br><span class=\"line\">\t&lt;build&gt;</span><br><span class=\"line\">\t\t&lt;defaultGoal&gt;...&lt;/defaultGoal&gt;</span><br><span class=\"line\">\t\t&lt;finalName&gt;...&lt;/finalName&gt;</span><br><span class=\"line\">\t\t&lt;resources&gt;...&lt;/resources&gt;</span><br><span class=\"line\">\t\t&lt;testResources&gt;...&lt;/testResources&gt;</span><br><span class=\"line\">\t\t&lt;plugins&gt;...&lt;/plugins&gt;</span><br><span class=\"line\">\t&lt;/build&gt;</span><br><span class=\"line\">\t&lt;reporting&gt;...&lt;/reporting&gt;</span><br><span class=\"line\">\t&lt;modules&gt;...&lt;/modules&gt;</span><br><span class=\"line\">\t&lt;dependencies&gt;...&lt;/dependencies&gt;</span><br><span class=\"line\">\t&lt;dependencyManagement&gt;...&lt;/dependencyManagement&gt;</span><br><span class=\"line\">\t&lt;distributionManagement&gt;...&lt;/distributionManagement&gt;</span><br><span class=\"line\">\t&lt;repositories&gt;...&lt;/repositories&gt;</span><br><span class=\"line\">\t&lt;pluginRepositories&gt;...&lt;/pluginRepositories&gt;</span><br><span class=\"line\">\t&lt;properties&gt;...&lt;/properties&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"相关名称总汇：\"><a href=\"#相关名称总汇：\" class=\"headerlink\" title=\"相关名称总汇：\"></a>相关名称总汇：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IOC容器：Plexus、Guice、Spring</span><br><span class=\"line\">Struts、Tapesty、Wicket、JSF、Waffle、Hibernate、Velocity</span><br></pre></td></tr></table></figure>\n<h3 id=\"第一章-介绍Apache-Maven\"><a href=\"#第一章-介绍Apache-Maven\" class=\"headerlink\" title=\"第一章 介绍Apache Maven\"></a>第一章 介绍Apache Maven</h3><h3 id=\"1-1-Maven是什么？\"><a href=\"#1-1-Maven是什么？\" class=\"headerlink\" title=\"1.1 Maven是什么？\"></a>1.1 Maven是什么？</h3><p>Maven是一个构建工具，一个项目管理工具。</p>\n<p>像Ant这样的构建工具只关注预处理，编译，打包，测试和分发。Maven不仅关注预处理，编译，打包，测试和分发，还可以生成报告， 生成Web站点，并且帮助推动工作团队成员间的交流。</p>\n<p>一个更正式的 Apache Maven1 的定义: Maven是一个项目管理工具，它包含了一个项 目对象模型 (Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在 生命周期阶段(phase)中插件(plugin)目标(goal)的逻辑。 当你使用Maven的时候，你 用一个明确定义的项目对象模型来描述你的项目，然后 Maven 可以应用横切的逻辑， 这些逻辑来自一组共享的(或者自定义的)插件        </p>\n<h3 id=\"1-2-约定优于配置-Convention-Over-Configuration\"><a href=\"#1-2-约定优于配置-Convention-Over-Configuration\" class=\"headerlink\" title=\"1.2 约定优于配置(Convention Over Configuration)\"></a>1.2 约定优于配置(Convention Over Configuration)</h3><p>在没有自定义的情况下，Maven有如下约定：</p>\n<ol>\n<li><p>源代码假定是在:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/main/java</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>资源文件假定是在:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/main/resources</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试代码假定是在: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/src/test</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>项目假定会产生一个 JAR 文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/hudson/ hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/target</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Maven 假定你想要把编译好的字节码放到:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/content-zh/target/classes</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当然，只要你遵循Maven的这一约定，几乎不需要做任何配置，就可以结合maven的插件来完成所有事情，但也仍然允许你自定义修改这些约定。</p>\n</li>\n<li><p>Maven的标准约定的目录结构如下：</p>\n<p> <font color=\"red\">在一个Maven项目中执行 mvn help:effective-pom 可以查看到这些约定被配置在pom.xml中</font></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--projectName \t\t\t\t\t\t项目根目录或者module根目录</span><br><span class=\"line\">-----src</span><br><span class=\"line\">---------main</span><br><span class=\"line\">-------------java\t\t\t\t\t源码目录src/main/java</span><br><span class=\"line\">-------------resources\t\t\t\t\t资源目录src/main/resources</span><br><span class=\"line\">-------------scripts\t\t\t\t\t脚本文件src/main/scripts</span><br><span class=\"line\">---------test \t\t\t\t\t\t测试目录src/test</span><br><span class=\"line\">-------------java \t\t\t\t\t测试代码目录src/test/java</span><br><span class=\"line\">-------------resources\t\t\t\t\t测试资源目录src/test/resources</span><br><span class=\"line\">---------site     \t\t\t\t\t站点资源目录src/site</span><br><span class=\"line\">-----target\t\t\t\t\t\t结果目录</span><br><span class=\"line\">---------classes \t\t\t\t\t编译生成class目录target/classes</span><br><span class=\"line\">---------test-classes \t\t\t\t\t编译生成class目录target/test-classes</span><br><span class=\"line\">---------site     \t\t\t\t\t站点资源目录target/site</span><br><span class=\"line\">-----pom.xml  \t\t\t\t\t\tMaven配置文件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>多module项目结构如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--projectName \t\t\t\t\t\t项目根目录</span><br><span class=\"line\">\t----module1\t\t\t\t\tmodule1根目录</span><br><span class=\"line\">\t\t------src\t \t</span><br><span class=\"line\">\t\t---------main</span><br><span class=\"line\">\t\t-------------java\t\t\t源码目录</span><br><span class=\"line\">\t\t-------------resources\t\t\t资源目录</span><br><span class=\"line\">\t\t-------------scripts\t\t\t脚本文件</span><br><span class=\"line\">\t\t---------test \t\t\t\t测试目录</span><br><span class=\"line\">\t\t-------------java \t\t\t测试代码目录</span><br><span class=\"line\">\t\t-------------resources\t\t\t测试资源目录</span><br><span class=\"line\">\t\t---------site     \t\t\t站点资源目录</span><br><span class=\"line\">\t\t-----target\t\t\t\t结果目录</span><br><span class=\"line\">\t\t---------classes \t\t\t编译生成class目录</span><br><span class=\"line\">\t\t---------test-classes \t\t\t编译生成class目录</span><br><span class=\"line\">\t\t---------site     \t\t\t站点资源目录</span><br><span class=\"line\">\t\t-----pom.xml  \t\t\t\tmodule1的Maven配置文件</span><br><span class=\"line\">\t----module2\t\t\t\t\tmodule2根目录</span><br><span class=\"line\">\t\t------src\t \t</span><br><span class=\"line\">\t\t---------main</span><br><span class=\"line\">\t\t-------------java\t\t\t源码目录</span><br><span class=\"line\">\t\t-------------resources\t\t\t资源目录</span><br><span class=\"line\">\t\t-------------scripts\t\t\t脚本文件</span><br><span class=\"line\">\t\t---------test \t\t\t\t测试目录</span><br><span class=\"line\">\t\t-------------java \t\t\t测试代码目录</span><br><span class=\"line\">\t\t-------------resources\t\t\t测试资源目录</span><br><span class=\"line\">\t\t---------site     \t\t\t站点资源目录</span><br><span class=\"line\">\t\t-----target\t\t\t\t结果目录</span><br><span class=\"line\">\t\t---------classes \t\t\t编译生成class目录</span><br><span class=\"line\">\t\t---------test-classes \t\t\t编译生成class目录</span><br><span class=\"line\">\t\t---------site     \t\t\t站点资源目录</span><br><span class=\"line\">\t\t-----pom.xml  \t\t  \t\tmodule2的Maven配置文件</span><br><span class=\"line\">   ----pom.xml   \t\t\t\t\tProject的Maven配置文件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>典型示例如：</p>\n<p> 下面是我从<a href=\"https://github.com/square/okhttp\" target=\"_blank\" rel=\"noopener\">okhttp官方github</a>中fork出来准备二次封装okhttp的项目结构:</p>\n <!--\n ![Maven项目目录结构.png](https://app.yinxiang.com/shard/s45/nl/2147483647/50a6fa2c-b7ed-41f6-9702-72ae2ef0b930//res/ae2bc4cb-e0b3-47d6-bbab-fe8ac6a9f244/skitch.png?resizeSmall&width=832)\n -->\n <!--\n ![maven项目目录结构.png](https://upload-images.jianshu.io/upload_images/6322932-55587e4642649287.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n -->\n<p> <img src=\"https://upload-images.jianshu.io/upload_images/6322932-3877cf45ed59a3f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Maven项目目录结构.png\"></p>\n</li>\n</ol>\n<h3 id=\"1-3-统一的构建过程\"><a href=\"#1-3-统一的构建过程\" class=\"headerlink\" title=\"1.3 统一的构建过程\"></a>1.3 统一的构建过程</h3><blockquote>\n<p>统一的标准化构建过程约束，所有使用Maven构建的项目都遵循这一约束，不同的项目，只要都使用Maven来构建，那么，他们的构建逻辑几乎是一样的，不会再像没有Maven的年代，每个项目的构建逻辑都不一致，开发人员需要花额外的时间去理解不同项目不同的构建逻辑。例如：使用Ant构建的每一个项目几乎都拥有自己完全不同与其他项目的构建逻辑，因为，没有约定，构建逻辑完全是自定义的。</p>\n</blockquote>\n<font color=\"red\">现在，你只要签出源码，然后运行: mvn install，你就能构建好这个项目。<br></font>\n\n<h3 id=\"1-4-Maven插件的全局性重用\"><a href=\"#1-4-Maven插件的全局性重用\" class=\"headerlink\" title=\"1.4 Maven插件的全局性重用\"></a>1.4 Maven插件的全局性重用</h3><p>Maven 的核心其实不做什么实际的事情，除了解析一些 XML 文档，管理生命周期与插 件之外，它什么也不懂。Maven 被设计成将主要的职责委派给一组 Maven 插件，这些 插件可以影响 Maven 生命周期，提供对目标的访问。绝大多数 Maven 的动作发生于 Maven 插件的目标，如编译源码，打包二进制代码，发布站点和其它构建任务。你从 Apache 下载的 Maven 不知道如何打包 WAR 文件，也不知道如何运行单元测试，Maven 大部分的智能是由插件实现的，而插件从 Maven 仓库获得。事实上，第一次你用全新 的 Maven 安装运行诸如 mvn install 命令的时候，它会从中央 Maven 仓库下载大部 分核心 Maven 插件。这不仅仅是一个最小化 Maven 分发包大小的技巧，这种方式更能 让你升级插件以给你项目的构建提高能力。Maven 从远程仓库获取依赖和插件的这一事 实允许了构建逻辑的全局性重用。</p>\n<p>Surefire插件：是负责运行单元测试的插件，插件不断更新，支持JUnit3、TestNG、JUnit4；</p>\n<p>Compiler插件：负责进行编译，通过jar插件编程jar，通过aar插件生成aar。</p>\n<p>还有一些插件生成报告，运行 JRuby 和 Groovy 的代码，以及一 些用来向远程服务器发布站点的插件。而且插件在不断更新，我们只需要更新pom.xml中说引入的插件版本号，就能获得最新的插件功能。</p>\n<p>Maven 将一般的构建任务抽象成插件，同时这些 插件得到了很好的维护以及全局的共享，你不需要从头开始自定义你项目的构建系统然 后提供支持。你完全可以从 Maven 插件获益，这些插件有人维护，可以从远程仓库下 载到。这就是基于 Maven 插件的全局性重用。</p>\n<h3 id=\"1-5-Maven、Ant、Gradle、Buildr、Nexus以及antlibs和Ivy\"><a href=\"#1-5-Maven、Ant、Gradle、Buildr、Nexus以及antlibs和Ivy\" class=\"headerlink\" title=\"1.5 Maven、Ant、Gradle、Buildr、Nexus以及antlibs和Ivy\"></a>1.5 Maven、Ant、Gradle、Buildr、Nexus以及antlibs和Ivy</h3><p><font color=\"red\">我们会很明确的说作为构建的基本技术，Maven 是 Ant 的更好选择。但使用 Maven 还是 Ant 的决定不是非此即彼的，Ant 在复杂的构建中还有它的位置。</font> 如果你目前的构建包含一些高度自定义的过程，或者你已经写了一些 Ant 脚本通过一 种明确的方法完成一个明确的过程，而这种过程不适合 Maven 标准，你仍然可以在 Maven 中用这些脚本。作为一个 Maven 的核心插件， Ant 还是可用的。自定义的插件 可以用 Ant 来实现，Maven 项目可以配置成在生命周期中运行 Ant 的脚本。</p>\n<p>Ant 在构建过程方面十分优秀，它是一个<font color=\"red\"><b>基于任务和依赖</b></font>的构建系统。每个任务包含一 组由 XML 编码的指令。有 copy 任务和 javac 任务，以及 jar 任务。在你使用 Ant 的时候，你为 Ant 提供特定的指令以编译和打包你的输出。<br>没有诸如 antlibs 和 lvy 等技术的支持(<font color=\"red\">即使有了这些支持技术</font>)，Ant 给人感觉是自定义的程序化构建,配置过于复杂。</p>\n<p>一个典型的Ant构建脚本buid.xml：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;project name=&quot;my-project&quot; default=&quot;dist&quot; basedir=&quot;.&quot;&gt; </span><br><span class=\"line\">\t&lt;description&gt;</span><br><span class=\"line\">\t\tsimple example build file </span><br><span class=\"line\">\t&lt;/description&gt;</span><br><span class=\"line\">\t&lt;!-- set global properties for this build --&gt; </span><br><span class=\"line\">\t&lt;property name=&quot;src&quot; location=&quot;src/main/java&quot;/&gt; </span><br><span class=\"line\">\t&lt;property name=&quot;build&quot; location=&quot;target/classes&quot;/&gt; </span><br><span class=\"line\">\t&lt;property name=&quot;dist&quot; location=&quot;target&quot;/&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;target name=&quot;init&quot;&gt;</span><br><span class=\"line\">\t\t&lt;!-- Create the time stamp --&gt;</span><br><span class=\"line\">\t\t&lt;tstamp/&gt;</span><br><span class=\"line\">\t\t&lt;!-- Create the build directory structure used by compile --&gt; </span><br><span class=\"line\">\t\t&lt;mkdir dir=&quot;org.apache.maven.model.Build@d7e661&quot;/&gt;</span><br><span class=\"line\">\t&lt;/target&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;target name=&quot;compile&quot; depends=&quot;init&quot; description=&quot;compile the source &quot; &gt;</span><br><span class=\"line\">\t\t&lt;!-- Compile the java code from $&#123;src&#125; into org.apache.maven.model.Build@d7e661 --&gt; </span><br><span class=\"line\">\t\t&lt;javac srcdir=&quot;$&#123;src&#125;&quot; \tdestdir=&quot;org.apache.maven.model.Build@d7e661&quot;/&gt; </span><br><span class=\"line\">\t&lt;/target&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&lt;target name=&quot;dist&quot; depends=&quot;compile&quot; description=&quot;generate the distribution&quot; &gt;</span><br><span class=\"line\">\t\t&lt;!-- Create the distribution directory --&gt; </span><br><span class=\"line\">\t\t&lt;mkdir dir=&quot;$&#123;dist&#125;/lib&quot;/&gt;</span><br><span class=\"line\">\t&lt;!-- Put everything in org.apache.maven.model.Build@d7e661 into the MyProject-$&#123;DSTAMP&#125;.jar --&gt;</span><br><span class=\"line\">\t\t&lt;jar jarfile=&quot;$&#123;dist&#125;/lib/MyProject-$&#123;DSTAMP&#125;.jar&quot; basedir=&quot;org.apache.maven.mod </span><br><span class=\"line\">\t&lt;/target&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;target name=&quot;clean&quot; description=&quot;clean up&quot; &gt;</span><br><span class=\"line\">\t\t&lt;!-- Delete the org.apache.maven.model.Build@d7e661 and $&#123;dist&#125; directory trees --&gt;</span><br><span class=\"line\">\t\t&lt;delete dir=&quot;org.apache.maven.model.Build@d7e661&quot;/&gt;</span><br><span class=\"line\">\t\t&lt;delete dir=&quot;$&#123;dist&#125;&quot;/&gt;</span><br><span class=\"line\">\t&lt;/target&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<p>等价的Maven配置文件pom.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;project&gt; </span><br><span class=\"line\">\t&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class=\"line\">\t&lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt; </span><br><span class=\"line\">\t&lt;artifactId&gt;my-project&lt;/artifactId&gt; </span><br><span class=\"line\">\t&lt;version&gt;1.0&lt;/version&gt;</span><br><span class=\"line\">\t&lt;!-- packaging 默认就是jar类型--&gt;</span><br><span class=\"line\">\t&lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-Maven和Ant比较\"><a href=\"#1-6-Maven和Ant比较\" class=\"headerlink\" title=\"1.6 Maven和Ant比较\"></a>1.6 Maven和Ant比较</h3><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>Apache Maven</th>\n<th>Apache Ant</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>约定</td>\n<td>Maven 拥有约定，因为你遵循了约定，它已经知道你的源代码在哪里。它把字节码放到 target/classes ，然后在 target 生成一个 JAR 文件</td>\n<td>Ant 没有正式的约定如一个一般项目的目录结构，你必须明确的告诉 Ant 哪 里去找源代码，哪里放置输出。随着时间的推移，非正式的约定出现了，但是 它们还没有在产品中模式化</td>\n</tr>\n<tr>\n<td>声明和编写</td>\n<td>Maven 是声明式的。你需要做的只是创建一个 pom.xml 文件然后将源代码放到默认的目录。Maven 会帮你处理其它的事情</td>\n<td>Ant 是程序化的，你必须明确的告诉 Ant 做什么，什么时候做。你必须告诉 它去编译，然后复制，然后压缩</td>\n</tr>\n<tr>\n<td>生命周期</td>\n<td>Maven 有一个生命周期，当你运行 mvn install 的时候被调用。这条命令告 诉 Maven 执行一系列的有序的步骤，直到到达你指定的生命周期。遍历生命 周期旅途中的一个影响就是，Maven 运行了许多默认的插件目标，这些目标完 成了像编译和创建一个 JAR 文件这样的工作</td>\n<td>Ant 没有生命周期，你必须定义目标和目标之间的依赖。你必须手工为每个目 标附上一个任务序列</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"第二章-安装和运行Maven\"><a href=\"#第二章-安装和运行Maven\" class=\"headerlink\" title=\"第二章 安装和运行Maven\"></a>第二章 安装和运行Maven</h3><h3 id=\"2-1-Maven安装和升级\"><a href=\"#2-1-Maven安装和升级\" class=\"headerlink\" title=\"2.1 Maven安装和升级\"></a>2.1 Maven安装和升级</h3><pre><code>1. 执行 java -version 如果没有输出类似如下内容，则需要下载和安装JDK\n    java version &quot;1.6.0_02&quot;\n    Java(TM) SE Runtime Environment (build 1.6.0_02-b06)\n    Java HotSpot(TM) Client VM (build 1.6.0_02-b06, mixed mode, sharing)\n2. JDK下载地址：\n    http://www.oracle.com/technetwork/java/javase/downloads/index.html \n3. Maven下载地址：\n    https://maven.apache.org/download.cgi\n4. 安装Maven\n    https://maven.apache.org/install.html\n5. 升级Maven\n    只需要删除已经安装的Maven目录，并重新下载，解压缩到相同的目录既可以。\n</code></pre><h3 id=\"2-2-Maven全局目录结构\"><a href=\"#2-2-Maven全局目录结构\" class=\"headerlink\" title=\"2.2 Maven全局目录结构\"></a>2.2 Maven全局目录结构</h3><pre><code>LICENSE.txt    包含了Apache Maven的软件许可证\nNOTICE.txt     包含了一些Maven依赖的类库所需要 的通告及权限\nREADME.txt     包含了一些安装指令\nbin/           包含了运行Maven的 mvn脚本\nboot/          包含了一个负责创建Maven运行所需要的类装载器的JAR文件(classwords-1.1.jar)\nconf/          包含了一个全局的settings.xml文件，该文件用 来自定义你机器上Maven的一些行为。\n            但是如果你需要自定义Maven，更通常的做法是覆写 ~/.m2目录下的settings.xml文件，每个用户都有对应的这个目录。\nlib/           有了一个包含Maven核心的JAR文件(maven-2.0.9-uber.jar)\n</code></pre><h3 id=\"2-3-用户相关配置和仓库\"><a href=\"#2-3-用户相关配置和仓库\" class=\"headerlink\" title=\"2.3 用户相关配置和仓库\"></a>2.3 用户相关配置和仓库</h3><pre><code>~/.m2/settings.xml    该文件包含了用户相关的认证，仓库和其它信息的配置，用来自定义Maven的行为\n~/.m2/repository/     该目录是你本地的仓库。当你从远程Maven仓库下载依赖的时候，Maven在你本地仓库存储了这个依赖的一个副本。\n</code></pre><h3 id=\"2-4-如何获取Maven帮助\"><a href=\"#2-4-如何获取Maven帮助\" class=\"headerlink\" title=\"2.4 如何获取Maven帮助\"></a>2.4 如何获取Maven帮助</h3><table>\n<thead>\n<tr>\n<th>地址</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://maven.apache.org\" target=\"_blank\" rel=\"noopener\">http://maven.apache.org</a></td>\n<td>你首先应该看看这里，Maven的web站点包含了丰富的信息及文档。每个插件都有 几页的文档，这里还有一系列“快速开始”的文档，它们是本书内容的十分有帮 助的补充。虽然Maven站点包含了大量信息，它同时也可能让你迷惑沮丧。那里 提供了一个自定义的Google搜索框，以用来搜索已有的Maven站点信息，它能比 通用的Google搜索提供更好的结果。</td>\n</tr>\n<tr>\n<td>Maven User Mailing List</td>\n<td>Maven用户邮件列表是用户问问题的地方。在你问问题之前，你可以先搜索一下 之前的讨论，有可能找到相关问题。问一个已经问过的问题，而不先查一下该问 题是否存在了，这种形式不太好。有很多有用的邮件列表归档浏览器，我们发现 Nabble最有用。你可以在这里浏览邮件列表:<a href=\"http://www.nabble.com/MavenUsers-f178.html。你也可以按照这里的指令来加入用户邮件列表:http://\" target=\"_blank\" rel=\"noopener\">http://www.nabble.com/MavenUsers-f178.html。你也可以按照这里的指令来加入用户邮件列表:http://</a> maven.apache.org/mail-lists.html</td>\n</tr>\n<tr>\n<td><a href=\"http://www.sonatype.com\" target=\"_blank\" rel=\"noopener\">http://www.sonatype.com</a></td>\n<td>Sonatype维护了一个本书的在线副本，以及其它Maven相关的指南</td>\n</tr>\n<tr>\n<td><a href=\"https://maven.apache.org/team-list.html\" target=\"_blank\" rel=\"noopener\">https://maven.apache.org/team-list.html</a></td>\n<td>Maven开发者邮件列表</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-5-使用Maven-help插件\"><a href=\"#2-5-使用Maven-help插件\" class=\"headerlink\" title=\"2.5 使用Maven help插件\"></a>2.5 使用Maven help插件</h3><p>Maven Help 插件有很多目标。通过help插件自己的describe目标可以查看help插件自身的描述。</p>\n<p>mvn help:describe -Dplugin=help</p>\n<table>\n<thead>\n<tr>\n<th>目标</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>help:active-profiles</td>\n<td>列出当前构建中活动的Profile(项目的，用户的，全局的)</td>\n</tr>\n<tr>\n<td>help:all-profiles</td>\n<td>Displays a list of available profiles under the current project. Note: it will list all profiles for a project. If a profile comes up with a status inactive then there might be a need to set profile activation switches/property</td>\n</tr>\n<tr>\n<td>help:effective-pom</td>\n<td>显示当前构建的实际POM，包含活动的Profile</td>\n</tr>\n<tr>\n<td>help:effective-settings</td>\n<td>打印出项目的实际settings, 包括从全局的settings和用户级别settings继承的配置</td>\n</tr>\n<tr>\n<td>help:describe</td>\n<td>描述插件的属性。它不需要在项目目录下运行。但是你必须提供你想要描述插件 的 groupId 和 artifactId</td>\n</tr>\n<tr>\n<td>help:evaluate</td>\n<td>Evaluates Maven expressions given by the user in an interactive mode.</td>\n</tr>\n<tr>\n<td>help:help</td>\n<td>Description: Display help information on maven-help-plugin. Call mvn help:help -Ddetail=true -Dgoal=<goal-name> to display parameter details</goal-name></td>\n</tr>\n<tr>\n<td>help:system</td>\n<td>Displays a list of the platform details like system properties and environment variables.</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ol>\n<li>使用Maven help插件的mvn help:describe来查看其它插件、目标或者命令的描述：</li>\n<li>mvn help:describe -Dcmd=install</li>\n<li>mvn help:describe -Dcmd=help:describe</li>\n<li>mvn help:describe -Dplugin=compiler   compiler是一个插件</li>\n<li>mvn help:describe -Dcmd=compile       compile是compiler插件的一个目标</li>\n<li>mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull</li>\n<li>mvn help:describe -Dplugin=help</li>\n<li>mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin</li>\n<li>mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin</li>\n<li>查看help插件的描述: mvn help:describe -Dplugin=help</li>\n<li>查看更详细的细节+1: mvn help:describe -Dplugin=help -Dfull</li>\n<li>查看更详细的细节+2: mvn help:help -Ddetail=true</li>\n<li>查看更详细的细节+2: mvn help:describe -Dplugin=help -Ddetail=true</li>\n<li>Dmojo指定插件目标：mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull</li>\n</ol>\n</blockquote>\n<ol>\n<li>在maven-archetype-quickstart项目中执行 mvn help:effective-pom 可以查看到实际pom中内容如下：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- Generated by Maven Help Plugin on 2018-05-16T23:17:54+08:00            --&gt;</span><br><span class=\"line\">&lt;!-- See: http://maven.apache.org/plugins/maven-help-plugin/                --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- Effective POM for project                                              --&gt;</span><br><span class=\"line\">&lt;!-- &apos;com.silence:maven-archetype-quickstart:jar:0.0.1-SNAPSHOT&apos;            --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class=\"line\">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class=\"line\">  &lt;groupId&gt;com.silence&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;maven-archetype-quickstart&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\">  &lt;name&gt;maven-archetype-quickstart&lt;/name&gt;</span><br><span class=\"line\">  &lt;url&gt;http://www.example.com&lt;/url&gt;</span><br><span class=\"line\">  &lt;properties&gt;</span><br><span class=\"line\">    &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt;</span><br><span class=\"line\">    &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt;</span><br><span class=\"line\">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class=\"line\">  &lt;/properties&gt;</span><br><span class=\"line\">  &lt;dependencies&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class=\"line\">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class=\"line\">      &lt;version&gt;4.11&lt;/version&gt;</span><br><span class=\"line\">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">  &lt;/dependencies&gt;</span><br><span class=\"line\">  &lt;repositories&gt;</span><br><span class=\"line\">    &lt;repository&gt;</span><br><span class=\"line\">      &lt;snapshots&gt;</span><br><span class=\"line\">        &lt;enabled&gt;false&lt;/enabled&gt;</span><br><span class=\"line\">      &lt;/snapshots&gt;</span><br><span class=\"line\">      &lt;id&gt;central&lt;/id&gt;</span><br><span class=\"line\">      &lt;name&gt;Central Repository&lt;/name&gt;</span><br><span class=\"line\">      &lt;url&gt;https://repo.maven.apache.org/maven2&lt;/url&gt;</span><br><span class=\"line\">    &lt;/repository&gt;</span><br><span class=\"line\">  &lt;/repositories&gt;</span><br><span class=\"line\">  &lt;pluginRepositories&gt;</span><br><span class=\"line\">    &lt;pluginRepository&gt;</span><br><span class=\"line\">      &lt;releases&gt;</span><br><span class=\"line\">        &lt;updatePolicy&gt;never&lt;/updatePolicy&gt;</span><br><span class=\"line\">      &lt;/releases&gt;</span><br><span class=\"line\">      &lt;snapshots&gt;</span><br><span class=\"line\">        &lt;enabled&gt;false&lt;/enabled&gt;</span><br><span class=\"line\">      &lt;/snapshots&gt;</span><br><span class=\"line\">      &lt;id&gt;central&lt;/id&gt;</span><br><span class=\"line\">      &lt;name&gt;Central Repository&lt;/name&gt;</span><br><span class=\"line\">      &lt;url&gt;https://repo.maven.apache.org/maven2&lt;/url&gt;</span><br><span class=\"line\">    &lt;/pluginRepository&gt;</span><br><span class=\"line\">  &lt;/pluginRepositories&gt;</span><br><span class=\"line\">  &lt;build&gt;</span><br><span class=\"line\">    &lt;sourceDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/src/main/java&lt;/sourceDirectory&gt;</span><br><span class=\"line\">    &lt;scriptSourceDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/src/main/scripts&lt;/scriptSourceDirectory&gt;</span><br><span class=\"line\">    &lt;testSourceDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/src/test/java&lt;/testSourceDirectory&gt;</span><br><span class=\"line\">    &lt;outputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/classes&lt;/outputDirectory&gt;</span><br><span class=\"line\">    &lt;testOutputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/test-classes&lt;/testOutputDirectory&gt;</span><br><span class=\"line\">    &lt;resources&gt;</span><br><span class=\"line\">      &lt;resource&gt;</span><br><span class=\"line\">        &lt;directory&gt;/environment/myeclipse/maven-archetype-quickstart/src/main/resources&lt;/directory&gt;</span><br><span class=\"line\">      &lt;/resource&gt;</span><br><span class=\"line\">    &lt;/resources&gt;</span><br><span class=\"line\">    &lt;testResources&gt;</span><br><span class=\"line\">      &lt;testResource&gt;</span><br><span class=\"line\">        &lt;directory&gt;/environment/myeclipse/maven-archetype-quickstart/src/test/resources&lt;/directory&gt;</span><br><span class=\"line\">      &lt;/testResource&gt;</span><br><span class=\"line\">    &lt;/testResources&gt;</span><br><span class=\"line\">    &lt;directory&gt;/environment/myeclipse/maven-archetype-quickstart/target&lt;/directory&gt;</span><br><span class=\"line\">    &lt;finalName&gt;maven-archetype-quickstart-0.0.1-SNAPSHOT&lt;/finalName&gt;</span><br><span class=\"line\">    &lt;pluginManagement&gt;</span><br><span class=\"line\">      &lt;plugins&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;1.3&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.2-beta-5&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.8&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-release-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.3.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;3.0.0&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;3.7.0&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.20.1&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.5.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">          &lt;version&gt;2.8.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;/plugins&gt;</span><br><span class=\"line\">    &lt;/pluginManagement&gt;</span><br><span class=\"line\">    &lt;plugins&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;3.0.0&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-clean&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;clean&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;clean&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.5.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-install&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;install&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;install&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-resources&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;process-resources&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;resources&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-testResources&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;process-test-resources&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;testResources&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.20.1&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-test&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;test&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;test&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;3.7.0&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-testCompile&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;test-compile&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;testCompile&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-compile&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;compile&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;compile&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-jar&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;package&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;jar&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;2.8.2&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-deploy&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;deploy&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;deploy&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-site-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;3.3&lt;/version&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-site&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;site&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;site&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">            &lt;configuration&gt;</span><br><span class=\"line\">              &lt;outputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/site&lt;/outputDirectory&gt;</span><br><span class=\"line\">              &lt;reportPlugins&gt;</span><br><span class=\"line\">                &lt;reportPlugin&gt;</span><br><span class=\"line\">                  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class=\"line\">                  &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">                &lt;/reportPlugin&gt;</span><br><span class=\"line\">              &lt;/reportPlugins&gt;</span><br><span class=\"line\">            &lt;/configuration&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;id&gt;default-deploy&lt;/id&gt;</span><br><span class=\"line\">            &lt;phase&gt;site-deploy&lt;/phase&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;deploy&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">            &lt;configuration&gt;</span><br><span class=\"line\">              &lt;outputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/site&lt;/outputDirectory&gt;</span><br><span class=\"line\">              &lt;reportPlugins&gt;</span><br><span class=\"line\">                &lt;reportPlugin&gt;</span><br><span class=\"line\">                  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class=\"line\">                  &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">                &lt;/reportPlugin&gt;</span><br><span class=\"line\">              &lt;/reportPlugins&gt;</span><br><span class=\"line\">            &lt;/configuration&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">        &lt;configuration&gt;</span><br><span class=\"line\">          &lt;outputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/site&lt;/outputDirectory&gt;</span><br><span class=\"line\">          &lt;reportPlugins&gt;</span><br><span class=\"line\">            &lt;reportPlugin&gt;</span><br><span class=\"line\">              &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class=\"line\">              &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;/reportPlugin&gt;</span><br><span class=\"line\">          &lt;/reportPlugins&gt;</span><br><span class=\"line\">        &lt;/configuration&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">    &lt;/plugins&gt;</span><br><span class=\"line\">  &lt;/build&gt;</span><br><span class=\"line\">  &lt;reporting&gt;</span><br><span class=\"line\">    &lt;outputDirectory&gt;/environment/myeclipse/maven-archetype-quickstart/target/site&lt;/outputDirectory&gt;</span><br><span class=\"line\">  &lt;/reporting&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在maven-archetype-quickstart项目中执行 mvn help:effective-settings 可以查看到实际pom中内容如下:</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- Generated by Maven Help Plugin on 2018-05-16T23:35:31+08:00            --&gt;</span><br><span class=\"line\">&lt;!-- See: http://maven.apache.org/plugins/maven-help-plugin/                --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- Effective Settings for &apos;violet&apos; on &apos;yexiaochaideMacBook-Pro.local&apos;     --&gt;</span><br><span class=\"line\">&lt;!--                                                                        --&gt;</span><br><span class=\"line\">&lt;!-- ====================================================================== --&gt;</span><br><span class=\"line\">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.1.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd&quot;&gt;</span><br><span class=\"line\">  &lt;localRepository&gt;/Users/violet/.m2/repository&lt;/localRepository&gt;</span><br><span class=\"line\">  &lt;pluginGroups&gt;</span><br><span class=\"line\">    &lt;pluginGroup&gt;org.apache.maven.plugins&lt;/pluginGroup&gt;</span><br><span class=\"line\">    &lt;pluginGroup&gt;org.codehaus.mojo&lt;/pluginGroup&gt;</span><br><span class=\"line\">  &lt;/pluginGroups&gt;</span><br><span class=\"line\">&lt;/settings&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>执行mvn help:describe得到以下错误信息，显示了正确的使用方法。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ERROR] Failed to execute goal org.apache.maven.plugins:maven-help-plugin:3.0.1:describe (default-cli) on project maven-archetype-quickstart: You must specify either: both &apos;groupId&apos; and &apos;artifactId&apos; parameters OR a &apos;plugin&apos; parameter OR a &apos;cmd&apos; parameter. For instance:</span><br><span class=\"line\">[ERROR]   # mvn help:describe -Dcmd=install</span><br><span class=\"line\">[ERROR] or</span><br><span class=\"line\">[ERROR]   # mvn help:describe -Dcmd=help:describe</span><br><span class=\"line\">[ERROR] or</span><br><span class=\"line\">[ERROR]   # mvn help:describe -Dplugin=org.apache.maven.plugins:maven-help-plugin</span><br><span class=\"line\">[ERROR] or</span><br><span class=\"line\">[ERROR]   # mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-help-plugin</span><br><span class=\"line\">[ERROR] </span><br><span class=\"line\">[ERROR] Try &apos;mvn help:help -Ddetail=true&apos; for more information.</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>执行mvn help:describe -Dcmd=install 显示结果如下：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe -Dcmd=install</span><br><span class=\"line\"></span><br><span class=\"line\">[INFO] Scanning for projects...</span><br><span class=\"line\">[INFO] </span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] Building maven-archetype-quickstart 0.0.1-SNAPSHOT</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] </span><br><span class=\"line\">[INFO] --- maven-help-plugin:3.0.1:describe (default-cli) @ maven-archetype-quickstart ---</span><br><span class=\"line\">[INFO] &apos;install&apos; is a phase corresponding to this plugin:</span><br><span class=\"line\">org.apache.maven.plugins:maven-install-plugin:2.4:install</span><br><span class=\"line\"></span><br><span class=\"line\">It is a part of the lifecycle for the POM packaging &apos;jar&apos;. This lifecycle includes the following phases:</span><br><span class=\"line\">* validate: Not defined</span><br><span class=\"line\">* initialize: Not defined</span><br><span class=\"line\">* generate-sources: Not defined</span><br><span class=\"line\">* process-sources: Not defined</span><br><span class=\"line\">* generate-resources: Not defined</span><br><span class=\"line\">* process-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:resources</span><br><span class=\"line\">* compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:compile</span><br><span class=\"line\">* process-classes: Not defined</span><br><span class=\"line\">* generate-test-sources: Not defined</span><br><span class=\"line\">* process-test-sources: Not defined</span><br><span class=\"line\">* generate-test-resources: Not defined</span><br><span class=\"line\">* process-test-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:testResources</span><br><span class=\"line\">* test-compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile</span><br><span class=\"line\">* process-test-classes: Not defined</span><br><span class=\"line\">* test: org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test</span><br><span class=\"line\">* prepare-package: Not defined</span><br><span class=\"line\">* package: org.apache.maven.plugins:maven-jar-plugin:2.4:jar</span><br><span class=\"line\">* pre-integration-test: Not defined</span><br><span class=\"line\">* integration-test: Not defined</span><br><span class=\"line\">* post-integration-test: Not defined</span><br><span class=\"line\">* verify: Not defined</span><br><span class=\"line\">* install: org.apache.maven.plugins:maven-install-plugin:2.4:install</span><br><span class=\"line\">* deploy: org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-由上可知-lt-packaging-jar-lt-packaging-的生命周期如下：\"><a href=\"#2-6-由上可知-lt-packaging-jar-lt-packaging-的生命周期如下：\" class=\"headerlink\" title=\"2.6 由上可知\\&lt;packaging>jar\\&lt;/packaging>的生命周期如下：\"></a>2.6 由上可知\\&lt;packaging>jar\\&lt;/packaging>的生命周期如下：</h3><pre><code>* validate: Not defined\n* initialize: Not defined\n* generate-sources: Not defined\n* process-sources: Not defined\n* generate-resources: Not defined\n* process-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:resources\n* compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:compile\n* process-classes: Not defined\n* generate-test-sources: Not defined\n* process-test-sources: Not defined\n* generate-test-resources: Not defined\n* process-test-resources: org.apache.maven.plugins:maven-resources-plugin:2.6:testResources\n* test-compile: org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile\n* process-test-classes: Not defined\n* test: org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test\n* prepare-package: Not defined\n* package: org.apache.maven.plugins:maven-jar-plugin:2.4:jar\n* pre-integration-test: Not defined\n* integration-test: Not defined\n* post-integration-test: Not defined\n* verify: Not defined\n* install: org.apache.maven.plugins:maven-install-plugin:2.4:install\n* deploy: org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy\n</code></pre><h3 id=\"第三章-一个简单的Maven项目\"><a href=\"#第三章-一个简单的Maven项目\" class=\"headerlink\" title=\"第三章 一个简单的Maven项目\"></a>第三章 一个简单的Maven项目</h3><h3 id=\"3-1-规则\"><a href=\"#3-1-规则\" class=\"headerlink\" title=\"3.1 规则\"></a>3.1 规则</h3><blockquote>\n<ol>\n<li>当提到一个插件目标的时候，我们常常用速记符号:pluginId:goalId。 例如，当提到Archetype插件的create目标的时候，我们写 成archetype:create</li>\n</ol>\n</blockquote>\n<h3 id=\"3-2-使用archetype-generate创建Maven框架项目\"><a href=\"#3-2-使用archetype-generate创建Maven框架项目\" class=\"headerlink\" title=\"3.2 使用archetype:generate创建Maven框架项目\"></a>3.2 使用archetype:generate创建Maven框架项目</h3><blockquote>\n<ol>\n<li><del>mvn archetype:create</del> 方式已经过时</li>\n<li>mvn archetype:generate 现在，使用generate选择适合模板来创建项目</li>\n<li>mvn help:effective-pom 查看完成的pom.xml</li>\n</ol>\n</blockquote>\n<h3 id=\"3-3-传递性依赖-transitive-dependencies\"><a href=\"#3-3-传递性依赖-transitive-dependencies\" class=\"headerlink\" title=\"3.3 传递性依赖(transitive dependencies)\"></a>3.3 传递性依赖(transitive dependencies)</h3><p>让我们看一下你运行前面的样例的时候那些下载到你本地仓库的依赖。看一下这个目 录:~/.m2/repository/junit/junit/3.8.1/。如果你一直跟着本章的样例，那么这里会 有文件junit-3.8.1.jar 和junit-3.8.1.pom，还有Maven用来验证已下载构件准确性的 校验和文件。需要注意的是Maven不只是下载JUnit的JAR文件，它同时为这个JUnit依赖 下载了一个POM文件。Maven同时下载构件和POM文件的这种行为，对Maven支持传递性依 赖来说非常重要。</p>\n<h3 id=\"3-4-依赖范围-dependency-scope\"><a href=\"#3-4-依赖范围-dependency-scope\" class=\"headerlink\" title=\"3.4 依赖范围(dependency scope)\"></a>3.4 依赖范围(dependency scope)</h3><pre><code>test、compile、provided\n</code></pre><p>Simple项目的pom.xml包含了 一个依赖——junit:junit:jar:3.8.1——范围是test。当一个依赖的范围是test的 时候，说明它在Compiler插件运行compile目标的时候是不可用的。它只有在运 行compiler:testCompile和surefire:test目标的时候才会被加入到classpath中。</p>\n<p>你也可以配置Maven，使用provided范围，让它排除WAR文件中特定的依赖。provided范 围告诉Maven一个依赖在编译的时候需要，但是它不应该被捆绑在构建的输出中。当你 开发web应用的时候provided范围变得十分有用，你需要通过Servlet API来编译你的代 码，但是你不希望Servlet API的JAR文件包含在你web应用的WEB-INF/lib目录中</p>\n<h3 id=\"3-5-站点生成和报告-Site-Generation-and-Reporting\"><a href=\"#3-5-站点生成和报告-Site-Generation-and-Reporting\" class=\"headerlink\" title=\"3.5 站点生成和报告 (Site Generation and Reporting)\"></a>3.5 站点生成和报告 (Site Generation and Reporting)</h3><pre><code>mvn site\n</code></pre><p>这将会运行site生命周期阶段。它不像默认生命周期那样，管理代码生成，操作资源， 编译，打包等等。Site生命周期只关心处理在src/site目录下的site内容，还有生成 报告。在这个命令运行过之后，你将会在target/site目录下看到一个项目web站点。载 入target/site/index.html你会看到项目站点的基本外貌</p>\n<h3 id=\"3-6-定制站点报告-lt-reporting-lt-reporting\"><a href=\"#3-6-定制站点报告-lt-reporting-lt-reporting\" class=\"headerlink\" title=\"3.6 定制站点报告\\&lt;reporting>\\&lt;/reporting>\"></a>3.6 定制站点报告\\&lt;reporting>\\&lt;/reporting></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">报告配置在&lt;reporting&gt;&lt;/reporting&gt;下，而插件配置在&lt;plugins&gt;&lt;/plugins&gt;下</span><br><span class=\"line\">\t</span><br><span class=\"line\">Clover报告：\t检查单元测试覆盖率</span><br><span class=\"line\">JXR报告：\t\t生成HTML源代码相互间引用，这在代码审查的时候非常有用</span><br><span class=\"line\">PMD报告：\t\t告针对各种编码问题来分析源代码</span><br><span class=\"line\">JDepend报告：\t分析源代码中各个包之间的依赖</span><br></pre></td></tr></table></figure>\n<p>Maven提供了很完整的可配置的报告，像Clover报告检 查单元测试覆盖率，JXR报告生成HTML源代码相互间引用，这在代码审查的时候非常有 用，PMD报告针对各种编码问题来分析源代码，JDepend报告分析源代码中各个包之间的 依赖。通过在pom.xml中配置那些报告被包含在构建中，站点报告就可以被定制了。</p>\n<h3 id=\"第四章-定制一个Maven项目\"><a href=\"#第四章-定制一个Maven项目\" class=\"headerlink\" title=\"第四章 定制一个Maven项目\"></a>第四章 定制一个Maven项目</h3><p><a href=\"https://github.com/Farubaba/simple-example\" target=\"_blank\" rel=\"noopener\">Maven simple-weather示例项目Git地址</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">simple-weather相关依赖：</span><br><span class=\"line\">\t</span><br><span class=\"line\">Log4j</span><br><span class=\"line\">Dom4j</span><br><span class=\"line\">Jaxen</span><br><span class=\"line\">Velocity</span><br><span class=\"line\">Maven Exec 插件 ：  $ mvn help:describe -Dplugin=exec -Dfull</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-1-查看Maven项目依赖\"><a href=\"#4-1-查看Maven项目依赖\" class=\"headerlink\" title=\"4.1 查看Maven项目依赖\"></a>4.1 查看Maven项目依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. mvn dependency:resolve</span><br><span class=\"line\">\t</span><br><span class=\"line\">2. mvn dependency:tree 查看依赖关系树</span><br><span class=\"line\">\t</span><br><span class=\"line\">3. mvn install -X  查看完整的依赖踪迹，包含那些因为冲突或者其它原因而被 拒绝引入的构件，打开 Maven 的调试标记运行</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-添加测试范围依赖\"><a href=\"#4-2-添加测试范围依赖\" class=\"headerlink\" title=\"4.2 添加测试范围依赖\"></a>4.2 添加测试范围依赖</h3><pre><code>&lt;project&gt; \n     ...\n    &lt;dependencies&gt; \n        ...\n        &lt;dependency&gt; \n            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt; \n            &lt;artifactId&gt;commons-io&lt;/artifactId&gt; \n            &lt;version&gt;1.3.2&lt;/version&gt; \n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    ... \n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre><h3 id=\"4-3-添加单元测试资源\"><a href=\"#4-3-添加单元测试资源\" class=\"headerlink\" title=\"4.3 添加单元测试资源\"></a>4.3 添加单元测试资源</h3><p>一个单元测试需要访问针对测试的一组资源。 通常你需要在测试 classpath 中 存储一些包含期望结果的文件，以及包含模拟输入的文件。 在本项目中，我们为 YahooParserTest 准备了一个名为 ny-weather.xml 的测试 XML 文档，还有一个名为 format-expected.dat 的文件，包含了 WeatherFormatter 的期望输出。format-expected.dat文件内容如下：</p>\n<pre><code>*********************************\n Current Weather Conditions for:\n  New York, NY, US\n\n Temperature: 39\n   Condition: Fair\n    Humidity: 67\n  Wind Chill: 39\n*********************************\n</code></pre><p>预先设定了所有值，判断获取到的数据经过Velocity模板格式化之后是否和预期一致。</p>\n<h3 id=\"4-4-执行单元测试\"><a href=\"#4-4-执行单元测试\" class=\"headerlink\" title=\"4.4 执行单元测试\"></a>4.4 执行单元测试</h3><pre><code>1. mvn test\n\n2. 忽略测试失败：&lt;testFailureIgnore&gt;true&lt;/testFailureIgnore&gt; \n    &lt;project&gt; \n        [...]\n        &lt;build&gt; \n            &lt;plugins&gt;\n                &lt;plugin&gt; \n                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; \n                    &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt; \n                    &lt;configuration&gt;\n                        &lt;testFailureIgnore&gt;true&lt;/testFailureIgnore&gt; \n                    &lt;/configuration&gt;\n                &lt;/plugin&gt; \n            &lt;/plugins&gt;\n        &lt;/build&gt;\n        [...] \n    &lt;/project&gt;\n\n3. 命令行动态设置忽略测试失败：\nmvn test -Dmaven.test.failure.ignore=true\n\n4. 当项目的单元测试十分耗时的时候，并不是每一次执行install都需要执行单元测试的，所以我们可以设置跳过单元测试来节约时间。\n    &lt;project&gt; \n        [...]\n        &lt;build&gt; \n            &lt;plugins&gt;\n                &lt;plugin&gt; \n                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; \n                    &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\n                    &lt;configuration&gt;\n                        &lt;skip&gt;true&lt;/skip&gt; \n                    &lt;/configuration&gt;\n                &lt;/plugin&gt; \n            &lt;/plugins&gt;\n        &lt;/build&gt;\n        [...] \n    &lt;/project&gt;\n\n或者命令行动态设置：\nmvn install -Dmaven.test.skip=true\n</code></pre><h3 id=\"4-5-使用Maven-Assembly-插件制作软件分发包\"><a href=\"#4-5-使用Maven-Assembly-插件制作软件分发包\" class=\"headerlink\" title=\"4.5 使用Maven Assembly 插件制作软件分发包\"></a>4.5 使用Maven Assembly 插件制作软件分发包</h3><pre><code>配置Maven Assembly插件：\n    &lt;project&gt; \n        [...]\n        &lt;build&gt; \n            &lt;plugins&gt;\n                &lt;plugin&gt; \n                    &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\n                    &lt;configuration&gt;\n                        &lt;descriptorRefs&gt; \n                                &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\n                        &lt;/descriptorRefs&gt; \n                    &lt;/configuration&gt;\n                &lt;/plugin&gt; \n            &lt;/plugins&gt;\n        &lt;/build&gt;\n        [...] \n    &lt;/project&gt;\n\n如上配置好Assembly插件后，可以通过如下命令来构建：\nmvn install assembly:assembly\n</code></pre><h3 id=\"第五章-一个简单的Web应用\"><a href=\"#第五章-一个简单的Web应用\" class=\"headerlink\" title=\"第五章 一个简单的Web应用\"></a>第五章 一个简单的Web应用</h3><p><a href=\"https://github.com/Farubaba/simple-example\" target=\"_blank\" rel=\"noopener\">Maven simple-weather示例项目Git地址</a></p>\n<h3 id=\"5-1-创建web应用\"><a href=\"#5-1-创建web应用\" class=\"headerlink\" title=\"5.1 创建web应用\"></a>5.1 创建web应用</h3><pre><code>mvn archetype:generate\n在列出的模板中选择需要的，输入数字编号。\n\npom.xml文件中最根本的区别在于：\n&lt;packaging&gt;war&lt;/packaging&gt;\n</code></pre><h3 id=\"5-2-Servlet容器Jetty插件配置使用\"><a href=\"#5-2-Servlet容器Jetty插件配置使用\" class=\"headerlink\" title=\"5.2 Servlet容器Jetty插件配置使用\"></a>5.2 Servlet容器Jetty插件配置使用</h3><pre><code>1. 配置Jetty插件\n&lt;project&gt; \n    [...]\n    &lt;build&gt; \n        &lt;finalName&gt;simple-webapp&lt;/finalName&gt; \n        &lt;plugins&gt;\n            &lt;plugin&gt; \n                &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt; \n                &lt;artifactId&gt;maven-jetty-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt; \n        &lt;/plugins&gt;\n    &lt;/build&gt;\n    [...] \n&lt;/project&gt;\n\n2. 启动Jetty服务器\nmvn jetty:run\n</code></pre><h3 id=\"5-3-创建和配置Servlet程序\"><a href=\"#5-3-创建和配置Servlet程序\" class=\"headerlink\" title=\"5.3 创建和配置Servlet程序\"></a>5.3 创建和配置Servlet程序</h3><p>为了把servlet 添加到你的 web 应用，并且使其与请求路径匹配， 需要添加如下的 servlet 和 servlet-mapping 元素至你项目的 web.xml 文件。 文件 web.xml 可以在目录 src/main/webapp/WEB-INF 中找到。</p>\n<pre><code>&lt;!DOCTYPE web-app PUBLIC\n&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot; &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;\n&lt;web-app&gt;\n    &lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt; \n    &lt;servlet&gt;\n        &lt;servlet-name&gt;simple&lt;/servlet-name&gt;\n        &lt;servlet-class&gt;org.sonatype.mavenbook.web.SimpleServlet&lt;/servlet-class&gt;     \n    &lt;/servlet&gt;\n    &lt;servlet-mapping&gt;\n        &lt;servlet-name&gt;simple&lt;/servlet-name&gt;\n        &lt;url-pattern&gt;/simple&lt;/url-pattern&gt; \n    &lt;/servlet-mapping&gt;\n&lt;/web-app&gt;\n</code></pre><h3 id=\"5-4-添加Servlet-API支持\"><a href=\"#5-4-添加Servlet-API支持\" class=\"headerlink\" title=\"5.4 添加Servlet API支持\"></a>5.4 添加Servlet API支持</h3><pre><code>到目前为止，直接执行：mvn compile 会失败，因为我们还没有为web项目添加Servlet支持。\n</code></pre><p>为了编写一个 servlet ，我们需要添加 Servlet API 作为项目依赖。 Servlet 规格说明是一个 JAR 文件，它能从 Sun Microsystems 的站点下载到 http:// java.sun.com/products/servlet/download.html 。JAR 文件下载好之后你需要把它 安装到位于 ~/.m2/repository 的 Maven 本地仓库。你必须为所有 Sun Microsystems 维护的 J2EE API 重复同样的过程，包括 JNDI， JDBC， Servlet， JSP， JTA， 以 及其它。 如果你不想这么做因为觉得这样太无聊了，其实不只有你这么认为。 幸 运的是，有一种更简单的方法来下载所有这些类库并安装到本地仓库 —— Apache Geronimo 的独立的开源实现。</p>\n<p>添加像 JSP API 或者 Servlet API 这样的依赖现在很简单明了了，不再需要你从 web 站点手工下载 JAR 文件然后再安装到本地仓库。 关键是你必须知道去哪里找，使用 什么 groupId， artifactId， 和 version 来引用恰当的 Apache Geronimo 实现。给 pom.xml 添加如下的依赖元素以添加对 Servlet 规格说明 API 的依赖。.</p>\n<pre><code>添加 Servlet 2.4 规格说明作为依赖：\n（你必须看一下Maven 的公共仓库来决定使用什么版本。 最好使用某个规格说明实现的最新版本）\n&lt;project&gt; \n    [...]\n    &lt;dependencies&gt; \n        [...]\n        &lt;dependency&gt; \n            &lt;groupId&gt;org.apache.geronimo.specs&lt;/groupId&gt;\n            &lt;artifactId&gt;geronimo-servlet_2.4_spec&lt;/artifactId&gt;\n            &lt;version&gt;1.1.1&lt;/version&gt;\n            &lt;scope&gt;provided&lt;/scope&gt;\n        &lt;/dependency&gt; \n    &lt;/dependencies&gt; \n    [...]\n&lt;/project&gt;\n</code></pre><p>如果你对在这个简单 web 应用编写自定义 JSP 标签感兴趣，你将需要添加对 JSP 2.0 规格说明的依赖。 使用以下配置来加入这个依赖。</p>\n<pre><code>&lt;project&gt; \n    [...]\n    &lt;dependencies&gt; \n        [...]\n        &lt;dependency&gt; \n            &lt;groupId&gt;org.apache.geronimo.specs&lt;/groupId&gt;\n            &lt;artifactId&gt;geronimo-jsp_2.0_spec&lt;/artifactId&gt;\n            &lt;version&gt;1.1&lt;/version&gt;\n            &lt;scope&gt;provided&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    [...]\n&lt;/project&gt;\n</code></pre><h3 id=\"5-6-运行Servlet\"><a href=\"#5-6-运行Servlet\" class=\"headerlink\" title=\"5.6 运行Servlet\"></a>5.6 运行Servlet</h3><p>在添加好这个 Servlet 规格说明依赖之后，运行 mvn clean install ，然后运行 mvn jetty:run</p>\n<pre><code>mvn clean install\nmvn jetty:run\n</code></pre><p>命令行访问index.html页面，查看控制台输出：</p>\n<pre><code>curl http://localhost:8080/simple-webapp/simple\n</code></pre><h3 id=\"第六章-一个多模块项目\"><a href=\"#第六章-一个多模块项目\" class=\"headerlink\" title=\"第六章 一个多模块项目\"></a>第六章 一个多模块项目</h3><p><a href=\"https://github.com/Farubaba/simple-example\" target=\"_blank\" rel=\"noopener\">Maven simple-weather示例项目Git地址</a>    </p>\n<p><a href=\"http://book.huihoo.com/maven-the-definitive-guide/multimodule-web-spring.html\" target=\"_blank\" rel=\"noopener\">The Definitive Guide</a></p>\n<h3 id=\"6-1-多模块项目结构图父POM\"><a href=\"#6-1-多模块项目结构图父POM\" class=\"headerlink\" title=\"6.1 多模块项目结构图父POM\"></a>6.1 多模块项目结构图父POM</h3><p>一个多模块项目通过一个父POM引用一个或多个子模块来定义，并且\\<packaging>pom\\</packaging>。如下所示：</p>\n<pre><code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; \n    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n    xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0\n                        http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt; \n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;groupId&gt;org.sonatype.mavenbook.ch06&lt;/groupId&gt;\n    &lt;artifactId&gt;simple-parent&lt;/artifactId&gt;\n    &lt;packaging&gt;pom&lt;/packaging&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;name&gt;Chapter 6 Simple Parent Project&lt;/name&gt;\n\n    &lt;modules&gt; \n        &lt;module&gt;simple-weather&lt;/module&gt; \n        &lt;module&gt;simple-webapp&lt;/module&gt;\n    &lt;/modules&gt;\n    &lt;build&gt; \n        &lt;pluginManagement&gt;\n            &lt;plugins&gt;\n                &lt;plugin&gt;\n                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                    &lt;configuration&gt;\n                        &lt;source&gt;1.5&lt;/source&gt;\n                        &lt;target&gt;1.5&lt;/target&gt;\n                    &lt;/configuration&gt;\n                &lt;/plugin&gt;\n            &lt;/plugins&gt;\n        &lt;/pluginManagement&gt;\n    &lt;/build&gt;\n    &lt;dependencies&gt; \n        &lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;/groupId&gt;\n            &lt;artifactId&gt;junit&lt;/artifactId&gt;\n            &lt;version&gt;3.8.1&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre><p>注意simple-parent定义了一组Maven坐 标:groupId是org.sonatype.mavenbook，artifactId是simple-parent，version是1.0。 这个父项目不像之前的项目那样创建一个JAR或者一个WAR，它仅仅是一个引用其它 Maven项目的POM。像simple-parent这样仅仅提供项目对象模型的项目，正确的的打包 类型是pom。pom.xml中下一部分列出了项目的子模块。这些模块在modules元素中定义， 每个modules元素对应了一个simple-parent/目录下的子目录。Maven知道去这些子目录 寻找pom.xml文件，并且，在构建的simp-parent的时候，它会将这些子模块包含到要构 建的项目中。</p>\n<p>最后，我们定义了一些将会被所有子模块继承的设置。simple-parent的build部 分配置了所有Java编译的目标是Java 5 JVM。因为compiler插件默认绑定到了生 命周期，我们就可以使用pluginManagement部分来配置。我们将会在后面的章节 详细讨论pluginManagement，区分为默认的插件提供配置和真正的绑定插件是很 容易的。dependencies元素将JUnit 3.8.1添加为一个全局的依赖。build配置和 dependencies都会被所有的子模块继承。使用POM继承允许你添加一些全局的依赖如 JUnit和Log4J。</p>\n<h3 id=\"6-2-子POM\"><a href=\"#6-2-子POM\" class=\"headerlink\" title=\"6.2 子POM\"></a>6.2 子POM</h3><pre><code>每个子pom都需要定义\\&lt;parent&gt;标签，值全部一样。\n\n&lt;parent&gt;\n    &lt;groupId&gt;org.sonatype.mavenbook.optimize&lt;/groupId&gt;\n    &lt;artifactId&gt;simple-parent&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n  &lt;/parent&gt;\n</code></pre><h3 id=\"6-3-构建多模块项目\"><a href=\"#6-3-构建多模块项目\" class=\"headerlink\" title=\"6.3 构建多模块项目\"></a>6.3 构建多模块项目</h3><pre><code>在parent-project中执行：\nmvn clean install\n</code></pre><h3 id=\"6-4-运行多模块项目\"><a href=\"#6-4-运行多模块项目\" class=\"headerlink\" title=\"6.4 运行多模块项目\"></a>6.4 运行多模块项目</h3><pre><code>在parent-project中执行：\nmvn jetty:run\n</code></pre><p>Jetty启动之后，在浏览器载入形如：<a href=\"http://localhost:8080/simple-webapp/weather\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/simple-webapp/weather</a>? zip=01201，你应该看到格式化的天气输出.</p>\n<p>当Maven执行一个带有子模块的项目的时候，Maven首先载入父POM，然后定位所有的子 模块POM。Maven然后将所有这些项目的POM放入到一个称为Maven 反应堆(Reactor)的 东西中，由它负责分析模块之间的依赖关系。这个反应堆处理组件的排序，以确保相互 独立的模块能以适当的顺序被编译和安装。</p>\n<h3 id=\"第七章-多模块企业级项目\"><a href=\"#第七章-多模块企业级项目\" class=\"headerlink\" title=\"第七章 多模块企业级项目\"></a>第七章 多模块企业级项目</h3><p><a href=\"https://github.com/Farubaba/simple-example\" target=\"_blank\" rel=\"noopener\">Maven simple-weather示例项目Git地址</a>    </p>\n<p><img src=\"http://book.huihoo.com/maven-the-definitive-guide/multimodule-web-spring_projects.png\" alt=\"Maven多模块项目结构图\"></p>\n<h3 id=\"7-1-Hibernate项目运行\"><a href=\"#7-1-Hibernate项目运行\" class=\"headerlink\" title=\"7.1 Hibernate项目运行\"></a>7.1 Hibernate项目运行</h3><pre><code>1. 首先需要使用Hibernate3插件构造数据库\n    mvn hibernate3:hbm2ddl\n2. 运行到web容器\n    mvn jetty:run\n</code></pre><h3 id=\"7-2-运行命令行程序\"><a href=\"#7-2-运行命令行程序\" class=\"headerlink\" title=\"7.2 运行命令行程序\"></a>7.2 运行命令行程序</h3><pre><code>1. 运行Maven Assembly插 件的assembly目标\n    mvn assembly:assembly\n2. 调用Hibernate3插件的hbm2ddl目标来创建 HSQLDB数据库\n    mvn hibernate3:hbm2ddl\n3. 运行命令行\n    java -cp target/simple-command-jar-with-dependencies.jar \\ org.sonatype.mavenbook.weather.Main 60202\n</code></pre><h3 id=\"第八章-优化和重构POM\"><a href=\"#第八章-优化和重构POM\" class=\"headerlink\" title=\"第八章 优化和重构POM\"></a>第八章 优化和重构POM</h3><h3 id=\"8-1-POM清理，清理重复的内容\"><a href=\"#8-1-POM清理，清理重复的内容\" class=\"headerlink\" title=\"8.1 POM清理，清理重复的内容\"></a>8.1 POM清理，清理重复的内容</h3><h3 id=\"8-2-优化依赖，被一个以上的module共同依赖的库，应该统一放入父POM的-lt-dependencyManagement-中定义，并在这些module中删除依赖的版本-lt-version\"><a href=\"#8-2-优化依赖，被一个以上的module共同依赖的库，应该统一放入父POM的-lt-dependencyManagement-中定义，并在这些module中删除依赖的版本-lt-version\" class=\"headerlink\" title=\"8.2 优化依赖，被一个以上的module共同依赖的库，应该统一放入父POM的\\&lt;dependencyManagement>中定义，并在这些module中删除依赖的版本\\\\&lt;/version>\"></a>8.2 优化依赖，被一个以上的module共同依赖的库，应该统一放入父POM的\\&lt;dependencyManagement>中定义，并在这些module中删除依赖的版本\\<version>\\&lt;/version></version></h3><pre><code>例如， 优化后的父POM如下：\n    &lt;project&gt; \n        ...\n        &lt;dependencyManagement&gt; \n            &lt;dependencies&gt;\n                &lt;dependency&gt; \n                    &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                    &lt;artifactId&gt;hibernate-annotations&lt;/artifactId&gt;\n                    &lt;version&gt;3.3.0.ga&lt;/version&gt;\n                &lt;/dependency&gt;\n                &lt;dependency&gt;\n                    &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                    &lt;artifactId&gt;hibernate&lt;/artifactId&gt;\n                    &lt;version&gt;3.3.0.ga&lt;/version&gt;\n                &lt;/dependency&gt;\n            &lt;/dependencies&gt;\n        &lt;/dependencyManagement&gt;         \n        ...\n    &lt;project&gt; \n优化后的子POM：\n    &lt;project&gt; \n        ...\n        &lt;dependencies&gt;\n            &lt;dependency&gt; \n                &lt;groupId&gt; org.hibernate&lt;/groupId&gt;\n                &lt;artifactId&gt;hibernate-annotations&lt;/artifactId&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                &lt;artifactId&gt;hibernate-commons-annotations&lt;/artifactId&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n        ...\n    &lt;project&gt; \n</code></pre><h3 id=\"8-3-可预测的共通发布的相同版本号抽取。例如hibernate和hibernate-annotations的版本号总是相同的。\"><a href=\"#8-3-可预测的共通发布的相同版本号抽取。例如hibernate和hibernate-annotations的版本号总是相同的。\" class=\"headerlink\" title=\"8.3 可预测的共通发布的相同版本号抽取。例如hibernate和hibernate-annotations的版本号总是相同的。\"></a>8.3 可预测的共通发布的相同版本号抽取。例如hibernate和hibernate-annotations的版本号总是相同的。</h3><pre><code>    &lt;project&gt; \n    ...\n    &lt;properties&gt;\n        &lt;hibernate.annotations.version&gt;3.3.0.ga&lt;hibernate.annotations.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencyManagement&gt; \n        &lt;dependencies&gt;\n            &lt;dependency&gt; \n                &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                &lt;artifactId&gt;hibernate-annotations&lt;/artifactId&gt;\n                &lt;version&gt;${hibernate.annotations.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                &lt;artifactId&gt;hibernate-commons-annotations&lt;/artifactId&gt;\n                &lt;version&gt;${hibernate.annotations.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;         \n    ...\n&lt;project&gt; \n</code></pre><h3 id=\"8-4-解决兄弟module之间的依赖冲突\"><a href=\"#8-4-解决兄弟module之间的依赖冲突\" class=\"headerlink\" title=\"8.4 解决兄弟module之间的依赖冲突\"></a>8.4 解决兄弟module之间的依赖冲突</h3><pre><code>1. 方案一：将依赖都抽象到父POM中\n2. 方案二：在兄弟目录中，都使用内建属性来动态获取Version。例如：${parent.version}.\n</code></pre><p>为兄弟项目使用内置的项目version和groupId 使用{project.version}和org.sonatype.mavenbook来引用兄弟项目。兄弟项目 基本上一直共享同样的groupId，也基本上一直共享同样的发布版本。使用0.6- SNAPSHOT可以帮你避免前面提到的兄弟版本不一致问题。</p>\n<h3 id=\"8-5-优化插件\"><a href=\"#8-5-优化插件\" class=\"headerlink\" title=\"8.5 优化插件\"></a>8.5 优化插件</h3><pre><code>1. 插件的版本号也可以定义成properties\n2. 使用Maven Dependency插件进行优化\n    mvn dependency:analyze\n    mvn dependency:tree\n</code></pre><h3 id=\"第九章-项目对象模型\"><a href=\"#第九章-项目对象模型\" class=\"headerlink\" title=\"第九章 项目对象模型\"></a>第九章 项目对象模型</h3><p><img src=\"https://images2015.cnblogs.com/blog/737467/201511/737467-20151101222148700-2134239729.png\" alt=\"项目对象模型\"></p>\n<pre><code>项目对象模型包含了四类描述和配置：\n1. 项目总体信息 General Project Information\n2. 构建设置 Build Settings\n3. 构建环境 Build Environment\n     构建环境包含了一些能在不同使用环境中激活的profile。例如，在开发过程 中你可能会想要将应用部署到一个而开发服务器上，\n     而在产品环境中你会需要将 应用部署到产品服务器上。构建环境为特定的环境定制了构建设置，\n     通常它还会 由~/.m2中的自定义settings.xml补充。这个settings文件将会在第 11 章\n     构建 Profile中，以及第 A.1 节 “简介中”的附录 A,附录: Settings细节小节中 讨论。\n4. POM关系 POM Relationships\n</code></pre><h3 id=\"9-1-超级POM\"><a href=\"#9-1-超级POM\" class=\"headerlink\" title=\"9.1 超级POM\"></a>9.1 超级POM</h3><pre><code>超级POM位置：\n/usr/local/maven/lib/maven-2.0.9-uber.jar中的包org.apache.maven.project目录下pom-4.0.0.xml\n</code></pre><h3 id=\"9-2-项目版本号\"><a href=\"#9-2-项目版本号\" class=\"headerlink\" title=\"9.2 项目版本号\"></a>9.2 项目版本号</h3><p>Maven中的版本包含 了以下部分:主版本，次版本，增量版本，和限定版本号</p>\n<pre><code>版本号格式： &lt;major version&gt;.&lt;minor version&gt;.&lt;incremental version&gt;-&lt;qualifier&gt;\n</code></pre><p>版本“1.3.5”由一个主版本1，一个次版本3，和一个增量版本5。而一个 版本“5”只有主版本5，没有次版本和增量版本。限定版本用来标识里程碑构建: alpha和beta发布，限定版本通过连字符与主版本，次版本或增量版本隔离。例如，版 本“1.3-beta-01”有一个主版本1，次版本3，和一个限定版本“beta-01”    </p>\n<p>当你想要在你的POM中使用版本界限的时候，保持你的版本号与标准一致十分重要。 在第 9.4.3 节 “依赖版本界限”中介绍的版本界限，允许你声明一个带有版本界限的 依赖，只有你遵循标准的时候该功能才被支持。因为Maven根据本节中介绍的版本号格 式来对版本进行排序。</p>\n<p>如果你的版本号与格式&lt;主版本&gt;.&lt;次版本&gt;.&lt;增量版本&gt;-&lt;限定版本&gt;相匹配，它就能被 正确的比较;“1.2.3”将被评价成是一个比“1.0.2”更新的构件，这种比较基于主版 本，次版本，和增量版本的数值。如果你的版本发布号没有符合本节介绍的标准，那么 你的版本号只会根据字符串被比较;“1.0.1b”和“1.2.0b”会使用字符串比较。</p>\n<h3 id=\"9-3-构建版本号\"><a href=\"#9-3-构建版本号\" class=\"headerlink\" title=\"9.3 构建版本号\"></a>9.3 构建版本号</h3><p>我们还需要对版本号的限定版本进行排序。以版本号“1.2.3-alpha-2”和“1.2.3- alpha-10”为例，这里“alpha-2”对应了第二次alpha构建，而“alpha-10”对应了第 十次alpha构建。虽然“alpha-10”应该被认为是比“alpha-2”更新的构建，但Maven 排序的结果是“alpha-10”比“alpha-2”更旧，问题的原因就是我们刚才讨论的Maven 处理版本号的方式。</p>\n<p>Maven会将限定版本后面的数字认作一个构建版本。换句话说，这里限定版本 是“alpha”，而构建版本是2。虽然Maven被设计成将构建版本和限定版本分离，但 目前这种解析还是失效的。因此，“alpha-2”和“alpha-10”是使用字符串进行比较 的，而根据字母和数字“alpha-10”在“alpha-2”前面。要避开这种限制，你需要对 你的限定版本使用一些技巧。如果你使用“alpha-02”和“alpha-10”，这个问题就消 除了，一旦Maven能正确的解析版本构建号之后，这种工作方式也还是能用。</p>\n<h3 id=\"9-4-SNAPSHOT版本\"><a href=\"#9-4-SNAPSHOT版本\" class=\"headerlink\" title=\"9.4 SNAPSHOT版本\"></a>9.4 SNAPSHOT版本</h3><pre><code>只能用于开发阶段，默认不会从远程仓库查找，但也可以通过设置来允许上传到远程仓库。\n</code></pre><h3 id=\"9-5-LATEST-和-RELEASE-版本\"><a href=\"#9-5-LATEST-和-RELEASE-版本\" class=\"headerlink\" title=\"9.5 LATEST 和 RELEASE 版本\"></a>9.5 LATEST 和 RELEASE 版本</h3><pre><code>不建议使用，在开发阶段方便，但也可以能因为遗忘疏忽带来意想不到的后果。\n</code></pre><h3 id=\"9-6-变量和属性引用\"><a href=\"#9-6-变量和属性引用\" class=\"headerlink\" title=\"9.6 变量和属性引用\"></a>9.6 变量和属性引用</h3><p>一、变量引用</p>\n<p>Maven提供了三个隐式的变量，可以用来访问环境变量、POM信息和Maven Settings：</p>\n<ol>\n<li>env         暴露了你操作系统或者shell的环境变量</li>\n<li><p>project    project变量暴露了POM。你可以使用点标记(.)的路径来引用POM元素的值。</p>\n<pre><code>例如，在本节中我们使用过groupId和artifactId来设置构建配置 中的finalName元素。\n这个属性引用的语法是:org.sonatype.mavenbook- ${project.artifactId}    \n</code></pre></li>\n<li><p>settings    暴露了Maven settings信息。可以使用点标记(.)的路径来引用settings.xml文件中元素的值</p>\n<pre><code>例如，${settings.offline}会引用~/.m2/ settings.xml文件中offline元素的值\n</code></pre></li>\n</ol>\n<p>二、属性引用</p>\n<p>除了上面这三个隐式的变量，你还可以引用系统属性，以及任何在Maven POM中和构建<br>profile中自定义的属性组</p>\n<ol>\n<li><p>系统属性</p>\n<pre><code>Java系统属性 \n所有可以通过java.lang.System中getProperties()方法访问的属性都被暴露成POM属性。\n一些系统属性的例子是:hudson，/home/hudson，/usr/lib/jvm/ java-1.6.0-openjdk-1.6.0.0/jre，\n和Linux。一个完整的系统属性列表可以 在java.lang.System类的Javadoc中找到。\n\n我们还可以通过pom.xml或者settings.xml中的properties元素设置自己的属 性，\n或者还可以使用外部载入的文件中属性。如果你在pom.xml中设置了一个名 为fooBar的属性，\n该属性就可以通过${fooBar}引用。当你构建一个系统，它针 对不同的部署环境过滤资源，\n那么自定义属性就变得十分有用。这里是在POM中 设置${foo}=bar的语法:\n&lt;properties&gt; \n    &lt;foo&gt;bar&lt;/foo&gt;\n&lt;/properties&gt;\n</code></pre></li>\n<li><p>Maven POM中自定义的属性组</p>\n</li>\n<li>构建profile中自定义的属性组</li>\n</ol>\n<h3 id=\"9-7-依赖范围\"><a href=\"#9-7-依赖范围\" class=\"headerlink\" title=\"9.7 依赖范围\"></a>9.7 依赖范围</h3><p>依赖范围控制哪些依赖在哪些classpath中可用，哪些依赖包含在一个应用中</p>\n<table>\n<thead>\n<tr>\n<th>依赖范围</th>\n<th>描述</th>\n<th>代码示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>compile(编译范围)</td>\n<td>compile是默认的范围;如果没有提供一个范围，那该依赖的范围就是编译范 围。编译范围依赖在所有的classpath中可用，同时它们也会被打包。</td>\n<td>\\<scope>compile\\</scope></td>\n</tr>\n<tr>\n<td>provided(已提供范围)</td>\n<td>provided依赖只有在当JDK或者一个容器已提供该依赖之后才使用。例如，如果 你开发了一个web应用，你可能在编译classpath中需要可用的Servlet API来编 译一个servlet，但是你不会想要在打包好的WAR中包含这个Servlet API;这个 Servlet API JAR由你的应用服务器或者servlet容器提供。已提供范围的依赖在 编译classpath(不是运行时)可用。它们不是传递性的，也不会被打包</td>\n<td>\\<scope>compile\\</scope></td>\n</tr>\n<tr>\n<td>runtime(运行时范围)</td>\n<td>runtime依赖在运行和测试系统的时候需要，但在编译的时候不需要。比如，你 可能在编译的时候只需要JDBC API JAR，而只有在运行的时候才需要JDBC驱动实 现。</td>\n<td>\\<scope>compile\\</scope></td>\n</tr>\n<tr>\n<td>test(测试范围)</td>\n<td>test范围依赖 在一般的 编译和运行时都不需要，它们只有在测试编译和测试运 行阶段可用。测试范围依赖在之前介绍过</td>\n<td>\\<scope>compile\\</scope></td>\n</tr>\n<tr>\n<td>system(系统范围)</td>\n<td>system范围依赖与provided类似，但是你必须显式的提供一个对于本地系统中 JAR文件的路径。这么做是为了允许基于本地对象编译，而这些对象是系统类库 的一部分。这样的构件应该是一直可用的，Maven也不会在仓库中去寻找它。如 果你将一个依赖范围设置成系统范围，你必须同时提供一个systemPath元素。注 意该范围是不推荐使用的(你应该一直尽量去从公共或定制的Maven仓库中引用 依赖)</td>\n<td>\\<scope>compile\\</scope></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>可选依赖</td>\n<td>编译这个项目的时候你需要两个依赖类库EHCache和SwarmCache，但是你不希望在使用你类库的项 目中，这两个依赖类库同时作为传递性运行时依赖出现。<b>在理想的世界中，你不需要使用可选依赖。</b>你可以将EHCache相关的代码放到my- project-ehcache子模块中，将SwarmCache相关的代码放到my-project-swarmcache子模 块中，而非创建一个带有一系列可选依赖的大项目。这样，其它项目就可以只引用特定 实现的项目，发挥传递性依赖的功效，而不用去引用my-project项目，再自己声明特定 的依赖。</td>\n<td>\\<dependency><br>\\<groupid>swarmcache\\</groupid> \\<artifactid>swarmcache\\</artifactid><br>\\<version>1.0RC2\\</version><font color=\"red\"><br>\\<optional>true\\</optional></font><br>\\</dependency></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"9-8-依赖版本界限\"><a href=\"#9-8-依赖版本界限\" class=\"headerlink\" title=\"9.8 依赖版本界限\"></a>9.8 依赖版本界限</h3><p>你并不是必须为依赖声明某个特定的版本，你可以指定一个满足给定依赖的版本界限。</p>\n<p>例如，你可以指定你的项目依赖于JUnit的3.8或以上版本，或者说依赖于JUnit 1.2.10 和1.2.14之间的某个版本。你可以使用如下的字符来围绕一个或多个版本号，来实现版 本界限。</p>\n<table>\n<thead>\n<tr>\n<th>版本界限字符</th>\n<th>示例</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>(,) 不包含量词</td>\n<td>(1.2.3,2.5.8)</td>\n<td>支持从1.2.3到2.5.8之间的所有版本,开区间</td>\n</tr>\n<tr>\n<td>[,] 包含量词</td>\n<td>[1.2.3,2.5.8]</td>\n<td>支持从1.2.3到2.5.8之间的所有版本,闭区间</td>\n</tr>\n<tr>\n<td></td>\n<td>[1.2.3,2.5.8)</td>\n<td>支持从1.2.3到2.5.8之间的所有版本,左闭右开区间</td>\n</tr>\n<tr>\n<td></td>\n<td>(1.2.3,2.5.8]</td>\n<td>支持从1.2.3到2.5.8之间的所有版本,左开右闭区间</td>\n</tr>\n<tr>\n<td></td>\n<td>[1.2.3,)</td>\n<td>支持所有大于1.2.3的版本</td>\n</tr>\n<tr>\n<td></td>\n<td>(,2.5.8]</td>\n<td>支持所有小于2.5.8的版本</td>\n</tr>\n<tr>\n<td></td>\n<td>[1.2.3]</td>\n<td>只支持1.2.3版本</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"9-9-传递性依赖和范围\"><a href=\"#9-9-传递性依赖和范围\" class=\"headerlink\" title=\"9.9 传递性依赖和范围\"></a>9.9 传递性依赖和范围</h3><p>“依赖范围”中提到的每种依赖范围不仅仅影响声明项目中的依赖范围，它也对所传递性依赖起作用。表达该信息最简单的方式是通过一张表来表述：<b>范围如何影响传递性依赖</b></p>\n<table>\n<thead>\n<tr>\n<th>直接范围</th>\n<th>传递性范围</th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td><b>compile</b></td>\n<td><b>provided</b></td>\n<td><b>runtime</b></td>\n<td><b>test</b></td>\n</tr>\n<tr>\n<td><b>compile</b></td>\n<td>compile</td>\n<td>-</td>\n<td>runtime</td>\n<td>-</td>\n</tr>\n<tr>\n<td><b>provided</b></td>\n<td>provided</td>\n<td>provided</td>\n<td>provided</td>\n<td>-</td>\n</tr>\n<tr>\n<td><b>runtime</b></td>\n<td>runtime</td>\n<td>-</td>\n<td>runtime</td>\n<td>-</td>\n</tr>\n<tr>\n<td><b>test</b></td>\n<td>test</td>\n<td>-</td>\n<td>test</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<pre><code>A----compile----&gt;B   B----compile----&gt;C   结果： A----&gt;compile----&gt;C \nA----compile----&gt;B   B----provided---&gt;C   结果： A----&gt;不依赖于----&gt;C\nA----compile----&gt;B   B----runtime----&gt;C   结果： A----&gt;runtime----&gt;C  \nA----compile----&gt;B   B----test-------&gt;C   结果： A----&gt;不依赖于----&gt;C  \n\nA----provided---&gt;B   B----compile----&gt;C   结果： A----&gt;provided----&gt;C \nA----provided---&gt;B   B----provided---&gt;C   结果： A----&gt;provided----&gt;C\nA----provided---&gt;B   B----runtime----&gt;C   结果： A----&gt;provided----&gt;C  \nA----provided---&gt;B   B----test-------&gt;C   结果： A----&gt;不依赖于-----&gt;C\n\nA----runtime----&gt;B   B----compile----&gt;C   结果： A----&gt;runtime----&gt;C \nA----runtime----&gt;B   B----provided---&gt;C   结果： A----&gt;不依赖于----&gt;C\nA----runtime----&gt;B   B----runtime----&gt;C   结果： A----&gt;runtime----&gt;C  \nA----runtime----&gt;B   B----test-------&gt;C   结果： A----&gt;不依赖于----&gt;C  \n\nA------test-----&gt;B   B----compile----&gt;C   结果： A-----&gt;test-----&gt;C \nA------test-----&gt;B   B----provided---&gt;C   结果： A----&gt;不依赖于----&gt;C\nA------test-----&gt;B   B----runtime----&gt;C   结果： A-----&gt;test-----&gt;C  \nA------test-----&gt;B   B----test-------&gt;C   结果： A----&gt;不依赖于----&gt;C  \n</code></pre><h3 id=\"9-10-冲突解决-排除一个传递性依赖\"><a href=\"#9-10-冲突解决-排除一个传递性依赖\" class=\"headerlink\" title=\"9.10 冲突解决-排除一个传递性依赖\"></a>9.10 冲突解决-排除一个传递性依赖</h3><p>排除一个传递性依赖：\\<exclusion>\\</exclusion></p>\n<pre><code>&lt;dependency&gt; \n    &lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt;\n    &lt;artifactId&gt;project-a&lt;/artifactId&gt; \n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;exclusions&gt;\n        &lt;exclusion&gt; \n            &lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt; \n            &lt;artifactId&gt;project-b&lt;/artifactId&gt;\n        &lt;/exclusion&gt; \n    &lt;/exclusions&gt;\n&lt;/dependency&gt;\n</code></pre><p>排除并替换一个传递性依赖<br>其实就是排除一个传递性依赖，然后再添加一个同样的依赖来起到替换的作用</p>\n<pre><code>&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n        &lt;artifactId&gt;hibernate&lt;/artifactId&gt;\n        &lt;version&gt;3.2.5.ga&lt;/version&gt;\n        &lt;exclusions&gt;\n            &lt;exclusion&gt;\n                &lt;groupId&gt;javax.transaction&lt;/groupId&gt; \n                &lt;artifactId&gt;jta&lt;/artifactId&gt;\n            &lt;/exclusion&gt;\n        &lt;/exclusions&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.apache.geronimo.specs&lt;/groupId&gt;\n        &lt;artifactId&gt;geronimo-jta_1.1_spec&lt;/artifactId&gt;\n        &lt;version&gt;1.1&lt;/version&gt;\n    &lt;/dependency&gt; \n&lt;/dependencies&gt;\n</code></pre><p>四种可能需要排除替换的情况：</p>\n<ol>\n<li>构建的groupId和artifactId已经更改了，而当前的项目需要一个与传递性 依赖不同名称的版本——结果是classpath中出现了同样项目的两份内容。 一般来说Maven会捕捉到这种冲突并且使用该项目的一个单独的版本，但是 当artifactId和artifactId不一样的时候，Maven就会认为它们是两种不同的类 库。</li>\n<li>某个构件没有在你的项目中被使用，而且该传递性依赖没有被标志为可选依赖。 在这种情况下，你可能想要排除这种依赖，因为它不是你的系统需要的东西，你 要尽量减少应用程序分发时的类库数目。</li>\n<li>一个构件已经在运行时的容器中提供了，因此不应该被包含在你的构件中。该情 况的一个例子是，如果一个依赖依赖于如Servlet API的东西，并且你又要确保 这样的依赖没有包含在web应用的WEB-INF/lib目录中。</li>\n<li>为了排除一个可能是多个实现的API的依赖。这种情况在例 9.8 “排除并替换一 个传递性依赖”中阐述;有一个Sun API，需要点击许可证，并且需要耗时的手 工安装到自定义仓库，对于同样的API有可免费分发版本，在中央Maven仓库中可 用(Geronimo’s JTA 实现)</li>\n</ol>\n<h3 id=\"9-11-依赖管理\"><a href=\"#9-11-依赖管理\" class=\"headerlink\" title=\"9.11 依赖管理\"></a>9.11 依赖管理</h3><p>父POM中dependencyManagement元素中为你提供了一种方式来统一依赖版本号，使用pom.xml中的dependencyManagement元素能让你在子项目中引用一个依赖而不用显式的列出版本号。</p>\n<p>注意：如果子项目定义了一个版本，它将覆盖顶层POM 的dependencyManagement元素中的版本。那就是:只有在子项目没有直接声明一个版本 的时候，dependencyManagement定义的版本才会被使用。</p>\n<h3 id=\"9-12-项目继承\"><a href=\"#9-12-项目继承\" class=\"headerlink\" title=\"9.12 项目继承\"></a>9.12 项目继承</h3><p>POM继承关系图：</p>\n<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1527092792721&amp;di=c572597d764f196d1dd77148ae07808b&amp;imgtype=jpg&amp;src=http%3A%2F%2Fimg1.imgtn.bdimg.com%2Fit%2Fu%3D2335801681%2C471830450%26fm%3D214%26gp%3D0.jpg\" alt=\"POM继承关系图\"></p>\n<p>有些情况你会想要一个项目从父POM中继承一些值。你可能正构建一个大型的系统，你 不想一遍又一遍的重复同样的依赖元素。如果你的项目通过parent元素使用继承，你 就可以避免这种重复。当一个项目声明一个parent的时候，它从父项目的POM中继承信 息。它也可以覆盖父POM中的值，或者添加一些新的值。</p>\n<p>所有的Maven POM从父POM中继承值。如果一个POM没有通过parent元素指定一个直 接的父项目，那这个POM就会从超级POM继承值。</p>\n<pre><code>项目继承方式如下：\n&lt;project&gt; \n    &lt;parent&gt;\n        &lt;groupId&gt;com.training.killerapp&lt;/groupId&gt;\n        &lt;artifactId&gt;a-parent&lt;/artifactId&gt;\n        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n    &lt;/parent&gt; \n    &lt;artifactId&gt;project-a&lt;/artifactId&gt; \n    ...\n&lt;/project&gt;\n</code></pre><p>当一个项目指定一个父项目的时候，Maven在读取当前项目的POM之前，会使用这个 父POM作为起始点。它继承所有东西，包括groupId和version。你会注意到project- a没有指定groupId和version，它们从a-parent继承而来。有了parent元素，一个 POM就只需要定义一个artifactId。但这不是强制的，project-a可以有一个不同 的groupId和version，但如果不提供值，Maven就会使用在父POM中指定的值。如果你 开始使用Maven来管理和构建大型的多模块项目，你就会常常创建许多共享一组通用 的groupId和version的项目。</p>\n<p>当你继承一个POM，你可以选择直接使用继承的POM信息，或者选择覆盖它。以下是一个 Maven POM从它父POM中继承的项目列表:</p>\n<ol>\n<li>定义符(groupId和artifactId中至少有一个必须被覆盖) </li>\n<li>依赖</li>\n<li>开发者和贡献者</li>\n<li>插件列表</li>\n<li>报告列表</li>\n<li>插件执行 (id匹配的执行会被合并) </li>\n<li>插件配置</li>\n</ol>\n<h3 id=\"9-13-POM-最佳实践\"><a href=\"#9-13-POM-最佳实践\" class=\"headerlink\" title=\"9.13 POM 最佳实践\"></a>9.13 POM 最佳实践</h3><ol>\n<li><p>创建一个集中管理依赖的pom项目 baseDeps 关键在于：<b>\\<packaing>pom\\</packaing></b></p>\n<pre><code>&lt;project&gt;\n    &lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt;\n    &lt;artifactId&gt;persistence-deps&lt;/artifactId&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;packaging&gt;pom&lt;/packaging&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n            &lt;artifactId&gt;hibernate&lt;/artifactId&gt;\n            &lt;version&gt;${hibernateVersion}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n            &lt;artifactId&gt;hibernate-annotations&lt;/artifactId&gt;\n            &lt;version&gt;${hibernateAnnotationsVersion}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-hibernate3&lt;/artifactId&gt;\n            &lt;version&gt;${springVersion}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;version&gt;${mysqlVersion}&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    &lt;properties&gt;\n        &lt;mysqlVersion&gt;(5.1,)&lt;/mysqlVersion&gt;\n        &lt;springVersion&gt;(2.0.6,)&lt;/springVersion&gt;\n        &lt;hibernateVersion&gt;3.2.5.ga&lt;/hibernateVersion&gt;\n        &lt;hibernateAnnotationsVersion&gt;3.3.0.ga&lt;/hibernateAnnotationsVersion&gt;\n    &lt;/properties&gt;\n&lt;/project&gt;\n</code></pre></li>\n<li><p>执行mvn install  将baseDeps pom类型项目安装到maven仓库。</p>\n</li>\n<li><p>在其他项目中声明对baseDeps项目的依赖，关键在于\\<type>pom\\</type></p>\n<pre><code>&lt;project&gt;\n    &lt;description&gt;This is a project requiring JDBC&lt;/description&gt;\n    ...\n    &lt;dependencies&gt;\n        ...\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt;\n            &lt;artifactId&gt;baseDeps&lt;/artifactId&gt;\n            &lt;version&gt;1.0&lt;/version&gt;\n            &lt;type&gt;pom&lt;/type&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre></li>\n<li><p>继承 VS 多模块</p>\n<p> <img src=\"https://books.sonatype.com/mvnref-book/reference/figs/web/pom_book-example.png\" alt=\"继承 VS 多模块\"></p>\n</li>\n<li><p>多模块企业级项目</p>\n<p> <img src=\"https://books.sonatype.com/mvnref-book/reference/figs/web/pom_real_multi.png\" alt=\"实际应用多模块企业级项目\"></p>\n</li>\n</ol>\n<h3 id=\"第十章-构建生命周期\"><a href=\"#第十章-构建生命周期\" class=\"headerlink\" title=\"第十章 构建生命周期\"></a>第十章 构建生命周期</h3><h3 id=\"第十一章-构建Profile\"><a href=\"#第十一章-构建Profile\" class=\"headerlink\" title=\"第十一章 构建Profile\"></a>第十一章 构建Profile</h3><h3 id=\"11-1-什么是构建Profile\"><a href=\"#11-1-什么是构建Profile\" class=\"headerlink\" title=\"11.1 什么是构建Profile\"></a>11.1 什么是构建Profile</h3><p>Profile能让你为一个特殊的环境自定义一个特殊的构建;profile使得不同环境间构建 的可移植性成为可能。</p>\n<p>Profile可以配置package信息: debug, log等<br>Profile可以配置生产环境信息: develop版本，product版本，release版本等<br>Profile可以配置渠道信息：googleplay，360，豌豆荚等<br>更多的时候渠道分发包，使用Assembly插件来构建是非常适合的。</p>\n<p>Profile类似gradle中的 Flavors配置，可以配置打出不同的包。</p>\n<p>Maven中的profile是一组可选的配置，可以用来设置或者覆盖配置默认值。有了 profile，你就可以为不同的环境定制构建。profile可以在pom.xml中配置，并给定一 个id。然后你就可以在运行Maven的时候使用的命令行标记告诉Maven运行特定profile 中的目标。以下pom.xml使用production profile覆盖了默认的Compiler插件设置。</p>\n<pre><code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n    xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0\nhttp://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;groupId&gt;org.sonatype.mavenbook&lt;/groupId&gt;\n    &lt;artifactId&gt;simple&lt;/artifactId&gt;\n    &lt;packaging&gt;jar&lt;/packaging&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;simple&lt;/name&gt;\n    &lt;url&gt;http://maven.apache.org&lt;/url&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;/groupId&gt;\n            &lt;artifactId&gt;junit&lt;/artifactId&gt;\n            &lt;version&gt;3.8.1&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    &lt;profiles&gt;\n        ...\n        &lt;profile&gt;\n            &lt;id&gt;production&lt;/id&gt;\n            ...\n            &lt;build&gt;\n                ...\n                &lt;plugins&gt;\n                    &lt;plugin&gt;\n                        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                        &lt;configuration&gt;\n                            &lt;debug&gt;false&lt;/debug&gt;\n                            &lt;optimize&gt;true&lt;/optimize&gt;\n                        &lt;/configuration&gt;\n                    &lt;/plugin&gt;\n                &lt;/plugins&gt;\n            &lt;/build&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/project&gt;\n</code></pre><h3 id=\"11-2-profile的语法\"><a href=\"#11-2-profile的语法\" class=\"headerlink\" title=\"11.2 profile的语法\"></a>11.2 profile的语法</h3><table>\n<thead>\n<tr>\n<th>序号</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>pom.xml中的profiles元素，它包含了一个或者多个profile元素。由于profile覆 盖了pom.xml中的默认设置，profiles通常是pom.xml中的最后一个元素。</td>\n</tr>\n<tr>\n<td>2</td>\n<td>每个profile必须要有一个id元素。这个id元素包含的名字将在命令行调用profile 时被用到。我们可以通过传给Maven一个-P&lt;profile_id&gt;参数来调用profile。</td>\n</tr>\n<tr>\n<td>3</td>\n<td>一个profile元素可以包含很多其它元素，只要这些元素可以出现在POM XML文档 的project元素下面。本例中，我们覆盖了Compiler插件的行为，因此必须覆盖插 件配置，该配置通常位于一个build和一个plugins元素下面</td>\n</tr>\n<tr>\n<td>4</td>\n<td>我们覆盖了Maven Compiler插件的配置。确保通过production profile产生的字 节码不会包含调试信息，并且字节码会被编译器优化</td>\n</tr>\n</tbody>\n</table>\n<p>要使用production profile来运行mvn install，你需要在命令行传入-Pproduction参 数。要验证production profile覆盖了默认的Compiler插件配置，可以像这样以开启调 试输出(-X) 的方式运行Maven。</p>\n<pre><code>mvn clean install -Pproduction -X\n</code></pre><p>Profile中允许覆盖整个pom.xml，其节点可以如下：</p>\n<pre><code>&lt;project&gt;\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;build&gt;\n                &lt;defaultGoal&gt;...&lt;/defaultGoal&gt;\n                &lt;finalName&gt;...&lt;/finalName&gt;\n                &lt;resources&gt;...&lt;/resources&gt;\n                &lt;testResources&gt;...&lt;/testResources&gt;\n                &lt;plugins&gt;...&lt;/plugins&gt;\n            &lt;/build&gt;\n            &lt;reporting&gt;...&lt;/reporting&gt;\n            &lt;modules&gt;...&lt;/modules&gt;\n            &lt;dependencies&gt;...&lt;/dependencies&gt;\n            &lt;dependencyManagement&gt;...&lt;/dependencyManagement&gt;\n            &lt;distributionManagement&gt;...&lt;/distributionManagement&gt;\n            &lt;repositories&gt;...&lt;/repositories&gt;\n            &lt;pluginRepositories&gt;...&lt;/pluginRepositories&gt;\n            &lt;properties&gt;...&lt;/properties&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/project&gt;\n</code></pre><h3 id=\"11-3-激活Profile\"><a href=\"#11-3-激活Profile\" class=\"headerlink\" title=\"11.3 激活Profile\"></a>11.3 激活Profile</h3><pre><code>当jdk为1.6时，jdk16这个profile会被激活（activation）\n&lt;profiles&gt;\n    &lt;profile&gt;\n        &lt;id&gt;jdk16&lt;/id&gt;\n        &lt;activation&gt;\n            &lt;jdk&gt;1.6&lt;/jdk&gt;\n        &lt;/activation&gt;\n        &lt;modules&gt;\n            &lt;module&gt;simple-script&lt;/module&gt;\n        &lt;/modules&gt;\n    &lt;/profile&gt;\n&lt;/profiles&gt;\n</code></pre><h3 id=\"11-4-当所有条件满足时才会激活Profile\"><a href=\"#11-4-当所有条件满足时才会激活Profile\" class=\"headerlink\" title=\"11.4 当所有条件满足时才会激活Profile\"></a>11.4 当所有条件满足时才会激活Profile</h3><pre><code>&lt;project&gt;\n    ...\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;id&gt;dev&lt;/id&gt;\n            &lt;activation&gt;\n                &lt;activeByDefault&gt;false&lt;/activeByDefault&gt;\n                &lt;jdk&gt;1.5&lt;/jdk&gt;\n                &lt;os&gt;\n                    &lt;name&gt;Windows XP&lt;/name&gt;\n                    &lt;family&gt;Windows&lt;/family&gt;\n                    &lt;arch&gt;x86&lt;/arch&gt;\n                    &lt;version&gt;5.1.2600&lt;/version&gt;\n                &lt;/os&gt;\n                &lt;property&gt;\n                    &lt;name&gt;mavenVersion&lt;/name&gt;\n                    &lt;value&gt;2.0.5&lt;/value&gt;\n                &lt;/property&gt;\n                &lt;file&gt;\n                    &lt;exists&gt;file2.properties&lt;/exists&gt;\n                    &lt;missing&gt;file1.properties&lt;/missing&gt;\n                &lt;/file&gt;\n            &lt;/activation&gt;\n            ...\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/project&gt;\n</code></pre><h3 id=\"11-5-属性缺失时激活Profile\"><a href=\"#11-5-属性缺失时激活Profile\" class=\"headerlink\" title=\"11.5 属性缺失时激活Profile\"></a>11.5 属性缺失时激活Profile</h3><pre><code>&lt;project&gt;\n    ...\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;id&gt;development&lt;/id&gt;\n            &lt;activation&gt;\n                &lt;property&gt;\n                    &lt;name&gt;!environment.type&lt;/name&gt;\n                &lt;/property&gt;\n            &lt;/activation&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/project&gt;\n</code></pre><h3 id=\"11-6-外部Profile，将pom-xml中profile抽取成单独的profile-xml\"><a href=\"#11-6-外部Profile，将pom-xml中profile抽取成单独的profile-xml\" class=\"headerlink\" title=\"11.6 外部Profile，将pom.xml中profile抽取成单独的profile.xml\"></a>11.6 外部Profile，将pom.xml中profile抽取成单独的profile.xml</h3><pre><code>&lt;profiles&gt;\n&lt;profile&gt;\n    &lt;id&gt;development&lt;/id&gt;\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;debug&gt;true&lt;/debug&gt;\n                    &lt;optimize&gt;false&lt;/optimize&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/profile&gt;\n&lt;profile&gt;\n    &lt;id&gt;production&lt;/id&gt;\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;debug&gt;false&lt;/debug&gt;\n                    &lt;optimize&gt;true&lt;/optimize&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/profile&gt;\n&lt;/profiles&gt;\n</code></pre><h3 id=\"11-7-Settings-Profile\"><a href=\"#11-7-Settings-Profile\" class=\"headerlink\" title=\"11.7 Settings Profile\"></a>11.7 Settings Profile</h3><p>Settings Profile可以同时应用到你的所有maven构建中，就相当于默认profile,可以在以下两个地方定义Settings Profile。</p>\n<pre><code>1. 定义在 ~/.m2/settings.xml中\n2. 定义在 /usr/local/maven/conf/settings.xml中\n</code></pre><p>配置方式如：</p>\n<pre><code>&lt;settings&gt;\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;id&gt;dev&lt;/id&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;sign&lt;/goal&gt;\n                        &lt;/goals&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n                &lt;configuration&gt;\n                    &lt;keystore&gt;/home/tobrien/java/keystore&lt;/keystore&gt;\n                    &lt;alias&gt;tobrien&lt;/alias&gt;\n                    &lt;storepass&gt;s3cr3tp@ssw0rd&lt;/storepass&gt;\n                    &lt;signedjar&gt;\n                        /usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/c\n                    &lt;/signedjar&gt;\n                    &lt;verify&gt;true&lt;/verify&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/settings&gt;\n</code></pre><h3 id=\"11-8-列出活动的Profiles\"><a href=\"#11-8-列出活动的Profiles\" class=\"headerlink\" title=\"11.8 列出活动的Profiles\"></a>11.8 列出活动的Profiles</h3><pre><code>mvn help:active-profiles\n</code></pre><h3 id=\"11-9-可以通过default-profile来设定一些属性值\"><a href=\"#11-9-可以通过default-profile来设定一些属性值\" class=\"headerlink\" title=\"11.9 可以通过default profile来设定一些属性值\"></a>11.9 可以通过default profile来设定一些属性值</h3><pre><code>例如：下面设置了一个activeByDefault = true的profile，并且将environment.type设置成dev。以后我们可以在pom.xml中根据environment.type是否等于dev来执行一些逻辑。\n&lt;settings&gt;\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;activation&gt;\n                &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;\n            &lt;/activation&gt;\n            &lt;properties&gt;\n                &lt;environment.type&gt;dev&lt;/environment.type&gt;\n            &lt;/properties&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/settings&gt;\n</code></pre><h3 id=\"Maven套件\"><a href=\"#Maven套件\" class=\"headerlink\" title=\"Maven套件\"></a>Maven套件</h3><p>Markdown文件中图片制作与超链接获取</p>\n<h3 id=\"1-上传图片到印象笔记\"><a href=\"#1-上传图片到印象笔记\" class=\"headerlink\" title=\"1. 上传图片到印象笔记\"></a>1. 上传图片到印象笔记</h3><pre><code>1. 登陆《印象笔记》和《圈点》\n2. 打开印象笔记《圈点》\n3. 在圈点中编辑图片，然后点击同步。\n4. 打开《印象笔记》，找到刚才用《圈点》编辑并同步的图片笔记，不要打开。\n5. 在笔记上点击鼠标右键--&gt;复制笔记链接\n6. 在浏览器中打开此链接\n7. 在打开的网页中需要的图片上点击鼠标右键--&gt;复制图片地址\n8. 制作成如下图片链接样式即可  ![定义一个图片名称](复制的图片地址)\n</code></pre><h3 id=\"2-上传笔记到简书\"><a href=\"#2-上传笔记到简书\" class=\"headerlink\" title=\"2. 上传笔记到简书\"></a>2. 上传笔记到简书</h3><pre><code>1. control + c 复制准备好的图片\n2. 登陆《简书》\n3. 点击--&gt;写文章--&gt;新建文章--&gt;control + v 粘贴图片到文章编辑框，并等待上传，\n    上传完成之后会在文章编辑框生成 markdown 图片链接。直接拷贝到markdown文档中即可。\n</code></pre><h3 id=\"3-上传图片到其他图片服务器\"><a href=\"#3-上传图片到其他图片服务器\" class=\"headerlink\" title=\"3. 上传图片到其他图片服务器\"></a>3. 上传图片到其他图片服务器</h3>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjmn77hg60001js6sgp4fjbu5","tag_id":"cjmn77hgj0003js6sahzximsj","_id":"cjmn77hh4000ljs6skimc43m8"},{"post_id":"cjmn77hg60001js6sgp4fjbu5","tag_id":"cjmn77hgp0007js6smwsrmwpf","_id":"cjmn77hh5000njs6si1iypeyi"},{"post_id":"cjmn77hg60001js6sgp4fjbu5","tag_id":"cjmn77hgu000ajs6s9qkryeov","_id":"cjmn77hh5000pjs6sdxfa29m0"},{"post_id":"cjmn77hg60001js6sgp4fjbu5","tag_id":"cjmn77hgy000djs6shy3seajp","_id":"cjmn77hh5000qjs6s94rojr19"},{"post_id":"cjmn77hg60001js6sgp4fjbu5","tag_id":"cjmn77hh0000gjs6sjdd621cu","_id":"cjmn77hh6000sjs6susu6p33z"},{"post_id":"cjmn77hgc0002js6s6h82ffq2","tag_id":"cjmn77hh3000kjs6s767yjy9t","_id":"cjmn77hh9000ujs6sgje66892"},{"post_id":"cjmn77hgc0002js6s6h82ffq2","tag_id":"cjmn77hh5000ojs6snr8x1td4","_id":"cjmn77hh9000vjs6stzvoxhqz"},{"post_id":"cjmn77hgc0002js6s6h82ffq2","tag_id":"cjmn77hh6000rjs6ssvcee2eb","_id":"cjmn77hha000xjs6subs5d03v"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hh3000kjs6s767yjy9t","_id":"cjmn77hhf0018js6so95pemoj"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hh5000ojs6snr8x1td4","_id":"cjmn77hhf0019js6se7lrldv5"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hha000yjs6s01p8jiek","_id":"cjmn77hhf001bjs6szbkvb7j8"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hhb000zjs6sv0i33yat","_id":"cjmn77hhg001cjs6ss0r8z0ot"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hhb0010js6spyredz5f","_id":"cjmn77hhg001ejs6s1eu8boy4"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hhc0011js6sy6r3h82e","_id":"cjmn77hhg001fjs6shzhsjq86"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hhc0012js6s13ng7f4s","_id":"cjmn77hhh001hjs6s56f1pzx7"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hhc0013js6sr5dguj0g","_id":"cjmn77hhh001ijs6sd5yznweu"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hhd0014js6slpwfydco","_id":"cjmn77hhh001jjs6ssyjww60u"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hhd0015js6soeld3yzz","_id":"cjmn77hhi001ljs6s4sguw1uy"},{"post_id":"cjmn77hgm0004js6sk5d6dls3","tag_id":"cjmn77hhe0016js6sr0nqosil","_id":"cjmn77hhi001mjs6s5e5txqcl"},{"post_id":"cjmn77hgn0005js6sudoytbex","tag_id":"cjmn77hhe0017js6sr9nzsyq3","_id":"cjmn77hhi001ojs6sjyc5dim9"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhf001ajs6soazvpznc","_id":"cjmn77hhn001yjs6sfr622kyk"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhg001djs6s83r8nafj","_id":"cjmn77hhn001zjs6scx6618cw"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhh001gjs6st9cz0piy","_id":"cjmn77hho0021js6smvp78fk1"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhh001kjs6std0syu0l","_id":"cjmn77hho0022js6svuzj9t4y"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhi001njs6sxtj54unr","_id":"cjmn77hhp0024js6soegu3du8"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhj001pjs6selm6bjw7","_id":"cjmn77hhp0025js6sc3fb3n9c"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhj001qjs6s2t04x332","_id":"cjmn77hhp0027js6sfn438r29"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhk001rjs6s9j6ljx1h","_id":"cjmn77hhq0028js6sx9dzedok"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhk001sjs6smr9b3n2p","_id":"cjmn77hhq002ajs6s1ljs6a0z"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhk001tjs6szhl10prx","_id":"cjmn77hhr002bjs6swn1c7keb"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhl001ujs6sl9fkejxy","_id":"cjmn77hhr002djs6s1rjbsiir"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhl001vjs6sjaqt73ba","_id":"cjmn77hhs002ejs6sot0so9j1"},{"post_id":"cjmn77hgp0006js6scytimc3d","tag_id":"cjmn77hhm001wjs6sfumn9pv7","_id":"cjmn77hhs002gjs6signov85k"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhf001ajs6soazvpznc","_id":"cjmn77hhz002ojs6sha9ovitb"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhg001djs6s83r8nafj","_id":"cjmn77hhz002pjs6su26gvmg9"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhh001gjs6st9cz0piy","_id":"cjmn77hi0002rjs6s7gprgg4u"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhh001kjs6std0syu0l","_id":"cjmn77hi0002sjs6sx1q6rj32"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhi001njs6sxtj54unr","_id":"cjmn77hi0002ujs6scdv3cdea"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhj001pjs6selm6bjw7","_id":"cjmn77hi0002vjs6s1kygzi4n"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhj001qjs6s2t04x332","_id":"cjmn77hi1002xjs6s6eu19ckb"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhk001rjs6s9j6ljx1h","_id":"cjmn77hi1002yjs6sm82dg2wt"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhk001sjs6smr9b3n2p","_id":"cjmn77hi10030js6smwrizdc1"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhk001tjs6szhl10prx","_id":"cjmn77hi20031js6sbezbdlfp"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhl001ujs6sl9fkejxy","_id":"cjmn77hi20033js6s9mqk5ni9"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhl001vjs6sjaqt73ba","_id":"cjmn77hi20034js6ss40xxrco"},{"post_id":"cjmn77hgq0008js6sq4fp3srw","tag_id":"cjmn77hhm001wjs6sfumn9pv7","_id":"cjmn77hi30036js6stbjlx3cx"},{"post_id":"cjmn77hgs0009js6sx1bh6tfm","tag_id":"cjmn77hha000yjs6s01p8jiek","_id":"cjmn77hi30037js6sno75a22s"},{"post_id":"cjmn77hgx000cjs6s4b2g4tx5","tag_id":"cjmn77hhz002qjs6sxv531l3j","_id":"cjmn77hi40039js6so9esiwu8"},{"post_id":"cjmn77hgx000cjs6s4b2g4tx5","tag_id":"cjmn77hi0002tjs6ssbs6rlas","_id":"cjmn77hi4003ajs6s8ogfuasp"},{"post_id":"cjmn77hgx000cjs6s4b2g4tx5","tag_id":"cjmn77hi1002wjs6s5ykp09la","_id":"cjmn77hi5003cjs6sxlgl1qou"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhf001ajs6soazvpznc","_id":"cjmn77hic003mjs6sxawhjnvc"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhg001djs6s83r8nafj","_id":"cjmn77hic003njs6ssq8t7bmi"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhh001gjs6st9cz0piy","_id":"cjmn77hic003pjs6skllgaocp"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhh001kjs6std0syu0l","_id":"cjmn77hid003qjs6svtdj4rni"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhi001njs6sxtj54unr","_id":"cjmn77hid003sjs6sg9ph2rq3"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhj001pjs6selm6bjw7","_id":"cjmn77hid003tjs6s0ifn7pz5"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhj001qjs6s2t04x332","_id":"cjmn77hif003vjs6sbzvdk7bo"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhk001rjs6s9j6ljx1h","_id":"cjmn77hif003wjs6slcpqtbti"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhk001sjs6smr9b3n2p","_id":"cjmn77hif003xjs6smef77rik"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhk001tjs6szhl10prx","_id":"cjmn77hig003zjs6sn6rdtm3x"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhl001ujs6sl9fkejxy","_id":"cjmn77hig0040js6swqkpkfh7"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhl001vjs6sjaqt73ba","_id":"cjmn77hih0042js6sd1vm6uvu"},{"post_id":"cjmn77hgy000ejs6szms2b57l","tag_id":"cjmn77hhm001wjs6sfumn9pv7","_id":"cjmn77hih0043js6sz8dnz31j"},{"post_id":"cjmn77hgz000fjs6sewd2usoq","tag_id":"cjmn77hib003ljs6smdak9oq0","_id":"cjmn77hih0045js6secdhjul5"},{"post_id":"cjmn77hgz000fjs6sewd2usoq","tag_id":"cjmn77hic003ojs6sdbbdcn56","_id":"cjmn77hih0046js6swqpvlen6"},{"post_id":"cjmn77hgz000fjs6sewd2usoq","tag_id":"cjmn77hid003rjs6s0zuoc9yg","_id":"cjmn77hii0048js6s5g894r0d"},{"post_id":"cjmn77hgz000fjs6sewd2usoq","tag_id":"cjmn77hie003ujs6sd95d89hh","_id":"cjmn77hii0049js6s3jd4y4n2"},{"post_id":"cjmn77hgz000fjs6sewd2usoq","tag_id":"cjmn77hif003yjs6sm5s82rvx","_id":"cjmn77hii004ajs6s6n6nmq1q"},{"post_id":"cjmn77hh0000hjs6sohgus9d3","tag_id":"cjmn77hig0041js6sto4vcuna","_id":"cjmn77hin004jjs6srzhzt13l"},{"post_id":"cjmn77hh0000hjs6sohgus9d3","tag_id":"cjmn77hih0044js6safdvnc9d","_id":"cjmn77hin004kjs6scypyj519"},{"post_id":"cjmn77hh0000hjs6sohgus9d3","tag_id":"cjmn77hih0047js6so231b1h8","_id":"cjmn77hio004mjs6sxd7u1vd8"},{"post_id":"cjmn77hh0000hjs6sohgus9d3","tag_id":"cjmn77hii004bjs6sglofd35s","_id":"cjmn77hio004njs6swfa3jr03"},{"post_id":"cjmn77hh0000hjs6sohgus9d3","tag_id":"cjmn77hij004cjs6sqfrnfow7","_id":"cjmn77hio004pjs6swmxinwp7"},{"post_id":"cjmn77hh0000hjs6sohgus9d3","tag_id":"cjmn77hij004djs6sbnhbu6fb","_id":"cjmn77hio004qjs6sbow12isx"},{"post_id":"cjmn77hh0000hjs6sohgus9d3","tag_id":"cjmn77hij004ejs6suw1uulip","_id":"cjmn77hip004sjs6sii9ue76a"},{"post_id":"cjmn77hh0000hjs6sohgus9d3","tag_id":"cjmn77hhb0010js6spyredz5f","_id":"cjmn77hip004tjs6su37snaku"},{"post_id":"cjmn77hh0000hjs6sohgus9d3","tag_id":"cjmn77hhb000zjs6sv0i33yat","_id":"cjmn77hip004ujs6sg95vkxbw"},{"post_id":"cjmn77hh0000hjs6sohgus9d3","tag_id":"cjmn77hha000yjs6s01p8jiek","_id":"cjmn77hip004wjs6srypfp065"},{"post_id":"cjmn77hh1000ijs6s38svmm7j","tag_id":"cjmn77hin004ijs6sxsve8xo2","_id":"cjmn77hip004xjs6sb0t917n7"},{"post_id":"cjmn77hh1000ijs6s38svmm7j","tag_id":"cjmn77hio004ljs6sj0y6n7km","_id":"cjmn77hiq004zjs6skedn5s6d"},{"post_id":"cjmn77hh4000mjs6szam4imaj","tag_id":"cjmn77hio004ojs6so7rw6g2s","_id":"cjmn77hj50054js6s5wohial9"},{"post_id":"cjmn77hh4000mjs6szam4imaj","tag_id":"cjmn77hip004rjs6s1oqhc69z","_id":"cjmn77hj50055js6sn9vshr3e"},{"post_id":"cjmn77hh4000mjs6szam4imaj","tag_id":"cjmn77hip004vjs6syshgfhe3","_id":"cjmn77hj50056js6san94lh9o"},{"post_id":"cjmn77hh4000mjs6szam4imaj","tag_id":"cjmn77hha000yjs6s01p8jiek","_id":"cjmn77hj50057js6sweyhm4n2"},{"post_id":"cjmn77hh4000mjs6szam4imaj","tag_id":"cjmn77hiq0050js6s8fc75azt","_id":"cjmn77hj50058js6su9349gt5"},{"post_id":"cjmn77hh4000mjs6szam4imaj","tag_id":"cjmn77his0051js6sayc2hhg9","_id":"cjmn77hj50059js6sn8dvghiu"},{"post_id":"cjmn77hh4000mjs6szam4imaj","tag_id":"cjmn77hit0052js6s3pvn4vpw","_id":"cjmn77hj5005ajs6s8zwfwk5z"},{"post_id":"cjmn77hh4000mjs6szam4imaj","tag_id":"cjmn77hiu0053js6swom6sert","_id":"cjmn77hj5005bjs6s3d823wvx"},{"post_id":"cjmn77hjo005djs6srcqv1xdg","tag_id":"cjmn77hig0041js6sto4vcuna","_id":"cjmn77hjr005fjs6s5ka3aio1"},{"post_id":"cjmn77hjo005djs6srcqv1xdg","tag_id":"cjmn77hih0044js6safdvnc9d","_id":"cjmn77hjv005hjs6szvihdp2u"},{"post_id":"cjmn77hjo005djs6srcqv1xdg","tag_id":"cjmn77hih0047js6so231b1h8","_id":"cjmn77hjy005jjs6sceu78avi"},{"post_id":"cjmn77hjo005djs6srcqv1xdg","tag_id":"cjmn77hii004bjs6sglofd35s","_id":"cjmn77hjz005kjs6sfuttcbxx"},{"post_id":"cjmn77hjo005djs6srcqv1xdg","tag_id":"cjmn77hij004cjs6sqfrnfow7","_id":"cjmn77hjz005ljs6s18nqbxsg"},{"post_id":"cjmn77hjo005djs6srcqv1xdg","tag_id":"cjmn77hij004djs6sbnhbu6fb","_id":"cjmn77hjz005njs6s553wv0wv"},{"post_id":"cjmn77hjr005gjs6spu4lx4i1","tag_id":"cjmn77hjy005ijs6s2l29qhtn","_id":"cjmn77hk3005rjs6sgsxbov9n"},{"post_id":"cjmn77hjr005gjs6spu4lx4i1","tag_id":"cjmn77hjz005mjs6s93t4fwdz","_id":"cjmn77hk3005sjs6scjaedti1"},{"post_id":"cjmn77hjr005gjs6spu4lx4i1","tag_id":"cjmn77hk0005ojs6suijozm2c","_id":"cjmn77hk3005tjs6sdy0eeh29"},{"post_id":"cjmn77hjr005gjs6spu4lx4i1","tag_id":"cjmn77hib003ljs6smdak9oq0","_id":"cjmn77hk3005ujs6suxhx3khy"},{"post_id":"cjmn77hjr005gjs6spu4lx4i1","tag_id":"cjmn77hic003ojs6sdbbdcn56","_id":"cjmn77hk3005vjs6syay2ecdy"},{"post_id":"cjmn77hjr005gjs6spu4lx4i1","tag_id":"cjmn77hid003rjs6s0zuoc9yg","_id":"cjmn77hk3005wjs6stu8lhk1f"},{"post_id":"cjmn77hjr005gjs6spu4lx4i1","tag_id":"cjmn77hie003ujs6sd95d89hh","_id":"cjmn77hk3005xjs6siwxd3mnz"},{"post_id":"cjmn77hjr005gjs6spu4lx4i1","tag_id":"cjmn77hif003yjs6sm5s82rvx","_id":"cjmn77hk3005yjs6sr3breoxp"},{"post_id":"cjmn77hjr005gjs6spu4lx4i1","tag_id":"cjmn77hk1005pjs6sdd9lt2u7","_id":"cjmn77hk4005zjs6sckwgy9ek"},{"post_id":"cjmn77hjr005gjs6spu4lx4i1","tag_id":"cjmn77hk2005qjs6sas4alem6","_id":"cjmn77hk40060js6snydjamwq"},{"post_id":"cjmn77hl40062js6sdtf0bsva","tag_id":"cjmn77hig0041js6sto4vcuna","_id":"cjmn77hl50064js6s50ib8hxd"},{"post_id":"cjmn77hl40062js6sdtf0bsva","tag_id":"cjmn77hjz005mjs6s93t4fwdz","_id":"cjmn77hl50065js6s2bctacsr"},{"post_id":"cjmn77hl40062js6sdtf0bsva","tag_id":"cjmn77hl50063js6sp49533p5","_id":"cjmn77hl50066js6scj4w5amb"}],"Tag":[{"name":"interanl storage","_id":"cjmn77hgj0003js6sahzximsj"},{"name":"external storage","_id":"cjmn77hgp0007js6smwsrmwpf"},{"name":"data","_id":"cjmn77hgu000ajs6s9qkryeov"},{"name":"system","_id":"cjmn77hgy000djs6shy3seajp"},{"name":"多用户","_id":"cjmn77hh0000gjs6sjdd621cu"},{"name":"android","_id":"cjmn77hh3000kjs6s767yjy9t"},{"name":"架构","_id":"cjmn77hh5000ojs6snr8x1td4"},{"name":"faruAndroid","_id":"cjmn77hh6000rjs6ssvcee2eb"},{"name":"Kotlin","_id":"cjmn77hha000yjs6s01p8jiek"},{"name":"RxJava","_id":"cjmn77hhb000zjs6sv0i33yat"},{"name":"Retrofit","_id":"cjmn77hhb0010js6spyredz5f"},{"name":"组件化","_id":"cjmn77hhc0011js6sy6r3h82e"},{"name":"插件化","_id":"cjmn77hhc0012js6s13ng7f4s"},{"name":"热更新","_id":"cjmn77hhc0013js6sr5dguj0g"},{"name":"持续集成","_id":"cjmn77hhd0014js6slpwfydco"},{"name":"设计模式","_id":"cjmn77hhd0015js6soeld3yzz"},{"name":"设计原则","_id":"cjmn77hhe0016js6sr0nqosil"},{"name":"android view","_id":"cjmn77hhe0017js6sr9nzsyq3"},{"name":"SSL/TLS","_id":"cjmn77hhf001ajs6soazvpznc"},{"name":"Cipher Suites","_id":"cjmn77hhg001djs6s83r8nafj"},{"name":"对称加密","_id":"cjmn77hhh001gjs6st9cz0piy"},{"name":"非对称加密","_id":"cjmn77hhh001kjs6std0syu0l"},{"name":"随机数","_id":"cjmn77hhi001njs6sxtj54unr"},{"name":"证书","_id":"cjmn77hhj001pjs6selm6bjw7"},{"name":"Certificate","_id":"cjmn77hhj001qjs6s2t04x332"},{"name":"pre Master Secret","_id":"cjmn77hhk001rjs6s9j6ljx1h"},{"name":"Master Secret","_id":"cjmn77hhk001sjs6smr9b3n2p"},{"name":"会话秘钥","_id":"cjmn77hhk001tjs6szhl10prx"},{"name":"CA","_id":"cjmn77hhl001ujs6sl9fkejxy"},{"name":"Public key","_id":"cjmn77hhl001vjs6sjaqt73ba"},{"name":"Private key","_id":"cjmn77hhm001wjs6sfumn9pv7"},{"name":"mac","_id":"cjmn77hhz002qjs6sxv531l3j"},{"name":"清理","_id":"cjmn77hi0002tjs6ssbs6rlas"},{"name":"存储空间","_id":"cjmn77hi1002wjs6s5ykp09la"},{"name":"Jetty","_id":"cjmn77hib003ljs6smdak9oq0"},{"name":"HTTPS","_id":"cjmn77hic003ojs6sdbbdcn56"},{"name":"SSL","_id":"cjmn77hid003rjs6s0zuoc9yg"},{"name":"TLS","_id":"cjmn77hie003ujs6sd95d89hh"},{"name":"Http2","_id":"cjmn77hif003yjs6sm5s82rvx"},{"name":"OkHttp","_id":"cjmn77hig0041js6sto4vcuna"},{"name":"http2","_id":"cjmn77hih0044js6safdvnc9d"},{"name":"https","_id":"cjmn77hih0047js6so231b1h8"},{"name":"cache","_id":"cjmn77hii004bjs6sglofd35s"},{"name":"IPv4","_id":"cjmn77hij004cjs6sqfrnfow7"},{"name":"IPv6","_id":"cjmn77hij004djs6sbnhbu6fb"},{"name":"Gson","_id":"cjmn77hij004ejs6suw1uulip"},{"name":"比特币","_id":"cjmn77hin004ijs6sxsve8xo2"},{"name":"区块链","_id":"cjmn77hio004ljs6sj0y6n7km"},{"name":"Android","_id":"cjmn77hio004ojs6so7rw6g2s"},{"name":"Linux","_id":"cjmn77hip004rjs6s1oqhc69z"},{"name":"Java","_id":"cjmn77hip004vjs6syshgfhe3"},{"name":"blog","_id":"cjmn77hiq0050js6s8fc75azt"},{"name":"github","_id":"cjmn77his0051js6sayc2hhg9"},{"name":"edu","_id":"cjmn77hit0052js6s3pvn4vpw"},{"name":"book","_id":"cjmn77hiu0053js6swom6sert"},{"name":"myeclipse","_id":"cjmn77hjy005ijs6s2l29qhtn"},{"name":"Maven","_id":"cjmn77hjz005mjs6s93t4fwdz"},{"name":"struts2","_id":"cjmn77hk0005ojs6suijozm2c"},{"name":"mobile-server","_id":"cjmn77hk1005pjs6sdd9lt2u7"},{"name":"server","_id":"cjmn77hk2005qjs6sas4alem6"},{"name":"struts","_id":"cjmn77hl50063js6sp49533p5"}]}}